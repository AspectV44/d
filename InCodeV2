local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
--local Window = Library.CreateLib("InCode", "Sentinel")
local colors = {
	SchemeColor = Color3.fromRGB(238, 69, 64),
	Background = Color3.fromRGB(28,28,28),
	Header = Color3.fromRGB(21,21,21),
	TextColor = Color3.fromRGB(65,65,65),
	ElementColor = Color3.fromRGB(21,21,21)
}
local Window = Library.CreateLib("InCode - Credits to the rightful owners of the Scripts Used.", colors)

local PlayerTab = Window:NewTab("Localplayer")
local PlayerSection = PlayerTab:NewSection("Scripts")
local HubsTab = Window:NewTab("Hubs")
local HubsSections = HubsTab:NewSection("Scripts")
local AnimationsTab = Window:NewTab("Animations")
local AnimationsSection = AnimationsTab:NewSection("Scripts")
local AdminTab = Window:NewTab("Admin Scripts")
local AdminSection = AdminTab:NewSection("Scripts")
local UniversalTab = Window:NewTab("Universal Scripts")
local UniversalSection = UniversalTab:NewSection("Scripts")
local GamesTab = Window:NewTab("Games")
local GamesSection = GamesTab:NewSection("Scripts")



GamesSection:NewButton("MeepCity Free Gamepasses", "Script made by ItzDanny#0001", function()
--Script made by ItzDanny 
--31/7/2021

game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Gui Made By ItzDanny";
    Color = Color3.new(255, 0, 0);
    Font = Enum.Font.SourceSansBold;
    FontSize = Enum.FontSize.Size24;
    })
     
    wait(1)
     
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Script Source : ItzDanny#0001";
    Color = Color3.new(85, 255, 255);
    Font = Enum.Font.SourceSansBold;
    FontSize = Enum.FontSize.Size24;
    })
     
    wait(1)
     
    game.StarterGui:SetCore("SendNotification", {
    Title = "Wait 1 Seconds";
    Text = "Please Wait 1 Seconds";
    })
     
    wait(1)
     
    game.StarterGui:SetCore("SendNotification", {
    Title = "InCode Gui Loaded!";
    Text = "Gui Made By ItzDanny";
    })
     
    -- Objects
     
    local MeepCity = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local Plus = Instance.new("TextButton")
    local Bantuan = Instance.new("TextButton")
    local Made = Instance.new("TextLabel")
    local Tutup = Instance.new("TextButton")
    local Boom = Instance.new("TextButton")
    local Money = Instance.new("TextButton")
    local Chalk = Instance.new("TextButton")
    local BFrame = Instance.new("Frame")
    local Dudu = Instance.new("TextLabel")
    local BanTutup = Instance.new("TextButton")
    local BuFrame = Instance.new("Frame")
    local Buka = Instance.new("TextButton")
     
    -- Properties
     
    MeepCity.Name = "InCode MeepCity"
    MeepCity.Parent = game.CoreGui
     
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = MeepCity
    MainFrame.Active = true
    MainFrame.BackgroundColor3 = Color3.new(1, 1, 1)
    MainFrame.Position = UDim2.new(0.148325354, 0, 0.268686861, 0)
    MainFrame.Size = UDim2.new(0, 470, 0, 283)
    MainFrame.Visible = false
    MainFrame.Style = Enum.FrameStyle.RobloxSquare
    MainFrame.Draggable = true
     
    Title.Name = "Title"
    Title.Parent = MainFrame
    Title.BackgroundColor3 = Color3.new(0.247059, 0.247059, 0.247059)
    Title.Position = UDim2.new(-0.0170212761, 0, -0.0282685515, 0)
    Title.Size = UDim2.new(0, 470, 0, 30)
    Title.Font = Enum.Font.SourceSansBold
    Title.Text = "InCode Meepcity"
    Title.TextColor3 = Color3.new(1, 1, 1)
    Title.TextSize = 25
    Title.TextStrokeTransparency = 0.10000000149012
     
    Plus.Name = "Plus"
    Plus.Parent = MainFrame
    Plus.BackgroundColor3 = Color3.new(0, 0, 0)
    Plus.BorderColor3 = Color3.new(0.333333, 0.333333, 0.333333)
    Plus.BorderSizePixel = 2
    Plus.Position = UDim2.new(0.0489361696, 0, 0.176678449, 0)
    Plus.Size = UDim2.new(0, 185, 0, 57)
    Plus.Font = Enum.Font.Cartoon
    Plus.Text = "Plus Game Pass"
    Plus.TextColor3 = Color3.new(1, 1, 1)
    Plus.TextSize = 20
    Plus.TextStrokeColor3 = Color3.new(0.333333, 1, 1)
    Plus.TextStrokeTransparency = 0
    Plus.MouseButton1Down:connect(function()
    game.ReplicatedStorage.PlayerData[game.Players.LocalPlayer.UserId].PLUS.Value = true
    end)
     
    Bantuan.Name = "Bantuan"
    Bantuan.Parent = MainFrame
    Bantuan.BackgroundColor3 = Color3.new(0, 0, 0)
    Bantuan.BorderColor3 = Color3.new(0.333333, 0.333333, 0.333333)
    Bantuan.BorderSizePixel = 2
    Bantuan.Position = UDim2.new(0.644680858, 0, 0.879858613, 0)
    Bantuan.Size = UDim2.new(0, 146, 0, 30)
    Bantuan.Font = Enum.Font.Cartoon
    Bantuan.Text = "Help"
    Bantuan.TextColor3 = Color3.new(1, 1, 1)
    Bantuan.TextSize = 20
    Bantuan.TextStrokeColor3 = Color3.new(0.333333, 1, 1)
    Bantuan.TextStrokeTransparency = 0
    Bantuan.MouseButton1Down:connect(function()
    BFrame.Visible = true
    end)
     
    Made.Name = "Made"
    Made.Parent = MainFrame
    Made.BackgroundColor3 = Color3.new(0.247059, 0.247059, 0.247059)
    Made.BackgroundTransparency = 1
    Made.Position = UDim2.new(0.08723405, 0, 0.936395764, 0)
    Made.Size = UDim2.new(0, 59, 0, 15)
    Made.Font = Enum.Font.SourceSansBold
    Made.Text = "Gui Made By ItzDanny"
    Made.TextColor3 = Color3.new(1, 1, 1)
    Made.TextSize = 19
    Made.TextStrokeTransparency = 0.10000000149012
     
    Tutup.Name = "Tutup"
    Tutup.Parent = MainFrame
    Tutup.BackgroundColor3 = Color3.new(0, 0, 0)
    Tutup.BorderColor3 = Color3.new(0.333333, 0.333333, 0.333333)
    Tutup.BorderSizePixel = 2
    Tutup.Position = UDim2.new(0.929787219, 0, -0.0282685515, 0)
    Tutup.Size = UDim2.new(0, 40, 0, 30)
    Tutup.Font = Enum.Font.Cartoon
    Tutup.Text = "X"
    Tutup.TextColor3 = Color3.new(1, 1, 1)
    Tutup.TextSize = 20
    Tutup.TextStrokeColor3 = Color3.new(0.333333, 1, 1)
    Tutup.TextStrokeTransparency = 0
    Tutup.MouseButton1Down:connect(function()
    MainFrame.Visible = false
    BuFrame.Visible = true
    end)
     
    Boom.Name = "Boom"
    Boom.Parent = MainFrame
    Boom.BackgroundColor3 = Color3.new(0, 0, 0)
    Boom.BorderColor3 = Color3.new(0.333333, 0.333333, 0.333333)
    Boom.BorderSizePixel = 2
    Boom.Position = UDim2.new(0.506383002, 0, 0.176678449, 0)
    Boom.Size = UDim2.new(0, 185, 0, 57)
    Boom.Font = Enum.Font.Cartoon
    Boom.Text = "Boom Box Pass"
    Boom.TextColor3 = Color3.new(1, 1, 1)
    Boom.TextSize = 20
    Boom.TextStrokeColor3 = Color3.new(0.333333, 1, 1)
    Boom.TextStrokeTransparency = 0
    Boom.MouseButton1Down:connect(function()
    game.ReplicatedStorage.PlayerData[game.Players.LocalPlayer.UserId].BoomBox.Value = true
    end)
     
    Money.Name = "Money"
    Money.Parent = MainFrame
    Money.BackgroundColor3 = Color3.new(0, 0, 0)
    Money.BorderColor3 = Color3.new(0.333333, 0.333333, 0.333333)
    Money.BorderSizePixel = 2
    Money.Position = UDim2.new(0.506383002, 0, 0.455830395, 0)
    Money.Size = UDim2.new(0, 185, 0, 57)
    Money.Font = Enum.Font.Cartoon
    Money.Text = "Money Farm"
    Money.TextColor3 = Color3.new(1, 1, 1)
    Money.TextSize = 20
    Money.TextStrokeColor3 = Color3.new(0.333333, 1, 1)
    Money.TextStrokeTransparency = 0
    Money.MouseButton1Down:connect(function()
     game.ReplicatedStorage.Connection:InvokeServer(9,2) --ItzDanny
    game.ReplicatedStorage.Connection:InvokeServer(50)
    game.ReplicatedStorage.PlayerData[game.Players.LocalPlayer.UserId].PLUS.Value = true -- this will give you more money when you sell
    while wait() do
    game.ReplicatedStorage.Connection:InvokeServer(49)
    game.ReplicatedStorage.Connection:InvokeServer(51)
    end 
    end)
     
    Chalk.Name = "Chalk"
    Chalk.Parent = MainFrame
    Chalk.BackgroundColor3 = Color3.new(0, 0, 0)
    Chalk.BorderColor3 = Color3.new(0.333333, 0.333333, 0.333333)
    Chalk.BorderSizePixel = 2
    Chalk.Position = UDim2.new(0.0489361919, 0, 0.455830395, 0)
    Chalk.Size = UDim2.new(0, 185, 0, 57)
    Chalk.Font = Enum.Font.Cartoon
    Chalk.Text = "Chalk Pass (Not working)"
    Chalk.TextColor3 = Color3.new(1, 1, 1)
    Chalk.TextSize = 20
    Chalk.TextStrokeColor3 = Color3.new(0.333333, 1, 1)
    Chalk.TextStrokeTransparency = 0
    Chalk.MouseButton1Down:connect(function()
    game.ReplicatedStorage.PlayerData[game.Players.LocalPlayer.UserId].ChalkPass.Value = true
    end)
     
    BFrame.Name = "BFrame"
    BFrame.Parent = MeepCity
    BFrame.Active = true
    BFrame.BackgroundColor3 = Color3.new(1, 1, 1)
    BFrame.Position = UDim2.new(0.185007975, 0, 0.282828301, 0)
    BFrame.Size = UDim2.new(0, 395, 0, 214)
    BFrame.Visible = false
    BFrame.Style = Enum.FrameStyle.RobloxSquare
    BFrame.Draggable = true
     
    Dudu.Name = "Dudu"
    Dudu.Parent = BFrame
    Dudu.Active = true
    Dudu.BackgroundColor3 = Color3.new(1, 1, 1)
    Dudu.BackgroundTransparency = 1
    Dudu.Position = UDim2.new(-0.0202531647, 0, -0.0186915882, 0)
    Dudu.Size = UDim2.new(0, 395, 0, 206)
    Dudu.Font = Enum.Font.SourceSansBold
    Dudu.Text = "Money Farm : Go To Phising Place PHISING THE FISH AND SELL FISH                                                                                        PLUS PASS: YOU CAN GET WINGS IN SHOP                                        ANOTHER ? I DONT KNOW , BTW THX FOR USE THIS GUI                                                                                                                                  MADE BY : ItzDanny"
    Dudu.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
    Dudu.TextSize = 19
    Dudu.TextWrapped = true
    Dudu.TextXAlignment = Enum.TextXAlignment.Left
    Dudu.TextYAlignment = Enum.TextYAlignment.Top
     
    BanTutup.Name = "BanTutup"
    BanTutup.Parent = BFrame
    BanTutup.Active = false
    BanTutup.BackgroundColor3 = Color3.new(0, 0, 0)
    BanTutup.BorderColor3 = Color3.new(0.415686, 0.415686, 0.415686)
    BanTutup.BorderSizePixel = 2
    BanTutup.Position = UDim2.new(0.493670881, 0, 0.785046697, 0)
    BanTutup.Size = UDim2.new(0, 200, 0, 50)
    BanTutup.Font = Enum.Font.SourceSansBold
    BanTutup.Text = "TUTUP / CLOSE"
    BanTutup.TextColor3 = Color3.new(1, 1, 1)
    BanTutup.TextSize = 20
    BanTutup.MouseButton1Down:connect(function()
    BFrame.Visible = false
    end)
     
    BuFrame.Name = "BuFrame"
    BuFrame.Parent = MeepCity
    BuFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    BuFrame.BorderColor3 = Color3.new(0.435294, 0.435294, 0.435294)
    BuFrame.BorderSizePixel = 2
    BuFrame.Position = UDim2.new(0, 0, 0.474747479, 0)
    BuFrame.Size = UDim2.new(0, 179, 0, 52)
     
    Buka.Name = "Buka"
    Buka.Parent = BuFrame
    Buka.BackgroundColor3 = Color3.new(1, 1, 1)
    Buka.BackgroundTransparency = 1
    Buka.Size = UDim2.new(0, 179, 0, 52)
    Buka.Font = Enum.Font.SourceSansBold
    Buka.Text = "InCode | OPEN"
    Buka.TextColor3 = Color3.new(1, 1, 1)
    Buka.TextScaled = true
    Buka.TextSize = 14
    Buka.TextWrapped = true
    Buka.MouseButton1Down:connect(function()
    BuFrame.Visible = false
    MainFrame.Visible = true
    end)
end)




PlayerSection:NewButton("Animation Changer", "Changes Player's Animation", function()
local AnimationChanger = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local TopBar = Instance.new("Frame")
local Close = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local TextLabel_2 = Instance.new("TextLabel")
local NormalTab = Instance.new("Frame")
local A_Astronaut = Instance.new("TextButton")
local A_Bubbly = Instance.new("TextButton")
local A_Cartoony = Instance.new("TextButton")
local A_Elder = Instance.new("TextButton")
local A_Knight = Instance.new("TextButton")
local A_Levitation = Instance.new("TextButton")
local A_Mage = Instance.new("TextButton")
local A_Ninja = Instance.new("TextButton")
local A_Pirate = Instance.new("TextButton")
local A_Robot = Instance.new("TextButton")
local A_Stylish = Instance.new("TextButton")
local A_SuperHero = Instance.new("TextButton")
local A_Toy = Instance.new("TextButton")
local A_Vampire = Instance.new("TextButton")
local A_Werewolf = Instance.new("TextButton")
local A_Zombie = Instance.new("TextButton")
local Category = Instance.new("TextLabel")
local SpecialTab = Instance.new("Frame")
local A_Patrol = Instance.new("TextButton")
local A_Confident = Instance.new("TextButton")
local A_Popstar = Instance.new("TextButton")
local A_Cowboy = Instance.new("TextButton")
local A_Ghost = Instance.new("TextButton")
local A_Sneaky = Instance.new("TextButton")
local A_Princess = Instance.new("TextButton")
local Category_2 = Instance.new("TextLabel")
local OtherTab = Instance.new("Frame")
local Category_3 = Instance.new("TextLabel")
local A_None = Instance.new("TextButton")
local A_Anthro = Instance.new("TextButton")
local Animate = game.Players.LocalPlayer.Character.Animate

AnimationChanger.Name = "AnimationChanger"
AnimationChanger.Parent = game:WaitForChild("CoreGui")
AnimationChanger.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = AnimationChanger
Main.BackgroundColor3 = Color3.new(0.278431, 0.278431, 0.278431)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.421999991, 0, -1, 0)
Main.Size = UDim2.new(0, 300, 0, 250)
Main.Active = true
Main.Draggable = true

TopBar.Name = "TopBar"
TopBar.Parent = Main
TopBar.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(0, 300, 0, 30)

Close.Name = "Close"
Close.Parent = TopBar
Close.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.899999976, 0, 0, 0)
Close.Size = UDim2.new(0, 30, 0, 30)
Close.Font = Enum.Font.SciFi
Close.Text = "x"
Close.TextColor3 = Color3.new(1, 0, 0.0156863)
Close.TextSize = 20
Close.MouseButton1Click:Connect(function()
    wait(0.3)
    Main:TweenPosition(UDim2.new(0.421999991, 0, -1.28400004, 0))
    wait(3)
    AnimationChanger:Destroy()
end)

TextLabel.Parent = TopBar
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0, 0, 0.600000024, 0)
TextLabel.Size = UDim2.new(0, 270, 0, 10)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Made by Nyser#4623"
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextSize = 15

TextLabel_2.Parent = TopBar
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0, 0, -0.0266667679, 0)
TextLabel_2.Size = UDim2.new(0, 270, 0, 20)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Animation Changer"
TextLabel_2.TextColor3 = Color3.new(1, 1, 1)
TextLabel_2.TextSize = 20

NormalTab.Name = "NormalTab"
NormalTab.Parent = Main
NormalTab.BackgroundColor3 = Color3.new(0.278431, 0.278431, 0.278431)
NormalTab.BackgroundTransparency = 1
NormalTab.BorderSizePixel = 0
NormalTab.Position = UDim2.new(0.5, 0, 0.119999997, 0)
NormalTab.Size = UDim2.new(0, 150, 0, 500)

A_Astronaut.Name = "A_Astronaut"
A_Astronaut.Parent = NormalTab
A_Astronaut.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Astronaut.BorderSizePixel = 0
A_Astronaut.Position = UDim2.new(0, 0, 0.815764725, 0)
A_Astronaut.Size = UDim2.new(0, 150, 0, 30)
A_Astronaut.Font = Enum.Font.SciFi
A_Astronaut.Text = "Astronaut"
A_Astronaut.TextColor3 = Color3.new(1, 1, 1)
A_Astronaut.TextSize = 20
A_Astronaut.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=891621366"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=891633237"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=891667138"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=891636393"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=891627522"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=891609353"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=891617961"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Bubbly.Name = "A_Bubbly"
A_Bubbly.Parent = NormalTab
A_Bubbly.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Bubbly.BorderSizePixel = 0
A_Bubbly.Position = UDim2.new(0, 0, 0.349019617, 0)
A_Bubbly.Size = UDim2.new(0, 150, 0, 30)
A_Bubbly.Font = Enum.Font.SciFi
A_Bubbly.Text = "Bubbly"
A_Bubbly.TextColor3 = Color3.new(1, 1, 1)
A_Bubbly.TextSize = 20
A_Bubbly.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=910004836"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=910009958"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=910034870"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=910025107"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=910016857"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=910001910"
Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=910030921"
Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=910028158"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Cartoony.Name = "A_Cartoony"
A_Cartoony.Parent = NormalTab
A_Cartoony.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Cartoony.BorderSizePixel = 0
A_Cartoony.Position = UDim2.new(0, 0, 0.407272667, 0)
A_Cartoony.Size = UDim2.new(0, 150, 0, 30)
A_Cartoony.Font = Enum.Font.SciFi
A_Cartoony.Text = "Cartoony"
A_Cartoony.TextColor3 = Color3.new(1, 1, 1)
A_Cartoony.TextSize = 20
A_Cartoony.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=742637544"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=742638445"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=742640026"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=742638842"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=742637942"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=742636889"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=742637151"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Elder.Name = "A_Elder"
A_Elder.Parent = NormalTab
A_Elder.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Elder.BorderSizePixel = 0
A_Elder.Position = UDim2.new(6.51925802e-09, 0, 0.636310041, 0)
A_Elder.Size = UDim2.new(0, 150, 0, 30)
A_Elder.Font = Enum.Font.SciFi
A_Elder.Text = "Elder"
A_Elder.TextColor3 = Color3.new(1, 1, 1)
A_Elder.TextSize = 20
A_Elder.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=845397899"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=845400520"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=845403856"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=845386501"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=845398858"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=845392038"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=845396048"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Knight.Name = "A_Knight"
A_Knight.Parent = NormalTab
A_Knight.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Knight.BorderSizePixel = 0
A_Knight.Position = UDim2.new(0, 0, 0.52352941, 0)
A_Knight.Size = UDim2.new(0, 150, 0, 30)
A_Knight.Font = Enum.Font.SciFi
A_Knight.Text = "Knight"
A_Knight.TextColor3 = Color3.new(1, 1, 1)
A_Knight.TextSize = 20
A_Knight.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=657595757"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=657568135"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=657552124"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=657564596"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=658409194"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=658360781"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=657600338"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Levitation.Name = "A_Levitation"
A_Levitation.Parent = NormalTab
A_Levitation.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Levitation.BorderSizePixel = 0
A_Levitation.Position = UDim2.new(0, 0, 0.115472436, 0)
A_Levitation.Size = UDim2.new(0, 150, 0, 30)
A_Levitation.Font = Enum.Font.SciFi
A_Levitation.Text = "Levitation"
A_Levitation.TextColor3 = Color3.new(1, 1, 1)
A_Levitation.TextSize = 20
A_Levitation.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616006778"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616008087"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616010382"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616008936"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616003713"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616005863"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Mage.Name = "A_Mage"
A_Mage.Parent = NormalTab
A_Mage.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Mage.BorderSizePixel = 0
A_Mage.Position = UDim2.new(0, 0, 0.696203232, 0)
A_Mage.Size = UDim2.new(0, 150, 0, 30)
A_Mage.Font = Enum.Font.SciFi
A_Mage.Text = "Mage"
A_Mage.TextColor3 = Color3.new(1, 1, 1)
A_Mage.TextSize = 20
A_Mage.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=707742142"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=707855907"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=707897309"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=707861613"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=707853694"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=707826056"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Ninja.Name = "A_Ninja"
A_Ninja.Parent = NormalTab
A_Ninja.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Ninja.BorderSizePixel = 0
A_Ninja.Position = UDim2.new(0, 0, 0.0597896464, 0)
A_Ninja.Size = UDim2.new(0, 150, 0, 30)
A_Ninja.Font = Enum.Font.SciFi
A_Ninja.Text = "Ninja"
A_Ninja.TextColor3 = Color3.new(1, 1, 1)
A_Ninja.TextSize = 20
A_Ninja.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=656117400"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=656118341"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=656121766"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=656118852"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=656117878"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=656114359"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=656115606"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Pirate.Name = "A_Pirate"
A_Pirate.Parent = NormalTab
A_Pirate.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Pirate.BorderSizePixel = 0
A_Pirate.Position = UDim2.new(-0.000333309174, 0, 0.874588311, 0)
A_Pirate.Size = UDim2.new(0, 150, 0, 30)
A_Pirate.Font = Enum.Font.SciFi
A_Pirate.Text = "Pirate"
A_Pirate.TextColor3 = Color3.new(1, 1, 1)
A_Pirate.TextSize = 20
A_Pirate.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=750781874"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=750782770"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=750785693"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=750783738"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=750782230"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=750779899"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=750780242"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Robot.Name = "A_Robot"
A_Robot.Parent = NormalTab
A_Robot.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Robot.BorderSizePixel = 0
A_Robot.Position = UDim2.new(0, 0, 0.291479498, 0)
A_Robot.Size = UDim2.new(0, 150, 0, 30)
A_Robot.Font = Enum.Font.SciFi
A_Robot.Text = "Robot"
A_Robot.TextColor3 = Color3.new(1, 1, 1)
A_Robot.TextSize = 20
A_Robot.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616088211"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616089559"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616095330"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616091570"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616090535"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616086039"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616087089"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Stylish.Name = "A_Stylish"
A_Stylish.Parent = NormalTab
A_Stylish.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Stylish.BorderSizePixel = 0
A_Stylish.Position = UDim2.new(0, 0, 0.232816339, 0)
A_Stylish.Size = UDim2.new(0, 150, 0, 30)
A_Stylish.Font = Enum.Font.SciFi
A_Stylish.Text = "Stylish"
A_Stylish.TextColor3 = Color3.new(1, 1, 1)
A_Stylish.TextSize = 20
A_Stylish.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616136790"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616138447"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616146177"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616140816"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616139451"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616133594"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616134815"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_SuperHero.Name = "A_SuperHero"
A_SuperHero.Parent = NormalTab
A_SuperHero.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_SuperHero.BorderSizePixel = 0
A_SuperHero.Position = UDim2.new(0, 0, 0.464919746, 0)
A_SuperHero.Size = UDim2.new(0, 150, 0, 30)
A_SuperHero.Font = Enum.Font.SciFi
A_SuperHero.Text = "SuperHero"
A_SuperHero.TextColor3 = Color3.new(1, 1, 1)
A_SuperHero.TextSize = 20
A_SuperHero.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616111295"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616113536"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616122287"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616117076"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616115533"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616104706"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616108001"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Toy.Name = "A_Toy"
A_Toy.Parent = NormalTab
A_Toy.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Toy.BorderSizePixel = 0
A_Toy.Position = UDim2.new(6.51925802e-09, 0, 0.756028414, 0)
A_Toy.Size = UDim2.new(0, 150, 0, 30)
A_Toy.Font = Enum.Font.SciFi
A_Toy.Text = "Toy"
A_Toy.TextColor3 = Color3.new(1, 1, 1)
A_Toy.TextSize = 20
A_Toy.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=782843345"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Vampire.Name = "A_Vampire"
A_Vampire.Parent = NormalTab
A_Vampire.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Vampire.BorderSizePixel = 0
A_Vampire.Position = UDim2.new(0, 0, 0.934021354, 0)
A_Vampire.Size = UDim2.new(0, 150, 0, 30)
A_Vampire.Font = Enum.Font.SciFi
A_Vampire.Text = "Vampire"
A_Vampire.TextColor3 = Color3.new(1, 1, 1)
A_Vampire.TextSize = 20
A_Vampire.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083445855"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083450166"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083473930"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083462077"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083455352"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083439238"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083443587"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Werewolf.Name = "A_Werewolf"
A_Werewolf.Parent = NormalTab
A_Werewolf.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Werewolf.BorderSizePixel = 0
A_Werewolf.Position = UDim2.new(-0.000333368778, 0, 0.174509808, 0)
A_Werewolf.Size = UDim2.new(0, 150, 0, 30)
A_Werewolf.Font = Enum.Font.SciFi
A_Werewolf.Text = "Werewolf"
A_Werewolf.TextColor3 = Color3.new(1, 1, 1)
A_Werewolf.TextSize = 20
A_Werewolf.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083195517"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083214717"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083178339"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083216690"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083182000"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083189019"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Zombie.Name = "A_Zombie"
A_Zombie.Parent = NormalTab
A_Zombie.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Zombie.BorderSizePixel = 0
A_Zombie.Position = UDim2.new(-1.1920929e-07, 0, 0.582352936, 0)
A_Zombie.Size = UDim2.new(0, 150, 0, 30)
A_Zombie.Font = Enum.Font.SciFi
A_Zombie.Text = "Zombie"
A_Zombie.TextColor3 = Color3.new(1, 1, 1)
A_Zombie.TextSize = 20
A_Zombie.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616158929"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616160636"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616168032"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

Category.Name = "Category"
Category.Parent = NormalTab
Category.BackgroundColor3 = Color3.new(0.156863, 0.156863, 0.156863)
Category.BorderSizePixel = 0
Category.Size = UDim2.new(0, 150, 0, 30)
Category.Text = "Normal"
Category.TextColor3 = Color3.new(0, 0.835294, 1)
Category.TextSize = 14

SpecialTab.Name = "SpecialTab"
SpecialTab.Parent = Main
SpecialTab.BackgroundColor3 = Color3.new(0.278431, 0.278431, 0.278431)
SpecialTab.BackgroundTransparency = 1
SpecialTab.BorderSizePixel = 0
SpecialTab.Position = UDim2.new(0, 0, 0.119999997, 0)
SpecialTab.Size = UDim2.new(0, 150, 0, 230)

A_Patrol.Name = "A_Patrol"
A_Patrol.Parent = SpecialTab
A_Patrol.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Patrol.BorderSizePixel = 0
A_Patrol.Position = UDim2.new(0, 0, 0.259960413, 0)
A_Patrol.Size = UDim2.new(0, 150, 0, 30)
A_Patrol.Font = Enum.Font.SciFi
A_Patrol.Text = "Patrol"
A_Patrol.TextColor3 = Color3.new(1, 1, 1)
A_Patrol.TextSize = 20
A_Patrol.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1149612882"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1150842221"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1151231493"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1150967949"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1148811837"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1148811837"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1148863382"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Confident.Name = "A_Confident"
A_Confident.Parent = SpecialTab
A_Confident.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Confident.BorderSizePixel = 0
A_Confident.Position = UDim2.new(0, 0, 0.389248967, 0)
A_Confident.Size = UDim2.new(0, 150, 0, 30)
A_Confident.Font = Enum.Font.SciFi
A_Confident.Text = "Confident"
A_Confident.TextColor3 = Color3.new(1, 1, 1)
A_Confident.TextSize = 20
A_Confident.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1069977950"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1069987858"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1070017263"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1070001516"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1069984524"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1069946257"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1069973677"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Popstar.Name = "A_Popstar"
A_Popstar.Parent = SpecialTab
A_Popstar.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Popstar.BorderSizePixel = 0
A_Popstar.Position = UDim2.new(0, 0, 0.130671918, 0)
A_Popstar.Size = UDim2.new(0, 150, 0, 30)
A_Popstar.Font = Enum.Font.SciFi
A_Popstar.Text = "Popstar"
A_Popstar.TextColor3 = Color3.new(1, 1, 1)
A_Popstar.TextSize = 20
A_Popstar.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1212900985"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1150842221"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980338"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980348"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1212954642"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1213044953"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1212900995"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Cowboy.Name = "A_Cowboy"
A_Cowboy.Parent = SpecialTab
A_Cowboy.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Cowboy.BorderSizePixel = 0
A_Cowboy.Position = UDim2.new(0, 0, 0.772964239, 0)
A_Cowboy.Size = UDim2.new(0, 150, 0, 30)
A_Cowboy.Font = Enum.Font.SciFi
A_Cowboy.Text = "Cowboy"
A_Cowboy.TextColor3 = Color3.new(1, 1, 1)
A_Cowboy.TextSize = 20
A_Cowboy.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1014390418"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1014398616"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1014421541"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1014401683"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1014394726"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1014380606"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1014384571"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Ghost.Name = "A_Ghost"
A_Ghost.Parent = SpecialTab
A_Ghost.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Ghost.BorderSizePixel = 0
A_Ghost.Position = UDim2.new(0, 0, 0.900632322, 0)
A_Ghost.Size = UDim2.new(0, 150, 0, 30)
A_Ghost.Font = Enum.Font.SciFi
A_Ghost.Text = "Ghost"
A_Ghost.TextColor3 = Color3.new(1, 1, 1)
A_Ghost.TextSize = 20
A_Ghost.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616006778"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616008087"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616008936"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616005863"
Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616012453"
Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616011509"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Sneaky.Name = "A_Sneaky"
A_Sneaky.Parent = SpecialTab
A_Sneaky.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Sneaky.BorderSizePixel = 0
A_Sneaky.Position = UDim2.new(0, 0, 0.517628431, 0)
A_Sneaky.Size = UDim2.new(0, 150, 0, 30)
A_Sneaky.Font = Enum.Font.SciFi
A_Sneaky.Text = "Sneaky"
A_Sneaky.TextColor3 = Color3.new(1, 1, 1)
A_Sneaky.TextSize = 20
A_Sneaky.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1132473842"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1132477671"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1132510133"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1132494274"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1132489853"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1132461372"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1132469004"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Princess.Name = "A_Princess"
A_Princess.Parent = SpecialTab
A_Princess.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Princess.BorderSizePixel = 0
A_Princess.Position = UDim2.new(0, 0, 0.645296335, 0)
A_Princess.Size = UDim2.new(0, 150, 0, 30)
A_Princess.Font = Enum.Font.SciFi
A_Princess.Text = "Princess"
A_Princess.TextColor3 = Color3.new(1, 1, 1)
A_Princess.TextSize = 20
A_Princess.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=941003647"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=941013098"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=941028902"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=941015281"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=941008832"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=940996062"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=941000007"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

Category_2.Name = "Category"
Category_2.Parent = SpecialTab
Category_2.BackgroundColor3 = Color3.new(0.156863, 0.156863, 0.156863)
Category_2.BorderSizePixel = 0
Category_2.Size = UDim2.new(0, 150, 0, 30)
Category_2.Text = "Special"
Category_2.TextColor3 = Color3.new(0, 0.835294, 1)
Category_2.TextSize = 14

OtherTab.Name = "OtherTab"
OtherTab.Parent = Main
OtherTab.BackgroundColor3 = Color3.new(0.278431, 0.278431, 0.278431)
OtherTab.BackgroundTransparency = 1
OtherTab.BorderSizePixel = 0
OtherTab.Position = UDim2.new(0, 0, 1.06800008, 0)
OtherTab.Size = UDim2.new(0, 150, 0, 220)

Category_3.Name = "Category"
Category_3.Parent = OtherTab
Category_3.BackgroundColor3 = Color3.new(0.156863, 0.156863, 0.156863)
Category_3.BorderSizePixel = 0
Category_3.Size = UDim2.new(0, 150, 0, 30)
Category_3.Text = "Other"
Category_3.TextColor3 = Color3.new(0, 0.835294, 1)
Category_3.TextSize = 14

A_None.Name = "A_None"
A_None.Parent = OtherTab
A_None.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_None.BorderSizePixel = 0
A_None.Position = UDim2.new(0, 0, 0.134545445, 0)
A_None.Size = UDim2.new(0, 150, 0, 30)
A_None.Font = Enum.Font.SciFi
A_None.Text = "None"
A_None.TextColor3 = Color3.new(1, 1, 1)
A_None.TextSize = 20
A_None.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=0"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

A_Anthro.Name = "A_Anthro"
A_Anthro.Parent = OtherTab
A_Anthro.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
A_Anthro.BorderSizePixel = 0
A_Anthro.Position = UDim2.new(0, 0, 0.269090891, 0)
A_Anthro.Size = UDim2.new(0, 150, 0, 30)
A_Anthro.Font = Enum.Font.SciFi
A_Anthro.Text = "Anthro (Default)"
A_Anthro.TextColor3 = Color3.new(1, 1, 1)
A_Anthro.TextSize = 20
A_Anthro.MouseButton1Click:Connect(function()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=2510196951"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=2510197257"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=2510202577"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=2510198475"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=2510197830"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=2510192778"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=2510195892"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

wait(1)
Main:TweenPosition(UDim2.new(0.421999991, 0, 0.28400004, 0))

end)


PlayerSection:NewButton("BALL", "ROLL", function()
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

local SPEED_MULTIPLIER = 30
local JUMP_POWER = 60
local JUMP_GAP = 0.3

local character = game.Players.LocalPlayer.Character

for i,v in ipairs(character:GetDescendants()) do
    if v:IsA("BasePart") then
        v.CanCollide = false
    end
end

local ball = character.HumanoidRootPart
ball.Shape = Enum.PartType.Ball
ball.Size = Vector3.new(5,5,5)
local humanoid = character:WaitForChild("Humanoid")
local params = RaycastParams.new()
params.FilterType = Enum.RaycastFilterType.Blacklist
params.FilterDescendantsInstances = {character}

local tc = RunService.RenderStepped:Connect(function(delta)
    ball.CanCollide = true
    humanoid.PlatformStand = true
	if UserInputService:GetFocusedTextBox() then return end
	if UserInputService:IsKeyDown("W") then
		ball.RotVelocity -= Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
	end
	if UserInputService:IsKeyDown("A") then
		ball.RotVelocity -= Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
	end
	if UserInputService:IsKeyDown("S") then
		ball.RotVelocity += Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
	end
	if UserInputService:IsKeyDown("D") then
		ball.RotVelocity += Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
	end
	--ball.RotVelocity = ball.RotVelocity - Vector3.new(0,ball.RotVelocity.Y/50,0)
end)

UserInputService.JumpRequest:Connect(function()
	local result = workspace:Raycast(
		ball.Position,
		Vector3.new(
			0,
			-((ball.Size.Y/2)+JUMP_GAP),
			0
		),
		params
	)
	if result then
		ball.Velocity = ball.Velocity + Vector3.new(0,JUMP_POWER,0)
	end
end)

Camera.CameraSubject = ball
humanoid.Died:Connect(function() tc:Disconnect() end)
end)

UniversalSection:NewButton("Chat Translater", "Executes A Translater", function()
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

ChatMode = "private"
DeviceSpoofing = "Redmi Note 8 Pro"

local source_languages = {
["de"]=true,
["ru"]=true,
["fr"]=true,
["es"]=true,
["tr"]=true,
["ja"]=true,
["no"]=true,
["ro"]=true,
["pt"]=true,
["zh"]=true,
["ko"]=true,
["ar"]=true,
["sq"]=true,
["it"]=true,
["el"]=true,
["vi"]=true,
["he"]=true,
["da"]=true,
["pl"]=true,
["sv"]=true
}

local blacklisted_words = {
["axe"]=true
}


local blacklisted_players = {
["mk15ru6l3g"]=true,
["Loostys"]=true,
["vintaqeo"]=true
}


game:GetService("StarterGui"):SetCore("SendNotification", {
Title = "In-Line ChatTranslator";
Text = "Loaded";
Duration = 5;
})

Translate = function(plr)
plr.Chatted:Connect(function(Message)

local detect_lan = syn.request({["Url"] = 'https://translate.yandex.net/api/v1/tr.json/translate?srv=android&lang=en&text='..HttpService:UrlEncode(Message),["Headers"] = {["User-Agent"] = "Mozilla/5.0 (Linux; Android 10; "..DeviceSpoofing..") AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Mobile Safari/537.36",["Accept-Charset"] = "utf-8"}})
local translate = detect_lan.Body
local decoded = HttpService:JSONDecode(translate)

local detect_lan_fixed = decoded.lang:split("-")

if Message:sub(1,2) == "/e" or Message:sub(1,2) == "/w" or Message:sub(1,2) == "/t" and not plr.Name == game.Players.LocalPlayer.Name then

else
if source_languages[detect_lan_fixed[1]] and not blacklisted_words[Message] and not blacklisted_players[plr.Name] then

if detect_lan_fixed[1] == "de" then
detect_lan_fixed[1] = "German"
elseif detect_lan_fixed[1] == "ru" then
detect_lan_fixed[1] = "Russian"
elseif detect_lan_fixed[1] == "fr" then
detect_lan_fixed[1] = "French"
elseif detect_lan_fixed[1] == "es" then
detect_lan_fixed[1] = "Spanish"
elseif detect_lan_fixed[1] == "tr" then
detect_lan_fixed[1] = "Turkish"
elseif detect_lan_fixed[1] == "ja" then
detect_lan_fixed[1] = "Japanese"
elseif detect_lan_fixed[1] == "no" then
detect_lan_fixed[1] = "Norwegian"
elseif detect_lan_fixed[1] == "ro" then
detect_lan_fixed[1] = "Romanian"
elseif detect_lan_fixed[1] == "pt" then
detect_lan_fixed[1] = "Portuguese"
elseif detect_lan_fixed[1] == "zh" then
detect_lan_fixed[1] = "Chinese"
elseif detect_lan_fixed[1] == "ko" then
detect_lan_fixed[1] = "Korean"
elseif detect_lan_fixed[1] == "ar" then
detect_lan_fixed[1] = "Arabic"
elseif detect_lan_fixed[1] == "sq" then
detect_lan_fixed[1] = "Albanian"
elseif detect_lan_fixed[1] == "it" then
detect_lan_fixed[1] = "Italian"
elseif detect_lan_fixed[1] == "el" then
detect_lan_fixed[1] = "Greek"
elseif detect_lan_fixed[1] == "vi" then
detect_lan_fixed[1] = "Vietnamese"
elseif detect_lan_fixed[1] == "he" then
detect_lan_fixed[1] = "Hebrew"
elseif detect_lan_fixed[1] == "da" then
detect_lan_fixed[1] = "Danish"
elseif detect_lan_fixed[1] == "pl" then
detect_lan_fixed[1] = "Polish"
elseif detect_lan_fixed[1] == "sv" then
detect_lan_fixed[1] = "Swedish"
end


local response = syn.request({["Url"] = 'https://translate.google.com/m?hl=en&sl=auto&tl=en&ie=UTF-8&prev=_m&q='..HttpService:UrlEncode(Message),["Headers"] = {["Accept-Charset"] = "utf-8"}})
local translate = response.Body

local t_start = tonumber(translate:find('class="t0"')+11)
local t_end = translate:find('class="blue ub db center"')
local trimmed = translate:sub(t_start, t_end)
local trimmed_end = trimmed:find("</div>")  --trimmed end
local trimmed_final_len = trimmed:sub(trimmed_end):len()

local fixed_translate_end = translate:sub(t_start, t_end-trimmed_final_len) --Translated message

if ChatMode == "private" then
game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage",{
Text = "["..plr.Name.."] ["..detect_lan_fixed[1].."]"..": "..fixed_translate_end:gsub("(&#39;)", "'"):gsub("(&quot;)", '"'),
Color = Color3.new(1, 0, 0)
})
elseif ChatMode == "public" then
local A_1 = "["..plr.Name.."] ["..detect_lan_fixed[1].."]"..": "..fixed_translate_end:gsub("(&#39;)", "'"):gsub("(&quot;)", '"')
local A_2 = "All"
local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
Event:FireServer(A_1, A_2)
end

end
end

if Message:sub(1,2) == "/e" and plr.Name == game.Players.LocalPlayer.Name then
local target_lan = Message:sub(4, 5, #Message)
local tMessage = Message:sub(7, #Message)

local response = syn.request({["Url"] = 'https://translate.google.com/m?hl=en&sl=auto&tl='..target_lan..'&ie=UTF-8&prev=_m&q='..HttpService:UrlEncode(tMessage),["Headers"] = {["Accept-Charset"] = "utf-8"}})
local translate = response.Body

local t_start = tonumber(translate:find('class="t0"')+11)
local t_end = translate:find('class="blue ub db center"')
local trimmed = translate:sub(t_start, t_end)
local trimmed_end = trimmed:find("</div>")  --trimmed end
local trimmed_final_len = trimmed:sub(trimmed_end):len()

local fixed_translate_end = translate:sub(t_start, t_end-trimmed_final_len) --Translated message


local A_1 = fixed_translate_end:gsub("(&#39;)", "'"):gsub("(&quot;)", '"')
local A_2 = "All"
local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
Event:FireServer(A_1, A_2)
end

end)

end

for _, plr in pairs(game.Players:GetChildren()) do
Translate(plr)
end

game.Players.PlayerAdded:connect(function(player)
Translate(player)
end) 
end)


GamesSection:NewButton("Phantom Forces", "Executes a Phantom Forces Script", function()
--BROUGHT TO YOU BY RSCRIPTS.NET!--


loadstring(game:HttpGet("https://bruh.keshhub.com/.lua"))()


end)

GamesSection:NewButton("HSL Headless", "Look at the name...", function()

	loadstring(game:HttpGet("https://raw.githubusercontent.com/AspectV44/d/main/Obfuscated%20Script", true))()
end)


UniversalSection:NewButton("Sheds Bypasser", "Runs Sheds Bypasser", function()
	--BROUGHT TO YOU BY RSCRIPTS.NET!--

	loadstring(game:HttpGet("https://the-shed.xyz/roblox/scripts/ChatBypass", true))()
end)

PlayerSection:NewKeybind("Toggle Key", "Change The Toggle Key", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)

GamesSection:NewButton("KAT", "Runs A KAT Script", function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/mememasterboi/a-lot-of-scripts/master/Output%20(6).lua'),true))()
end)


GamesSection:NewButton("Piggy", "Runs A Piggy Script", function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/lolpoppyus/Roblox-Lua/master/Piggy'),true))()
end)


GamesSection:NewButton("Rocitizens (May not work)", "Runs A Money Script For Rocitizens", function()
	_G.Loop = true


	while _G.Loop do
		local args = {
			[1] = math.huge
		}

		workspace.CommunicationRelays.Transaction.CollectBonus:InvokeServer(unpack(args))
		wait()
	end
end)


GamesSection:NewButton("Wild West", "Runs A Wild West Script", function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/iiJxkeyz/Ellie/master/WildWestHaxx'),true))()
end)

GamesSection:NewButton("Ragdoll Engine", "Runs A Ragdoll Engine Script", function()
	loadstring(game:HttpGet("https://bruh.keshhub.com/.lua"))()
end)

GamesSection:NewButton("Arsenal", "Runs An Arsenal Script", function()
--BROUGHT TO YOU BY RSCRIPTS.NET!--

loadstring(game:HttpGet("https://raw.githubusercontent.com/HonestlyDex/DexHub/main/Init"))()
end)


GamesSection:NewButton("Jailbreak (Updated)", "Runs A Jailbreak Script", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Vynixius/main/Jailbreak/Jailbreak"))()
end)


GamesSection:NewButton("Prison Life", "Runs A Prison Life Script", function()
--BROUGHT TO YOU BY RSCRIPTS.NET--

loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Scripts/master/Vynixius%20Prison%20Life"))()
end)




UniversalSection:NewButton("AudioStealer", "Runs Audio Stealer", function()
	aa = game:GetObjects("rbxassetid://01997056190")[1]
	aa.Parent = game.CoreGui
	wait(0.2)
	GUI = aa.PopupFrame.PopupFrame
	pos = 0

	ignore = {
		"rbxasset://sounds/action_get_up.mp3",
		"rbxasset://sounds/uuhhh.mp3",
		"rbxasset://sounds/action_falling.mp3",
		"rbxasset://sounds/action_jump.mp3",
		"rbxasset://sounds/action_jump_land.mp3",
		"rbxasset://sounds/impact_water.mp3",
		"rbxasset://sounds/action_swim.mp3",
		"rbxasset://sounds/action_footsteps_plastic.mp3"
	}

	GUI.Close.MouseButton1Click:connect(function()
		GUI:TweenSize(UDim2.new(0, 360, 0, 0),"Out","Quad",0.5,true) wait(0.6)
		GUI.Parent:TweenSize(UDim2.new(0, 0, 0, 20),"Out","Quad",0.5,true) wait(0.6)
		aa:Destroy()
	end)

	local min = false
	GUI.Minimize.MouseButton1Click:connect(function()
		if min == false then
			GUI:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) min = true
		else
			GUI:TweenSize(UDim2.new(0, 360, 0, 260),"Out","Quad",0.5,true) min = false
		end
	end)

	function printTable(tbl)
		if type(tbl) ~= 'table' then return nil end
		local depthCount = -15

		local function run(val, inPrefix)
			depthCount = depthCount + 15
			-- if inPrefix then print(string.rep(' ', depthCount) .. '{') end
			for i,v in pairs(val) do
				if type(v) == 'table' then
					-- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {')
					GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {'
					run(v, false)
					wait()
				else
					-- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v))
					GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v)
					wait()
				end
			end
			-- print(string.rep(' ', depthCount) .. '}')
			depthCount = depthCount - 15
		end
		run(tbl, true)
	end

	function refreshlist()
		pos = 0
		GUI.Logs.CanvasSize = UDim2.new(0,0,0,0)
		for i,v in pairs(GUI.Logs:GetChildren()) do
			v.Position = UDim2.new(0,0,0, pos)
			GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
			pos = pos+20
		end
	end

	function FindTable(Table, Name)
		for i,v in pairs(Table) do
			if v == Name then
				return true
			end end
		return false
	end

	function writefileExploit()
		if writefile then
			return true
		end
	end

	writeaudio = {}
	running = false
	GUI.SS.MouseButton1Click:connect(function()
		if writefileExploit() then
			if running == false then
				GUI.Load.Visible = true running = true
				GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
				for _, child in pairs(GUI.Logs:GetChildren()) do
					if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
						if bttn.BackgroundTransparency == 0 then
							writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
						end
					end
				end
				GUI.Store.Visible = true
				printTable(writeaudio)
				wait(0.2)
				local filename = 0
				local function write()
					local file
					pcall(function() file = readfile("Audios"..filename..".txt") end)
					if file then
						filename = filename+1
						write()
					else
						local text = tostring(GUI.Store.Text)
						text = text:gsub('\n', '\r\n')
						writefile("Audios"..filename..".txt", text)
					end
				end
				write()
				for rep = 1,10 do
					GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
					wait(0.05)
				end
				GUI.Load.Visible = false
				GUI.Load.BackgroundTransparency = 0
				GUI.Load.Size = UDim2.new(0, 0, 0, 20)
				running = false
				GUI.Store.Visible = false
				GUI.Store.Text = ''
				writeaudio = {}
				game:FindService('StarterGui'):SetCore('SendNotification', {
					Title = 'Audio Logger',
					Text = 'Saved audios\n(Audios'..filename..'.txt)',
					Icon = 'http://www.roblox.com/asset/?id=176572847',
					Duration = 5,
				})
			end
		else
			game:FindService('StarterGui'):SetCore('SendNotification', {
				Title = 'Audio Logger',
				Text = 'Exploit cannot writefile :(',
				Icon = 'http://www.roblox.com/asset/?id=176572847',
				Duration = 5,
			})
		end
	end)

	GUI.SA.MouseButton1Click:connect(function()
		if writefileExploit() then
			if running == false then
				GUI.Load.Visible = true running = true
				GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
				for _, child in pairs(GUI.Logs:GetChildren()) do
					writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
				end
				GUI.Store.Visible = true
				printTable(writeaudio)
				wait(0.2)
				local filename = 0
				local function write()
					local file
					pcall(function() file = readfile("Audios"..filename..".txt") end)
					if file then
						filename = filename+1
						write()
					else
						local text = tostring(GUI.Store.Text)
						text = text:gsub('\n', '\r\n')
						writefile("Audios"..filename..".txt", text)
					end
				end
				write()
				for rep = 1,10 do
					GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
					wait(0.05)
				end
				GUI.Load.Visible = false
				GUI.Load.BackgroundTransparency = 0
				GUI.Load.Size = UDim2.new(0, 0, 0, 20)
				running = false
				GUI.Store.Visible = false
				GUI.Store.Text = ''
				writeaudio = {}
				game:FindService('StarterGui'):SetCore('SendNotification', {
					Title = 'Audio Logger',
					Text = 'Saved audios\n(Audios'..filename..'.txt)',
					Icon = 'http://www.roblox.com/asset/?id=176572847',
					Duration = 5,
				})
			end
		else
			game:FindService('StarterGui'):SetCore('SendNotification', {
				Title = 'Audio Logger',
				Text = 'Exploit cannot writefile :(',
				Icon = 'http://www.roblox.com/asset/?id=176572847',
				Duration = 5,
			})
		end
	end)

	selectedaudio = nil
	function getaudio(place)
		if running == false then
			GUI.Load.Visible = true running = true
			GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
			for _, child in pairs(place:GetDescendants()) do
				spawn(function()
					if child:IsA("Sound") and not GUI.Logs:FindFirstChild(child.SoundId) and not FindTable(ignore,child.SoundId) then
						local id = string.match(child.SoundId, "rbxasset://sounds.+") or string.match(child.SoundId, "&hash=.+") or string.match(child.SoundId, "%d+")
						if id ~= nil then		
							local newsound = GUI.Audio:Clone()
							if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
								id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
								newsound.ImageButton.Image = 'rbxassetid://1453863294'
							end
							newsound.Parent = GUI.Logs
							newsound.Name = child.SoundId
							newsound.Visible = true
							newsound.Position = UDim2.new(0,0,0, pos)
							GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
							pos = pos+20
							local function findname()
								Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
							end
							local audioname = 'error'
							local success, message = pcall(findname)
							if success then
								newsound.TextLabel.Text = Asset.Name
								audioname = Asset.Name
							else
								newsound.TextLabel.Text = child.Name
								audioname = child.Name
							end
							local data = Instance.new('StringValue') data.Parent = newsound data.Value = child.SoundId data.Name = 'ID'
							local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
							local soundselected = false
							newsound.ImageButton.MouseButton1Click:Connect(function()
								if GUI.Info.Visible ~= true then
									if soundselected == false then soundselected = true
										newsound.ImageButton.BackgroundTransparency = 0
									else soundselected = false
										newsound.ImageButton.BackgroundTransparency = 1
									end
								end
							end)
							newsound.Click.MouseButton1Click:Connect(function()
								if GUI.Info.Visible ~= true then
									GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. child.SoundId .. "\n\nWorkspace Name: " .. child.Name
									selectedaudio = child.SoundId
									GUI.Info.Visible = true
								end
							end)
						end
					end
				end)
			end
		end
		for rep = 1,10 do
			GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
			wait(0.05)
		end
		GUI.Load.Visible = false
		GUI.Load.BackgroundTransparency = 0
		GUI.Load.Size = UDim2.new(0, 0, 0, 20)
		running = false
	end

	GUI.All.MouseButton1Click:connect(function() getaudio(game)end)
	GUI.Workspace.MouseButton1Click:connect(function() getaudio(workspace)end)
	GUI.Lighting.MouseButton1Click:connect(function() getaudio(game:GetService('Lighting'))end)
	GUI.SoundS.MouseButton1Click:connect(function() getaudio(game:GetService('SoundService'))end)
	GUI.Clr.MouseButton1Click:connect(function()
		for _, child in pairs(GUI.Logs:GetChildren()) do
			if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
				if bttn.BackgroundTransparency == 1 then
					bttn.Parent:Destroy()
					refreshlist()
				end
			end
		end
	end)
	GUI.ClrS.MouseButton1Click:connect(function()
		for _, child in pairs(GUI.Logs:GetChildren()) do
			if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
				if bttn.BackgroundTransparency == 0 then
					bttn.Parent:Destroy()
					refreshlist()
				end
			end
		end
	end)
	autoscan = false
	GUI.AutoScan.MouseButton1Click:connect(function()
		if autoscan == false then autoscan = true
			GUI.AutoScan.BackgroundTransparency = 0.5
			game:FindService('StarterGui'):SetCore('SendNotification', {
				Title = 'Audio Logger',
				Text = 'Auto Scan ENABLED',
				Icon = 'http://www.roblox.com/asset/?id=176572847',
				Duration = 5,
			})
		else autoscan = false
			GUI.AutoScan.BackgroundTransparency = 0
			game:FindService('StarterGui'):SetCore('SendNotification', {
				Title = 'Audio Logger',
				Text = 'Auto Scan DISABLED',
				Icon = 'http://www.roblox.com/asset/?id=176572847',
				Duration = 5,
			})
		end
	end)

	game.DescendantAdded:connect(function(added)
		wait()
		if autoscan == true and added:IsA('Sound') and not GUI.Logs:FindFirstChild(added.SoundId) and not FindTable(ignore,added.SoundId) then
			local id = string.match(added.SoundId, "rbxasset://sounds.+") or string.match(added.SoundId, "&hash=.+") or string.match(added.SoundId, "%d+")
			if id ~= nil then		
				local newsound = GUI.Audio:Clone()
				if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
					id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
					newsound.ImageButton.Image = 'rbxassetid://1453863294'
				end
				local scrolldown = false
				newsound.Parent = GUI.Logs
				newsound.Name = added.SoundId
				newsound.Visible = true
				newsound.Position = UDim2.new(0,0,0, pos)
				if GUI.Logs.CanvasPosition.Y == GUI.Logs.CanvasSize.Y.Offset - 230 then
					scrolldown = true
				end
				GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
				pos = pos+20
				local function findname()
					Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
				end
				local audioname = 'error'
				local success, message = pcall(findname)
				if success then
					newsound.TextLabel.Text = Asset.Name
					audioname = Asset.Name
				else 
					newsound.TextLabel.Text = added.Name
					audioname = added.Name
				end
				local data = Instance.new('StringValue') data.Parent = newsound data.Value = added.SoundId data.Name = 'ID'
				local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
				local soundselected = false
				newsound.ImageButton.MouseButton1Click:Connect(function()
					if GUI.Info.Visible ~= true then
						if soundselected == false then soundselected = true
							newsound.ImageButton.BackgroundTransparency = 0
						else soundselected = false
							newsound.ImageButton.BackgroundTransparency = 1
						end
					end
				end)
				newsound.Click.MouseButton1Click:Connect(function()
					if GUI.Info.Visible ~= true then
						GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. added.SoundId .. "\n\nWorkspace Name: " .. added.Name
						selectedaudio = added.SoundId
						GUI.Info.Visible = true
					end
				end)
				--230'
				if scrolldown == true then
					GUI.Logs.CanvasPosition = Vector2.new(0, 9999999999999999999999999999999999999999999, 0, 0)
				end
			end
		end
	end)

	GUI.Info.Copy.MouseButton1Click:Connect(function()
		if pcall(function() Synapse:Copy(selectedaudio) end) then	
		else
			local clip = setclipboard or Clipboard.set
			clip(selectedaudio)
		end
		game:FindService('StarterGui'):SetCore('SendNotification', {
			Title = 'Audio Logger',
			Text = 'Copied to clipboard',
			Icon = 'http://www.roblox.com/asset/?id=176572847',
			Duration = 5,
		})
	end)

	GUI.Info.Close.MouseButton1Click:Connect(function()
		GUI.Info.Visible = false
		for _, sound in pairs(game:GetService('Players').LocalPlayer.PlayerGui:GetChildren()) do
			if sound.Name == 'SampleSound' then
				sound:Destroy()
			end
		end
		GUI.Info.Listen.Text = 'Listen'
	end)

	GUI.Info.Listen.MouseButton1Click:Connect(function()
		if GUI.Info.Listen.Text == 'Listen' then
			local samplesound = Instance.new('Sound') samplesound.Parent = game:GetService('Players').LocalPlayer.PlayerGui
			samplesound.Looped = true samplesound.SoundId = selectedaudio samplesound:Play() samplesound.Name = 'SampleSound'
			samplesound.Volume = 5
			GUI.Info.Listen.Text = 'Stop'
		else
			for _, sound in pairs(game:GetService('Players').LocalPlayer.PlayerGui:GetChildren()) do
				if sound.Name == 'SampleSound' then
					sound:Destroy()
				end
			end
			GUI.Info.Listen.Text = 'Listen'
		end
	end)

	function drag(gui)
		spawn(function()
			local UserInputService = game:GetService("UserInputService")
			local dragging
			local dragInput
			local dragStart
			local startPos
			local function update(input)
				local delta = input.Position - dragStart
				gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), "InOut", "Quart", 0.04, true, nil) 
			end
			gui.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
			gui.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end)
	end
	drag(aa.PopupFrame)
end)


HubsSections:NewButton("OwlHub", "Runs OwlHub", function()
	loadstring(game:HttpGet("https://athoi21.xyz/owlhub"))();
end)


HubsSections:NewButton("Coco Hub", "Runs Coco Hub", function()
	--Coco Hub, By N4ri/NGHD/Nighty
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/MarsQQ/CocoHub/master/CocoZHub'),true))()
end)

UniversalSection:NewButton("Private Chat Spy", "Runs Private Chat Spy", function()
	--This script reveals ALL hidden messages in the default chat
	--chat "/spy" to toggle!
	enabled = true
	--if true will check your messages too
	spyOnMyself = true
	--if true will chat the logs publicly (fun, risky)
	public = false
	--if true will use /me to stand out
	publicItalics = true
	--customize private logs
	privateProperties = {
		Color = Color3.fromRGB(0,255,255); 
		Font = Enum.Font.SourceSansBold;
		TextSize = 18;
	}
	--////////////////////////////////////////////////////////////////
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
	local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
	local instance = (_G.chatSpyInstance or 0) + 1
	_G.chatSpyInstance = instance

	local function onChatted(p,msg)
		if _G.chatSpyInstance == instance then
			if p==player and msg:lower():sub(1,4)=="/spy" then
				enabled = not enabled
				wait(0.3)
				privateProperties.Text = "{H$K#D "..(enabled and "EN" or "DIS").."ABLED}"
				StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
			elseif enabled and (spyOnMyself==true or p~=player) then
				msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
				local hidden = true
				local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
					if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
						hidden = false
					end
				end)
				wait(1)
				conn:Disconnect()
				if hidden and enabled then
					if public then
						saymsg:FireServer((publicItalics and "/me " or '').."{H%AC$K#D} [".. p.Name .."]: "..msg,"All")
					else
						privateProperties.Text = "{H%AC$K#D} [".. p.Name .."]: "..msg
						StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
					end
				end
			end
		end
	end

	for _,p in ipairs(Players:GetPlayers()) do
		p.Chatted:Connect(function(msg) onChatted(p,msg) end)
	end
	Players.PlayerAdded:Connect(function(p)
		p.Chatted:Connect(function(msg) onChatted(p,msg) end)
	end)
	privateProperties.Text = "{H%AC$K#D "..(enabled and "EN" or "DIS").."ABLED}"
	StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
	local chatFrame = player.PlayerGui.Chat.Frame
	chatFrame.ChatChannelParentFrame.Visible = true
	chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
end)

UniversalSection:NewButton("VR Script (Broken)", "Runs CLOVR", function()

	-----------------------------------

	-- | when you reset make sure to re-execute this or just make this execute in a loop | ilykiwi

	-- | list of skids 0LURK, UltimateHax | Zenonity

	-- | updated pastebin link :) | zenonity

	-----------------------------------

	for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
		if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
			game:GetService("RunService").Heartbeat:connect(function()
				v.Velocity = Vector3.new(-30,0,0)
			end)
		end
	end

	game:GetService("StarterGui"):SetCore("SendNotification", { 
		Title = "Notification";
		Text = "Netless Ran";
		Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
	Duration = 16;
	wait(.5)
	spawn(function()
		while true do game:getservice("Runservice").Heartbeat:wait()
			settings().Physics.Allowsleep = false
			settings().physics.throttleAdjustTime = math.huge-math.huge
			setsimulationradius(1e9, 1e9)
			game:Getservice("Runservice").Stepped:wait()
		end
	end)
	wait(.5)
	-- CLOVR - FE FULL-BODY VR SCRIPT

	-- April 21st Update - TOOL HOLDING ADDED

	-- | made by 0866 and Abacaxl
	-- | tysm unverified


	--RagDollEnabled is set to true, DON'T set it to false or CLOVR won't work. Feel free to change the other settings though. -Abacaxl


	--|| Settings:
	local StudsOffset = 0 -- Character height (negative if you're too high)
	local Smoothness = .5 -- Character interpolation (0.1 - 1 = smooth - rigid)
	local AnchorCharacter = true -- Prevent physics from causing inconsistencies
	local HideCharacter = false -- Hide character on a platform
	local NoCollision = true -- Disable player collision
	local ChatEnabled = true -- See chat on your left hand in-game
	local ChatLocalRange = 75 -- Local chat range
	local ViewportEnabled = true -- View nearby players in a frame
	local ViewportRange = 30 -- Maximum distance players are updated
	local RagdollEnabled = true -- Use your character instead of hats (NetworkOwner vulnerability)
	local RagdollHeadMovement = true -- Move your head separately from your body (+9 second wait)
	local AutoRun = false -- Run script on respawn
	local AutoRespawn = true -- Kill your real body when your virtual body dies
	local WearAllAccessories = true -- Use all leftover hats for the head
	local AccurateHandPosition = true -- Move your Roblox hands according to your real hands
	local AccessorySettings = {
		LeftArm = "";
		RightArm = "";
		LeftLeg = "";
		RightLeg = "";
		Torso = "";
		Head = true;
		BlockArms = true;
		BlockLegs = true;
		BlockTorso = true;
		LimbOffset = CFrame.Angles(math.rad(90), 0, 0);
	}
	local FootPlacementSettings = {
		RightOffset = Vector3.new(.5, 0, 0),
		LeftOffset = Vector3.new(-.5, 0, 0),
	}
	--|| Script:
	local Script = nil;
	Script = function()
--[[
 Variables
--]]
		local Players = game:GetService("Players")
		local Client = Players.LocalPlayer
		local Character = Client.Character or Client.CharacterAdded:Wait()
		local WeldBase = Character:WaitForChild("HumanoidRootPart")
		local ArmBase = Character:FindFirstChild("RightHand") or Character:FindFirstChild("Right Arm") or WeldBase
		local Backpack = Client:WaitForChild("Backpack")
		local Mouse = Client:GetMouse()
		local Camera = workspace.CurrentCamera
		local VRService = game:GetService("VRService")
		local VRReady = VRService.VREnabled
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local HttpService = game:GetService("HttpService")
		local StarterGui = game:GetService("StarterGui")
		local HeadAccessories = {};
		local UsedAccessories = {};
		local Pointer = false;
		local Point1 = false;
		local Point2 = false;
		local VirtualRig = game:GetObjects("rbxassetid://4468539481")[1]
		local VirtualBody = game:GetObjects("rbxassetid://4464983829")[1]
		local Anchor = Instance.new("Part")
		Anchor.Anchored = true
		Anchor.Transparency = 1
		Anchor.CanCollide = false
		Anchor.Parent = workspace
		if RagdollEnabled then
			print("RagdollEnabled, thank you for using CLOVR!")
			local NetworkAccess = coroutine.create(function()
				settings().Physics.AllowSleep = false
				while true do game:GetService("RunService").RenderStepped:Wait()
					for _,Players in next, game:GetService("Players"):GetChildren() do
						if Players ~= game:GetService("Players").LocalPlayer then
							Players.MaximumSimulationRadius = 0.1 Players.SimulationRadius = 0 end end
					game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)
					game:GetService("Players").LocalPlayer.SimulationRadius = math.huge*math.huge end end)
			coroutine.resume(NetworkAccess)
		end
		StarterGui:SetCore("VRLaserPointerMode", 3)
--[[
 Character Protection
--]]
		local CharacterCFrame = WeldBase.CFrame
		if not RagdollEnabled then
			Character.Humanoid.AnimationPlayed:Connect(function(Animation)
				Animation:Stop()
			end)
			for _, Track in next, Character.Humanoid:GetPlayingAnimationTracks() do
				Track:Stop()
			end
			if HideCharacter then
				local Platform = Instance.new("Part")
				Platform.Anchored = true
				Platform.Size = Vector3.new(100, 5, 100)
				Platform.CFrame = CFrame.new(0, 10000, 0)
				Platform.Transparency = 1
				Platform.Parent = workspace
				Character:MoveTo(Platform.Position + Vector3.new(0, 5, 0))
				wait(.5)
			end
			if AnchorCharacter then
				for _, Part in pairs(Character:GetChildren()) do
					if Part:IsA("BasePart") then
						Part.Anchored = true
					end
				end
			end
		end
--[[
 Functions
--]]
		function Tween(Object, Style, Direction, Time, Goal)
			local tweenInfo = TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction])
			local tween = game:GetService("TweenService"):Create(Object, tweenInfo, Goal)
			tween.Completed:Connect(function()
				tween:Destroy()
			end)
			tween:Play()
			return tween
		end
		local function GetMotorForLimb(Limb)
			for _, Motor in next, Character:GetDescendants() do
				if Motor:IsA("Motor6D") and Motor.Part1 == Limb then
					return Motor
				end
			end
		end
		local function CreateAlignment(Limb, Part0)
			local Attachment0 = Instance.new("Attachment", Part0 or Anchor)
			local Attachment1 = Instance.new("Attachment", Limb)
			local Orientation = Instance.new("AlignOrientation")
			local Position = Instance.new("AlignPosition")
			Orientation.Attachment0 = Attachment1
			Orientation.Attachment1 = Attachment0
			Orientation.RigidityEnabled = false
			Orientation.MaxTorque = 20000
			Orientation.Responsiveness = 40
			Orientation.Parent = Character.HumanoidRootPart
			Position.Attachment0 = Attachment1
			Position.Attachment1 = Attachment0
			Position.RigidityEnabled = false
			Position.MaxForce = 40000
			Position.Responsiveness = 40
			Position.Parent = Character.HumanoidRootPart
			Limb.Massless = false
			local Motor = GetMotorForLimb(Limb)
			if Motor then
				Motor:Destroy()
			end
			return function(CF, Local)
				if Local then
					Attachment0.CFrame = CF
				else
					Attachment0.WorldCFrame = CF
				end
			end;
		end
		local function GetExtraTool()
			for _, Tool in next, Character:GetChildren() do
				if Tool:IsA("Tool") and not Tool.Name:match("LIMB_TOOL") then
					return Tool
				end
			end
		end
		local function GetGripForHandle(Handle)
			for _, Weld in next, Character:GetDescendants() do
				if Weld:IsA("Weld") and (Weld.Part0 == Handle or Weld.Part1 == Handle) then
					return Weld
				end
			end
			wait(.2)
			for _, Weld in next, Character:GetDescendants() do
				if Weld:IsA("Weld") and (Weld.Part0 == Handle or Weld.Part1 == Handle) then
					return Weld
				end
			end
		end
		local function CreateRightGrip(Handle)
			local RightGrip = Instance.new("Weld")
			RightGrip.Name = "RightGrip"
			RightGrip.Part1 = Handle
			RightGrip.Part0 = WeldBase
			RightGrip.Parent = WeldBase
			return RightGrip
		end
		local function CreateAccessory(Accessory, DeleteMeshes)
			if not Accessory then
				return
			end
			local HatAttachment = Accessory.Handle:FindFirstChildWhichIsA("Attachment")
			local HeadAttachment = VirtualRig:FindFirstChild(HatAttachment.Name, true)
			local BasePart = HeadAttachment.Parent
			local HatAtt = HatAttachment.CFrame
			local HeadAtt = HeadAttachment.CFrame
			if DeleteMeshes then
				if Accessory.Handle:FindFirstChild("Mesh") then
					Accessory.Handle.Mesh:Destroy()
				end
			end
			wait()
			local Handle = Accessory:WaitForChild("Handle")
			if Handle:FindFirstChildWhichIsA("Weld", true) then
				Handle:FindFirstChildWhichIsA("Weld", true):Destroy()
				Handle:BreakJoints()
			else
				Handle:BreakJoints()
			end
			Handle.Massless = true
			Handle.Transparency = 0.5
			UsedAccessories[Accessory] = true
			local RightGrip = CreateRightGrip(Handle)
			wait()
			for _, Object in pairs(Handle:GetDescendants()) do
				if not Object:IsA("BasePart") then
					pcall(function()
						Object.Transparency = 1
					end)
					pcall(function()
						Object.Enabled = false
					end)
				end
			end
			return Handle, RightGrip, HatAtt, HeadAtt, BasePart;
		end
		local function GetHeadAccessories()
			for _, Accessory in next, Character:GetChildren() do
				if Accessory:IsA("Accessory") and not UsedAccessories[Accessory] then
					local Handle, RightGrip, HatAtt, HeadAtt, BasePart = CreateAccessory(Accessory)
					table.insert(HeadAccessories, {Handle, RightGrip, HatAtt, HeadAtt, BasePart})
					do
						Handle.Transparency = 1
					end
					if not WearAllAccessories then
						break
					end
				end
			end
		end
--[[
 VR Replication Setup
--]]
		if not RagdollEnabled then
			LeftHandle, LeftHandGrip = CreateAccessory(Character:FindFirstChild(AccessorySettings.LeftArm), AccessorySettings.BlockArms)
			RightHandle, RightHandGrip = CreateAccessory(Character:FindFirstChild(AccessorySettings.RightArm), AccessorySettings.BlockArms)
			LeftHipHandle, LeftLegGrip = CreateAccessory(Character:FindFirstChild(AccessorySettings.LeftLeg), AccessorySettings.BlockLegs)
			RightHipHandle, RightLegGrip = CreateAccessory(Character:FindFirstChild(AccessorySettings.RightLeg), AccessorySettings.BlockLegs)
			TorsoHandle, TorsoGrip = CreateAccessory(Character:FindFirstChild(AccessorySettings.Torso), AccessorySettings.BlockTorso)
			GetHeadAccessories()
		elseif RagdollEnabled then
			if RagdollHeadMovement then
				Permadeath()
				MoveHead = CreateAlignment(Character["Head"])
			end
			MoveRightArm = CreateAlignment(Character["Right Arm"])
			MoveLeftArm = CreateAlignment(Character["Left Arm"])
			MoveRightLeg = CreateAlignment(Character["Right Leg"])
			MoveLeftLeg = CreateAlignment(Character["Left Leg"])
			MoveTorso = CreateAlignment(Character["Torso"])
			MoveRoot = CreateAlignment(Character.HumanoidRootPart)
			if RagdollHeadMovement then
				for _, Accessory in next, Character:GetChildren() do
					if Accessory:IsA("Accessory") and Accessory:FindFirstChild("Handle") then
						local Attachment1 = Accessory.Handle:FindFirstChildWhichIsA("Attachment")
						local Attachment0 = Character:FindFirstChild(tostring(Attachment1), true)
						local Orientation = Instance.new("AlignOrientation")
						local Position = Instance.new("AlignPosition")
						print(Attachment1, Attachment0, Accessory)
						Orientation.Attachment0 = Attachment1
						Orientation.Attachment1 = Attachment0
						Orientation.RigidityEnabled = false
						Orientation.ReactionTorqueEnabled = true
						Orientation.MaxTorque = 20000
						Orientation.Responsiveness = 40
						Orientation.Parent = Character.Head
						Position.Attachment0 = Attachment1
						Position.Attachment1 = Attachment0
						Position.RigidityEnabled = false
						Position.ReactionForceEnabled = true
						Position.MaxForce = 40000
						Position.Responsiveness = 40
						Position.Parent = Character.Head
					end
				end
			end
		end
--[[
 Movement
--]]
		VirtualRig.Name = "VirtualRig"
		VirtualRig.RightFoot.BodyPosition.Position = CharacterCFrame.p
		VirtualRig.LeftFoot.BodyPosition.Position = CharacterCFrame.p
		VirtualRig.Parent = workspace
		VirtualRig:SetPrimaryPartCFrame(CharacterCFrame)
		VirtualRig.Humanoid.Health = 0
		VirtualRig:BreakJoints()
		--
		VirtualBody.Parent = workspace
		VirtualBody.Name = "VirtualBody"
		VirtualBody.Humanoid.WalkSpeed = 8
		VirtualBody.Humanoid.CameraOffset = Vector3.new(0, StudsOffset, 0)
		VirtualBody:SetPrimaryPartCFrame(CharacterCFrame)
		VirtualBody.Humanoid.Died:Connect(function()
			print("Virtual death")
			if AutoRespawn then
				Character:BreakJoints()
				if RagdollHeadMovement and RagdollEnabled then
					Network:Unclaim()
					Respawn()
				end
			end
		end)
		--
		Camera.CameraSubject = VirtualBody.Humanoid
		Character.Humanoid.WalkSpeed = 0
		Character.Humanoid.JumpPower = 1
		for _, Part in next, VirtualBody:GetChildren() do
			if Part:IsA("BasePart") then
				Part.Transparency = 1
			end
		end
		for _, Part in next, VirtualRig:GetChildren() do
			if Part:IsA("BasePart") then
				Part.Transparency = 1
			end
		end
		if not VRReady then
			VirtualRig.RightUpperArm.ShoulderConstraint.RigidityEnabled = true
			VirtualRig.LeftUpperArm.ShoulderConstraint.RigidityEnabled = true
		end
		local OnMoving = RunService.Stepped:Connect(function()
			local Direction = Character.Humanoid.MoveDirection
			local Start = VirtualBody.HumanoidRootPart.Position
			local Point = Start + Direction * 6
			VirtualBody.Humanoid:MoveTo(Point)
		end)
		Character.Humanoid.Jumping:Connect(function()
			VirtualBody.Humanoid.Jump = true
		end)
		UserInputService.JumpRequest:Connect(function()
			VirtualBody.Humanoid.Jump = true
		end)
--[[
 VR Replication
--]]
		if RagdollEnabled then
			for _, Part in pairs(Character:GetDescendants()) do
				if Part:IsA("BasePart") and Part.Name == "Handle" and Part.Parent:IsA("Accessory") then
					Part.LocalTransparencyModifier = 1
				elseif Part:IsA("BasePart") and Part.Transparency < 0.5 and Part.Name ~= "Head" then
					Part.LocalTransparencyModifier = 0.5
				elseif Part:IsA("BasePart") and Part.Name == "Head" then
					Part.LocalTransparencyModifier = 1
				end
				if not Part:IsA("BasePart") and not Part:IsA("AlignPosition") and not Part:IsA("AlignOrientation") then
					pcall(function()
						Part.Transparency = 1
					end)
					pcall(function()
						Part.Enabled = false
					end)
				end
			end
		end
		local FootUpdateDebounce = tick()
		local function FloorRay(Part, Distance)
			local Position = Part.CFrame.p
			local Target = Position - Vector3.new(0, Distance, 0)
			local Line = Ray.new(Position, (Target - Position).Unit * Distance)
			local FloorPart, FloorPosition, FloorNormal = workspace:FindPartOnRayWithIgnoreList(Line, {VirtualRig, VirtualBody, Character})
			if FloorPart then
				return FloorPart, FloorPosition, FloorNormal, (FloorPosition - Position).Magnitude
			else
				return nil, Target, Vector3.new(), Distance
			end
		end
		local function Flatten(CF)
			local X,Y,Z = CF.X,CF.Y,CF.Z
			local LX,LZ = CF.lookVector.X,CF.lookVector.Z
			return CFrame.new(X,Y,Z) * CFrame.Angles(0,math.atan2(LX,LZ),0)
		end
		local FootTurn = 1
		local function FootReady(Foot, Target)
			local MaxDist
			if Character.Humanoid.MoveDirection.Magnitude > 0 then
				MaxDist = .5
			else
				MaxDist = 1
			end
			local PastThreshold = (Foot.Position - Target.Position).Magnitude > MaxDist
			local PastTick = tick() - FootUpdateDebounce >= 2
			if PastThreshold or PastTick then
				FootUpdateDebounce = tick()
			end
			return
				PastThreshold
				or
				PastTick
		end
		local function FootYield()
			local RightFooting = VirtualRig.RightFoot.BodyPosition
			local LeftFooting = VirtualRig.LeftFoot.BodyPosition
			local LowerTorso = VirtualRig.LowerTorso
			local Yield = tick()
			repeat
				RunService.Stepped:Wait()
				if
					(LowerTorso.Position - RightFooting.Position).Y > 4
						or
						(LowerTorso.Position - LeftFooting.Position).Y > 4
						or
						((LowerTorso.Position - RightFooting.Position) * Vector3.new(1, 0, 1)).Magnitude > 4
						or
						((LowerTorso.Position - LeftFooting.Position) * Vector3.new(1, 0, 1)).Magnitude > 4
				then
					break
				end
			until tick() - Yield >= .17
		end
		local function UpdateFooting()
			if not VirtualRig:FindFirstChild("LowerTorso") then
				wait()
				return
			end
			local Floor, FloorPosition, FloorNormal, Dist = FloorRay(VirtualRig.LowerTorso, 3)
			Dist = math.clamp(Dist, 0, 5)
			local FootTarget =
				VirtualRig.LowerTorso.CFrame *
				CFrame.new(FootPlacementSettings.RightOffset) -
				Vector3.new(0, Dist, 0) +
				Character.Humanoid.MoveDirection * (VirtualBody.Humanoid.WalkSpeed / 8) * 2
			if FootReady(VirtualRig.RightFoot, FootTarget) then
				VirtualRig.RightFoot.BodyPosition.Position = FootTarget.p
				VirtualRig.RightFoot.BodyGyro.CFrame = Flatten(VirtualRig.LowerTorso.CFrame)
			end
			FootYield()
			local FootTarget =
				VirtualRig.LowerTorso.CFrame *
				CFrame.new(FootPlacementSettings.LeftOffset) -
				Vector3.new(0, Dist, 0) +
				Character.Humanoid.MoveDirection * (VirtualBody.Humanoid.WalkSpeed / 8) * 2
			if FootReady(VirtualRig.LeftFoot, FootTarget) then
				VirtualRig.LeftFoot.BodyPosition.Position = FootTarget.p
				VirtualRig.LeftFoot.BodyGyro.CFrame = Flatten(VirtualRig.LowerTorso.CFrame)
			end
		end
		local function UpdateTorsoPosition()
			if not RagdollEnabled then
				if TorsoHandle then
					local Positioning = VirtualRig.UpperTorso.CFrame
					if not TorsoGrip or not TorsoGrip.Parent then
						TorsoGrip = CreateRightGrip(TorsoHandle)
					end
					local Parent = TorsoGrip.Parent
					TorsoGrip.C1 = CFrame.new()
					TorsoGrip.C0 = TorsoGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(Positioning * CFrame.new(0, -0.25, 0) * AccessorySettings.LimbOffset), Smoothness)
					TorsoGrip.Parent = nil
					TorsoGrip.Parent = Parent
				end
			else
				local Positioning = VirtualRig.UpperTorso.CFrame
				MoveTorso(Positioning * CFrame.new(0, -0.25, 0))
				MoveRoot(Positioning * CFrame.new(0, -0.25, 0))
			end
		end
		local function UpdateLegPosition()
			if not RagdollEnabled then
				if RightHipHandle then
					local Positioning =
						VirtualRig.RightLowerLeg.CFrame
					: Lerp(VirtualRig.RightFoot.CFrame, 0.5)
						+ Vector3.new(0, 0.5, 0)
					if not RightHipHandle or not RightHipHandle.Parent then
						RightLegGrip = CreateRightGrip(RightHipHandle)
					end
					local Parent = RightLegGrip.Parent
					RightLegGrip.C1 = CFrame.new()
					RightLegGrip.C0 = RightLegGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(Positioning * AccessorySettings.LimbOffset), Smoothness)
					RightLegGrip.Parent = nil
					RightLegGrip.Parent = Parent
				end
				if LeftHipHandle then
					local Positioning =
						VirtualRig.LeftLowerLeg.CFrame
					: Lerp(VirtualRig.LeftFoot.CFrame, 0.5)
						+ Vector3.new(0, 0.5, 0)
					if not LeftLegGrip or not LeftLegGrip.Parent then
						LeftLegGrip = CreateRightGrip(LeftHipHandle)
					end
					local Parent = LeftLegGrip.Parent
					LeftLegGrip.C1 = CFrame.new()
					LeftLegGrip.C0 = LeftLegGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(Positioning * AccessorySettings.LimbOffset), Smoothness)
					LeftLegGrip.Parent = nil
					LeftLegGrip.Parent = Parent
				end
			else
				do
					local Positioning =
						VirtualRig.RightLowerLeg.CFrame
					: Lerp(VirtualRig.RightFoot.CFrame, 0.5)
						* CFrame.Angles(0, math.rad(180), 0)
						+ Vector3.new(0, 0.5, 0)
					MoveRightLeg(Positioning)
				end
				do
					local Positioning =
						VirtualRig.LeftLowerLeg.CFrame
					: Lerp(VirtualRig.LeftFoot.CFrame, 0.5)
						* CFrame.Angles(0, math.rad(180), 0)
						+ Vector3.new(0, 0.5, 0)
					MoveLeftLeg(Positioning)
				end
			end
		end
		warn("VRReady is", VRReady)
		local function OnUserCFrameChanged(UserCFrame, Positioning, IgnoreTorso)
			local Positioning = Camera.CFrame * Positioning
			if not IgnoreTorso then
				UpdateTorsoPosition()
				UpdateLegPosition()
			end
			if not RagdollEnabled then
				if UserCFrame == Enum.UserCFrame.Head and AccessorySettings.Head then
					for _, Table in next, HeadAccessories do
						local Handle, RightGrip, HatAtt, HeadAtt, BasePart = unpack(Table)
						local LocalPositioning = Positioning
						if not RightGrip or not RightGrip.Parent then
							RightGrip = CreateRightGrip(Handle)
							Table[2] = RightGrip
						end
						local Parent = RightGrip.Parent
						if BasePart then
							LocalPositioning = BasePart.CFrame * HeadAtt
						end
						RightGrip.C1 = HatAtt
						RightGrip.C0 = RightGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(LocalPositioning), Smoothness)
						RightGrip.Parent = nil
						RightGrip.Parent = Parent
					end
				elseif RightHandle and UserCFrame == Enum.UserCFrame.RightHand and AccessorySettings.RightArm then
					local HandPosition = Positioning
					local LocalPositioning = Positioning
					if not RightHandGrip or not RightHandGrip.Parent then
						RightHandGrip = CreateRightGrip(RightHandle)
					end
					if AccurateHandPosition then
						HandPosition = HandPosition * CFrame.new(0, 0, 1)
					end
					if not VRReady then
						local HeadRotation = Camera.CFrame - Camera.CFrame.p
						HandPosition = VirtualRig.RightUpperArm.CFrame:Lerp(VirtualRig.RightLowerArm.CFrame, 0.5) * AccessorySettings.LimbOffset
						--LocalPositioning = (HeadRotation + (HandPosition * CFrame.new(0, 0, 1)).p) * CFrame.Angles(math.rad(-45), 0, 0)
						LocalPositioning = HandPosition * CFrame.new(0, 0, 1) * CFrame.Angles(math.rad(-180), 0, 0)
						if Point2 then
							VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
							VirtualRig.RightUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
						elseif VirtualRig.RightUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
							VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
						end
					elseif AccurateHandPosition then
						LocalPositioning = HandPosition
					end
					local Parent = RightHandGrip.Parent
					RightHandGrip.C1 = CFrame.new()
					RightHandGrip.C0 = RightHandGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(HandPosition), Smoothness)
					RightHandGrip.Parent = nil
					RightHandGrip.Parent = Parent
					--
					local EquippedTool = GetExtraTool()
					if EquippedTool and EquippedTool:FindFirstChild("Handle") then
						local EquippedGrip = GetGripForHandle(EquippedTool.Handle)
						local Parent = EquippedGrip.Parent
						local ArmBaseCFrame = ArmBase.CFrame
						if ArmBase.Name == "Right Arm" then
							ArmBaseCFrame = ArmBaseCFrame
						end
						EquippedGrip.C1 = EquippedTool.Grip
						EquippedGrip.C0 = EquippedGrip.C0:Lerp(ArmBaseCFrame:ToObjectSpace(LocalPositioning), Smoothness)
						EquippedGrip.Parent = nil
						EquippedGrip.Parent = Parent
					end
				elseif LeftHandle and UserCFrame == Enum.UserCFrame.LeftHand and AccessorySettings.LeftArm then
					local HandPosition = Positioning
					if not LeftHandGrip or not LeftHandGrip.Parent then
						LeftHandGrip = CreateRightGrip(LeftHandle)
					end
					if AccurateHandPosition then
						HandPosition = HandPosition * CFrame.new(0, 0, 1)
					end
					if not VRReady then
						HandPosition = VirtualRig.LeftUpperArm.CFrame:Lerp(VirtualRig.LeftLowerArm.CFrame, 0.5) * AccessorySettings.LimbOffset
						--warn("Setting HandPosition to hands")
						if Point1 then
							VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
							VirtualRig.LeftUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
						elseif VirtualRig.LeftUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
							VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
						end
					end
					local Parent = LeftHandGrip.Parent
					LeftHandGrip.C1 = CFrame.new()
					LeftHandGrip.C0 = LeftHandGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(HandPosition), Smoothness)
					LeftHandGrip.Parent = nil
					LeftHandGrip.Parent = Parent
				end
			end
			if RagdollEnabled then
				if UserCFrame == Enum.UserCFrame.Head and RagdollHeadMovement then
					MoveHead(Positioning)
				elseif UserCFrame == Enum.UserCFrame.RightHand then
					local Positioning = Positioning
					if not VRReady then
						Positioning = VirtualRig.RightUpperArm.CFrame:Lerp(VirtualRig.RightLowerArm.CFrame, 0.5)
					elseif AccurateHandPosition then
						Positioning = Positioning * CFrame.new(0, 0, 1)
					end
					if VRReady then
						Positioning = Positioning * AccessorySettings.LimbOffset
					end
					MoveRightArm(Positioning)
					if Point2 then
						VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
						VirtualRig.RightUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
					elseif VirtualRig.RightUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
						VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
					end
				elseif UserCFrame == Enum.UserCFrame.LeftHand then
					local Positioning = Positioning
					if not VRReady then
						Positioning = VirtualRig.LeftUpperArm.CFrame:Lerp(VirtualRig.LeftLowerArm.CFrame, 0.5)
					elseif AccurateHandPosition then
						Positioning = Positioning * CFrame.new(0, 0, 1)
					end
					if VRReady then
						Positioning = Positioning * AccessorySettings.LimbOffset
					end
					MoveLeftArm(Positioning)
					if Point1 then
						VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
						VirtualRig.LeftUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
					elseif VirtualRig.LeftUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
						VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
					end
				end
			end
			if UserCFrame == Enum.UserCFrame.Head then
				VirtualRig.Head.CFrame = Positioning
			elseif UserCFrame == Enum.UserCFrame.RightHand and VRReady then
				VirtualRig.RightHand.CFrame = Positioning
			elseif UserCFrame == Enum.UserCFrame.LeftHand and VRReady then
				VirtualRig.LeftHand.CFrame = Positioning
			end
			if not VRReady and VirtualRig.LeftHand.Anchored then
				VirtualRig.RightHand.Anchored = false
				VirtualRig.LeftHand.Anchored = false
			elseif VRReady and not VirtualRig.LeftHand.Anchored then
				VirtualRig.RightHand.Anchored = true
				VirtualRig.LeftHand.Anchored = true
			end
		end
		local CFrameChanged = VRService.UserCFrameChanged:Connect(OnUserCFrameChanged)
		local OnStepped = RunService.Stepped:Connect(function()
			for _, Part in pairs(VirtualRig:GetChildren()) do
				if Part:IsA("BasePart") then
					Part.CanCollide = false
				end
			end
			if RagdollEnabled then
				for _, Part in pairs(Character:GetChildren()) do
					if Part:IsA("BasePart") then
						Part.CanCollide = false
					end
				end
			end
			if NoCollision then
				for _, Player in pairs(Players:GetPlayers()) do
					if Player ~= Client and Player.Character then
						local Descendants = Player.Character:GetDescendants()
						for i = 1, #Descendants do
							local Part = Descendants[i]
							if Part:IsA("BasePart") then
								Part.CanCollide = false
								Part.Velocity = Vector3.new()
								Part.RotVelocity = Vector3.new()
							end
						end
					end
				end
			end
		end)
		local OnRenderStepped = RunService.Stepped:Connect(function()
			Camera.CameraSubject = VirtualBody.Humanoid
			if RagdollEnabled then
				Character.HumanoidRootPart.CFrame = VirtualRig.UpperTorso.CFrame
				Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
			end
			if not VRReady then
				OnUserCFrameChanged(Enum.UserCFrame.Head, CFrame.new(0, 0, 0))
				OnUserCFrameChanged(Enum.UserCFrame.RightHand, CFrame.new(0, 0, 0), true)
				OnUserCFrameChanged(Enum.UserCFrame.LeftHand, CFrame.new(0, 0, 0), true)
			end
		end)
		spawn(function()
			while Character and Character.Parent do
				FootYield()
				UpdateFooting()
			end
		end)
--[[
 Non-VR Support + VR Mechanics
--]]
		local OnInput = UserInputService.InputBegan:Connect(function(Input, Processed)
			if not Processed then
				if Input.KeyCode == Enum.KeyCode.LeftControl or Input.KeyCode == Enum.KeyCode.ButtonL2 then
					Tween(VirtualBody.Humanoid, "Elastic", "Out", 1, {
						CameraOffset = Vector3.new(0, StudsOffset - 1.5, 0)
					})
				end
				if Input.KeyCode == Enum.KeyCode.X then
					if RagdollEnabled and RagdollHeadMovement then
						Network:Unclaim()
						Respawn()
					end
				end
				if Input.KeyCode == Enum.KeyCode.C then
					VirtualBody:MoveTo(Mouse.Hit.p)
					VirtualRig:MoveTo(Mouse.Hit.p)
				end
			end
			if Input.KeyCode == Enum.KeyCode.LeftShift or Input.KeyCode == Enum.KeyCode.ButtonR2 then
				Tween(VirtualBody.Humanoid, "Sine", "Out", 1, {
					WalkSpeed = 16
				})
			end
			if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton1 then
				Point1 = true
			end
			if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton2 then
				Point2 = true
			end
			if VRReady and Input.KeyCode == Enum.KeyCode.ButtonY then
				Character:BreakJoints()
				if RagdollEnabled and RagdollHeadMovement then
					Network:Unclaim()
					Respawn()
				end
			end
		end)
		local OnInputEnded = UserInputService.InputEnded:Connect(function(Input, Processed)
			if not Processed then
				if Input.KeyCode == Enum.KeyCode.LeftControl or Input.KeyCode == Enum.KeyCode.ButtonL2 then
					Tween(VirtualBody.Humanoid, "Elastic", "Out", 1, {
						CameraOffset = Vector3.new(0, StudsOffset, 0)
					})
				end
			end
			if Input.KeyCode == Enum.KeyCode.LeftShift or Input.KeyCode == Enum.KeyCode.ButtonR2 then
				Tween(VirtualBody.Humanoid, "Sine", "Out", 1, {
					WalkSpeed = 8
				})
			end
			if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton1 then
				Point1 = false
			end
			if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton2 then
				Point2 = false
			end
		end)
--[[
 Proper Cleanup
--]]
		local OnReset
		OnReset = Client.CharacterAdded:Connect(function()
			OnReset:Disconnect();
			CFrameChanged:Disconnect();
			OnStepped:Disconnect();
			OnRenderStepped:Disconnect();
			OnMoving:Disconnect();
			OnInput:Disconnect();
			OnInputEnded:Disconnect();
			VirtualRig:Destroy();
			VirtualBody:Destroy();
			if RagdollEnabled then
				Network:Unclaim();
			end
			if AutoRun then
				delay(2, function()
					Script()
				end)
			end
		end)
		if ChatEnabled then
			spawn(ChatHUDFunc)
		end
		if ViewportEnabled then
			spawn(ViewHUDFunc)
		end
		do
--[[
 Functions
 --]]
			local Players = game:GetService("Players")
			local Client = Players.LocalPlayer
			local VRService = game:GetService("VRService")
			local VRReady = VRService.VREnabled
			local UserInputService = game:GetService("UserInputService")
			local RunService = game:GetService("RunService")
			local Camera = workspace.CurrentCamera
--[[
 Code
 --]]
			if VRReady then
				local Pointer = game:GetObjects("rbxassetid://4476173280")[1]
				Pointer.Parent = workspace
				Pointer.Beam.Enabled = false
				Pointer.Target.ParticleEmitter.Enabled = false
				local RenderStepped = RunService.RenderStepped:Connect(function()
					if Pointer.Beam.Enabled then
						local RightHand = Camera.CFrame * VRService:GetUserCFrame(Enum.UserCFrame.RightHand)
						local Target = RightHand * CFrame.new(0, 0, -10)
						local Line = Ray.new(RightHand.p, (Target.p - RightHand.p).Unit * 128)
						local Part, Position = workspace:FindPartOnRayWithIgnoreList(Line, {VirtualRig, VirtualBody, Character, Pointer})
						local Distance = (Position - RightHand.p).Magnitude
						Pointer.Target.Position = Vector3.new(0, 0, -Distance)
						Pointer.CFrame = RightHand
					end
				end)
				local Input = UserInputService.InputBegan:Connect(function(Input)
					if Input.KeyCode == Enum.KeyCode.ButtonB then
						Pointer.Beam.Enabled = not Pointer.Beam.Enabled
						Pointer.Target.ParticleEmitter.Enabled = not Pointer.Target.ParticleEmitter.Enabled
					end
				end)
				--
				local CharacterAdded
				CharacterAdded = Client.CharacterAdded:Connect(function()
					RenderStepped:Disconnect()
					Input:Disconnect()
					CharacterAdded:Disconnect()
					Pointer:Destroy()
					Pointer = nil
				end)
			else
				return
			end
		end
	end;
	Permadeath = function()
		local ch = game.Players.LocalPlayer.Character
		local prt=Instance.new("Model", workspace)
		local z1 = Instance.new("Part", prt)
		z1.Name="Torso"
		z1.CanCollide = false
		z1.Anchored = true
		local z2 =Instance.new("Part", prt)
		z2.Name="Head"
		z2.Anchored = true
		z2.CanCollide = false
		local z3 =Instance.new("Humanoid", prt)
		z3.Name="Humanoid"
		z1.Position = Vector3.new(0,9999,0)
		z2.Position = Vector3.new(0,9991,0)
		game.Players.LocalPlayer.Character=prt
		wait(5)
		warn("50%")
		game.Players.LocalPlayer.Character=ch
		wait(6)
		warn("100%")
	end;
	Respawn = function()
		local ch = game.Players.LocalPlayer.Character
		local prt=Instance.new("Model", workspace)
		local z1 = Instance.new("Part", prt)
		z1.Name="Torso"
		z1.CanCollide = false
		z1.Anchored = true
		local z2 =Instance.new("Part", prt)
		z2.Name="Head"
		z2.Anchored = true
		z2.CanCollide = false
		local z3 =Instance.new("Humanoid", prt)
		z3.Name="Humanoid"
		z1.Position = Vector3.new(0,9999,0)
		z2.Position = Vector3.new(0,9991,0)
		game.Players.LocalPlayer.Character=prt
		wait(5)
		game.Players.LocalPlayer.Character=ch
	end;
	ChatHUDFunc = function()
--[[
 Variables
 --]]
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local VRService = game:GetService("VRService")
		local VRReady = VRService.VREnabled
		local Players = game:GetService("Players")
		local Client = Players.LocalPlayer
		local ChatHUD = game:GetObjects("rbxassetid://4476067885")[1]
		local GlobalFrame = ChatHUD.GlobalFrame
		local Template = GlobalFrame.Template
		local LocalFrame = ChatHUD.LocalFrame
		local Global = ChatHUD.Global
		local Local = ChatHUD.Local
		local Camera = workspace.CurrentCamera
		Template.Parent = nil
		ChatHUD.Parent = game:GetService("CoreGui")
--[[
 Code
 --]]
		local Highlight = Global.Frame.BackgroundColor3
		local Deselected = Local.Frame.BackgroundColor3
		local OpenGlobalTab = function()
			Global.Frame.BackgroundColor3 = Highlight
			Local.Frame.BackgroundColor3 = Deselected
			Global.Font = Enum.Font.SourceSansBold
			Local.Font = Enum.Font.SourceSans
			GlobalFrame.Visible = true
			LocalFrame.Visible = false
		end
		local OpenLocalTab = function()
			Global.Frame.BackgroundColor3 = Deselected
			Local.Frame.BackgroundColor3 = Highlight
			Global.Font = Enum.Font.SourceSans
			Local.Font = Enum.Font.SourceSansBold
			GlobalFrame.Visible = false
			LocalFrame.Visible = true
		end
		Global.MouseButton1Down:Connect(OpenGlobalTab)
		Local.MouseButton1Down:Connect(OpenLocalTab)
		Global.MouseButton1Click:Connect(OpenGlobalTab)
		Local.MouseButton1Click:Connect(OpenLocalTab)
		OpenLocalTab()
		--
		local function GetPlayerDistance(Sender)
			if Sender.Character and Sender.Character:FindFirstChild("Head") then
				return math.floor((Sender.Character.Head.Position - Camera:GetRenderCFrame().p).Magnitude + 0.5)
			end
		end
		local function NewGlobal(Message, Sender, Color)
			local Frame = Template:Clone()
			Frame.Text = ("[%s]: %s"):format(Sender.Name, Message)
			Frame.User.Text = ("[%s]:"):format(Sender.Name)
			Frame.User.TextColor3 = Color
			Frame.BackgroundColor3 = Color
			Frame.Parent = GlobalFrame
			delay(60, function()
				Frame:Destroy()
			end)
		end
		local function NewLocal(Message, Sender, Color, Dist)
			local Frame = Template:Clone()
			Frame.Text = ("(%s) [%s]: %s"):format(tostring(Dist), Sender.Name, Message)
			Frame.User.Text = ("(%s) [%s]:"):format(tostring(Dist), Sender.Name)
			Frame.User.TextColor3 = Color
			Frame.BackgroundColor3 = Color
			Frame.Parent = LocalFrame
			delay(60, function()
				Frame:Destroy()
			end)
		end
		local function OnNewChat(Message, Sender, Color)
			if not ChatHUD or not ChatHUD.Parent then return end
			NewGlobal(Message, Sender, Color)
			local Distance = GetPlayerDistance(Sender)
			if Distance and Distance <= ChatLocalRange then
				NewLocal(Message, Sender, Color, Distance)
			end
		end
		local function OnPlayerAdded(Player)
			if not ChatHUD or not ChatHUD.Parent then return end
			local Color = BrickColor.Random().Color
			Player.Chatted:Connect(function(Message)
				OnNewChat(Message, Player, Color)
			end)
		end
		Players.PlayerAdded:Connect(OnPlayerAdded)
		for _, Player in pairs(Players:GetPlayers()) do
			OnPlayerAdded(Player)
		end
		--
		local ChatPart = ChatHUD.Part
		ChatHUD.Adornee = ChatPart
		if VRReady then
			ChatHUD.Parent = game:GetService("CoreGui")
			ChatHUD.Enabled = true
			ChatHUD.AlwaysOnTop = true
			local OnInput = UserInputService.InputBegan:Connect(function(Input, Processed)
				if not Processed then
					if Input.KeyCode == Enum.KeyCode.ButtonX then
						ChatHUD.Enabled = not ChatHUD.Enabled
					end
				end
			end)
			local RenderStepped = RunService.RenderStepped:Connect(function()
				local LeftHand = VRService:GetUserCFrame(Enum.UserCFrame.LeftHand)
				ChatPart.CFrame = Camera.CFrame * LeftHand
			end)
			local CharacterAdded
			CharacterAdded = Client.CharacterAdded:Connect(function()
				OnInput:Disconnect()
				RenderStepped:Disconnect()
				CharacterAdded:Disconnect()
				ChatHUD:Destroy()
				ChatHUD = nil
			end)
		end
		wait(9e9)
	end;
	ViewHUDFunc = function()
--[[
 Variables
 --]]
		local ViewportRange = ViewportRange or 32
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local VRService = game:GetService("VRService")
		local VRReady = VRService.VREnabled
		local Players = game:GetService("Players")
		local Client = Players.LocalPlayer
		local Mouse = Client:GetMouse()
		local Camera = workspace.CurrentCamera
		local CameraPort = Camera.CFrame
		local ViewHUD = script:FindFirstChild("ViewHUD") or game:GetObjects("rbxassetid://4480405425")[1]
		local Viewport = ViewHUD.Viewport
		local Viewcam = Instance.new("Camera")
		local ViewPart = ViewHUD.Part
		ViewHUD.Parent = game:GetService("CoreGui")
		Viewcam.Parent = Viewport
		Viewcam.CameraType = Enum.CameraType.Scriptable
		Viewport.CurrentCamera = Viewcam
		Viewport.BackgroundTransparency = 1
--[[
 Code
 --]]
		local function Clone(Character)
			local Arc = Character.Archivable
			local Clone;
			Character.Archivable = true
			Clone = Character:Clone()
			Character.Archivable = Arc
			return Clone
		end
		local function GetPart(Name, Parent, Descendants)
			for i = 1, #Descendants do
				local Part = Descendants[i]
				if Part.Name == Name and Part.Parent.Name == Parent then
					return Part
				end
			end
		end
		local function OnPlayerAdded(Player)
			if not ViewHUD or not ViewHUD.Parent then return end
			local function CharacterAdded(Character)
				if not ViewHUD or not ViewHUD.Parent then return end
				Character:WaitForChild("Head")
				Character:WaitForChild("Humanoid")
				wait(3)
				local FakeChar = Clone(Character)
				local Root = FakeChar:FindFirstChild("HumanoidRootPart") or FakeChar:FindFirstChild("Head")
				local RenderConnection;
				local Descendants = FakeChar:GetDescendants()
				local RealDescendants = Character:GetDescendants()
				local Correspondents = {};
				FakeChar.Humanoid.DisplayDistanceType = "None"
				for i = 1, #Descendants do
					local Part = Descendants[i]
					local Real = Part:IsA("BasePart") and GetPart(Part.Name, Part.Parent.Name, RealDescendants)
					if Part:IsA("BasePart") and Real then
						Part.Anchored = true
						Part:BreakJoints()
						if Part.Parent:IsA("Accessory") then
							Part.Transparency = 0
						end
						table.insert(Correspondents, {Part, Real})
					end
				end
				RenderConnection = RunService.RenderStepped:Connect(function()
					if not Character or not Character.Parent then
						RenderConnection:Disconnect()
						FakeChar:Destroy()
						return
					end
					if (Root and (Root.Position - Camera.CFrame.p).Magnitude <= ViewportRange) or Player == Client or not Root then
						for i = 1, #Correspondents do
							local Part, Real = unpack(Correspondents[i])
							if Part and Real and Part.Parent and Real.Parent then
								Part.CFrame = Real.CFrame
							elseif Part.Parent and not Real.Parent then
								Part:Destroy()
							end
						end
					end
				end)
				FakeChar.Parent = Viewcam
			end
			Player.CharacterAdded:Connect(CharacterAdded)
			if Player.Character then
				spawn(function()
					CharacterAdded(Player.Character)
				end)
			end
		end
		local PlayerAdded = Players.PlayerAdded:Connect(OnPlayerAdded)
		for _, Player in pairs(Players:GetPlayers()) do
			OnPlayerAdded(Player)
		end
		ViewPart.Size = Vector3.new()
		if VRReady then
			Viewport.Position = UDim2.new(.62, 0, .89, 0)
			Viewport.Size = UDim2.new(.3, 0, .3, 0)
			Viewport.AnchorPoint = Vector2.new(.5, 1)
		else
			Viewport.Size = UDim2.new(0.3, 0, 0.3, 0)
		end
		local RenderStepped = RunService.RenderStepped:Connect(function()
			local Render = Camera.CFrame
			local Scale = Camera.ViewportSize
			if VRReady then
				Render = Render * VRService:GetUserCFrame(Enum.UserCFrame.Head)
			end
			CameraPort = CFrame.new(Render.p + Vector3.new(5, 2, 0), Render.p)
			Viewport.Camera.CFrame = CameraPort
			ViewPart.CFrame = Render * CFrame.new(0, 0, -16)
			ViewHUD.Size = UDim2.new(0, Scale.X - 6, 0, Scale.Y - 6)
		end)
		--
		local CharacterAdded
		CharacterAdded = Client.CharacterAdded:Connect(function()
			RenderStepped:Disconnect()
			CharacterAdded:Disconnect()
			PlayerAdded:Disconnect()
			ViewHUD:Destroy()
			ViewHUD = nil
		end)
		wait(9e9)
	end;
	Script()
	wait(2)
	local Players = game:GetService("Players")
	local lp = Players.LocalPlayer
	local character = lp.Character
	local A0LL = Instance.new("Attachment", character["Left Leg"])
	A0LL.Position = Vector3.new(0, 1, 0)
	local A1LL = Instance.new("Attachment", character["Torso"])
	A1LL.Position = Vector3.new(-0.5, -1, 0)
	local socket1 = Instance.new("BallSocketConstraint", character["Left Leg"])
	socket1.Attachment0 = A0LL
	socket1.Attachment1 = A1LL
	local A0RL = Instance.new("Attachment", character["Right Leg"])
	A0RL.Position = Vector3.new(0, 1, 0)
	local A1RL = Instance.new("Attachment", character["Torso"])
	A1RL.Position = Vector3.new(0.5, -1, 0)
	local socket2 = Instance.new("BallSocketConstraint", character["Right Leg"])
	socket2.Attachment0 = A0RL
	socket2.Attachment1 = A1RL
	local A0H = Instance.new("Attachment", character["Head"])
	A0H.Position = Vector3.new(0, -0.5, 0)
	local A1H = Instance.new("Attachment", character["Torso"])
	A1H.Position = Vector3.new(0, 1, 0)
	local socket5 = Instance.new("BallSocketConstraint", character["Head"])
	socket5.Attachment0 = A0H
	socket5.Attachment1 = A1H
	loadstring(game:HttpGet("https://ghostbin.co/paste/krmyf/raw",true))()
	-----------------------------------------------------------
	wait(9e9)
end)

HubsSections:NewButton("Zyrex Hub", "Runs Zyrex Hub", function()
	--Zyrex Hub | Developed by NotZyrex

	_G.Toggle_GUI = Enum.KeyCode.RightControl --Right Ctrl

	loadstring(game:HttpGet(("https://raw.githubusercontent.com/NotZyrex/Zyrex-Hub/master/Main.lua"), true))();
end)

AnimationsSection:NewButton("Chill Animation", "Runs a FE Animation", function()


	-----------------------------------

	-- | when you reset make sure to re-execute this or just make this execute in a loop | ilykiwi

	-- | list of skids 0LURK, UltimateHax | Zenonity

	-- | updated pastebin link :) | zenonity

	-----------------------------------

	for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
		if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
			game:GetService("RunService").Heartbeat:connect(function()
				v.Velocity = Vector3.new(-30,0,0)
			end)
		end
	end

	game:GetService("StarterGui"):SetCore("SendNotification", { 
		Title = "Notification";
		Text = "Netless Ran";
		Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
	Duration = 16;
	wait (3)
	loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()
	local m = game.Players.LocalPlayer
	local char = workspace.non

	function Random(num)
		local section=num % 1 * 3;
		local secondary=0.5 * math.pi * (section % 1);
		if section < 1 then
			return 1,1 - math.cos(secondary),1 - math.sin(secondary);
		elseif section < 2 then
			return 1 - math.sin(secondary),1,1 - math.cos(secondary);
		else
			return 1 - math.cos(secondary),1 - math.sin(secondary),1;
		end
	end

	--//Lol try to figure this one out//
	function rainb(hue)
		local section = hue % 1 * 3
		local secondary = 0.5 * math.pi * (section % 1)
		if section < 1 then
			return Color3.new(1, 1 - math.cos(secondary), 1 - math.sin(secondary))
		elseif section < 2 then
			return Color3.new(1 - math.sin(secondary), 1, 1 - math.cos(secondary))
		else
			return Color3.new(1 - math.cos(secondary), 1 - math.sin(secondary), 1)
		end
	end

	local Chillmusic = Instance.new("Sound", char)
	Chillmusic.Parent = char
	Chillmusic.Volume = 8
	Chillmusic.SoundId = "rbxassetid://1221694420"
	Chillmusic.Looped = true
	Chillmusic:Play()

	local txt = Instance.new("BillboardGui", char)
	txt.Adornee = char.Head
	txt.Name = "_status"
	txt.Size = UDim2.new(2, 0, 1.2, 0)
	txt.StudsOffset = Vector3.new(-9, 8, 0)
	local text = Instance.new("TextLabel", txt)
	text.Size = UDim2.new(10, 0, 7, 0)
	text.FontSize = "Size24"
	text.TextScaled = true
	text.TextTransparency = 0
	text.BackgroundTransparency = 1
	text.TextTransparency = 0
	text.TextStrokeTransparency = 0
	text.Font = "Arcade"
	text.TextStrokeColor3 = Color3.new(0, 0, 0)
	local v = Instance.new("Part")
	v.Name = "ColorBrick"
	v.Parent = char
	v.FormFactor = "Symmetric"
	v.Anchored = true
	v.CanCollide = false
	v.BottomSurface = "Smooth"
	v.TopSurface = "Smooth"
	v.Size = Vector3.new(10, 5, 3)
	v.Transparency = 1
	v.CFrame = char.Torso.CFrame
	v.BrickColor = BrickColor.new("Really black")
	v.Transparency = 1
	spawn(function()
		TweenService = game:GetService("TweenService")
		Colours = {Color3.fromRGB(0,100,200),Color3.fromRGB(4, 175, 236)}
		Int = 0
		while wait(2) do
			if Int == #Colours then Int = 0 end
			Int = Int+1
			TweenService:Create(text,TweenInfo.new(1),{TextColor3 = Colours[Int]}):Play()
		end
	end)
	v.Shape = "Block"
	text.Text = "~»Chill Af«~"
	local Player = game:GetService("Players").LocalPlayer
	local Character = char
	local PlayerGui = Player.PlayerGui
	local Backpack = Player.Backpack
	local Torso = Character.Torso
	local Head = Character.Head
	local Humanoid = Character.Humanoid
	local m = Instance.new("Model", Character)
	local LeftArm = Character["Left Arm"]
	local LeftLeg = Character["Left Leg"]
	local RightArm = Character["Right Arm"]
	local RightLeg = Character["Right Leg"]
	local LS = Torso["Left Shoulder"]
	local LH = Torso["Left Hip"]
	local RS = Torso["Right Shoulder"]
	local RH = Torso["Right Hip"]
	local Face = Head.face
	local Neck = Torso.Neck
	local it = Instance.new
	local attacktype = 1
	local vt = Vector3.new
	local cf = CFrame.new
	local bc = BrickColor.new
	local br = BrickColor.random
	local it = Instance.new
	local euler = CFrame.fromEulerAnglesXYZ
	local angles = CFrame.Angles
	local cloaked = false
	local necko = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	local necko2 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	local LHC0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
	local LHC1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
	local RHC0 = cf(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
	local RHC1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
	local RootPart = Character.HumanoidRootPart
	local RootJoint = RootPart.RootJoint
	local RootCF = euler(-1.57, 0, 3.14)
	local attack = false
	local attackdebounce = false
	local equipped = false
	local trispeed = 0.2
	local attackmode = "none"
	local idle = 0
	local Anim = "Idle"

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Right Arm"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Right Arm"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Left Arm"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Left Arm"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Right Leg"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Right Leg"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Left Leg"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Left Leg"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1

	function FindNearestTorso(Position, Distance, SinglePlayer)
		if SinglePlayer then
			return Distance > (SinglePlayer.Torso.CFrame.p - Position).magnitude
		end
		local List = {}
		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA("Model") and v:findFirstChild("Torso") and v ~= Character and Distance >= (v.Torso.Position - Position).magnitude then
				table.insert(List, v)
			end
		end
		return List
	end
	function lerp(a, b, t)
		return a + (b - a) * t
	end
	function slerp(a, b, t)
		dot = a:Dot(b)
		if dot > 0.99999 or dot < -0.99999 then
			return t <= 0.5 and a or b
		else
			r = math.acos(dot)
			return (a * math.sin((1 - t) * r) + b * math.sin(t * r)) / math.sin(r)
		end
	end
	function matrixInterpolate(a, b, t)
		local ax, ay, az, a00, a01, a02, a10, a11, a12, a20, a21, a22 = a:components()
		local bx, by, bz, b00, b01, b02, b10, b11, b12, b20, b21, b22 = b:components()
		local v0 = lerp(Vector3.new(ax, ay, az), Vector3.new(bx, by, bz), t)
		local v1 = slerp(Vector3.new(a00, a01, a02), Vector3.new(b00, b01, b02), t)
		local v2 = slerp(Vector3.new(a10, a11, a12), Vector3.new(b10, b11, b12), t)
		local v3 = slerp(Vector3.new(a20, a21, a22), Vector3.new(b20, b21, b22), t)
		local t = v1:Dot(v2)
		if not (t < 0) and t ~= 0 and not (t > 0) then
			return CFrame.new()
		end
		return CFrame.new(v0.x, v0.y, v0.z, v1.x, v1.y, v1.z, v2.x, v2.y, v2.z, v3.x, v3.y, v3.z)
	end
	function genWeld(a, b)
		local w = Instance.new("Weld", a)
		w.Part0 = a
		w.Part1 = b
		return w
	end
	function weld(a, b)
		local weld = Instance.new("Weld")
		weld.Name = "W"
		weld.Part0 = a
		weld.Part1 = b
		weld.C0 = a.CFrame:inverse() * b.CFrame
		weld.Parent = a
		return weld
	end
	function Lerp(c1, c2, al)
		local com1 = {
			c1.X,
			c1.Y,
			c1.Z,
			c1:toEulerAnglesXYZ()
		}
		local com2 = {
			c2.X,
			c2.Y,
			c2.Z,
			c2:toEulerAnglesXYZ()
		}
		for i, v in pairs(com1) do
			com1[i] = v + (com2[i] - v) * al
		end
		return CFrame.new(com1[1], com1[2], com1[3]) * CFrame.Angles(select(4, unpack(com1)))
	end
	function clerp(a, b, t)
		local qa = {
			QuaternionFromCFrame(a)
		}
		local qb = {
			QuaternionFromCFrame(b)
		}
		local ax, ay, az = a.x, a.y, a.z
		local bx, by, bz = b.x, b.y, b.z
		local _t = 1 - t
		return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
	end
	function QuaternionFromCFrame(cf)
		local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
		local trace = m00 + m11 + m22
		if trace > 0 then
			local s = math.sqrt(1 + trace)
			local recip = 0.5 / s
			return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
		else
			local i = 0
			if m00 < m11 then
				i = 1
			end
			if m22 > (i == 0 and m00 or m11) then
				i = 2
			end
			if i == 0 then
				local s = math.sqrt(m00 - m11 - m22 + 1)
				local recip = 0.5 / s
				return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
			elseif i == 1 then
				local s = math.sqrt(m11 - m22 - m00 + 1)
				local recip = 0.5 / s
				return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
			elseif i == 2 then
				local s = math.sqrt(m22 - m00 - m11 + 1)
				local recip = 0.5 / s
				return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
			end
		end
	end
	function QuaternionToCFrame(px, py, pz, x, y, z, w)
		local xs, ys, zs = x + x, y + y, z + z
		local wx, wy, wz = w * xs, w * ys, w * zs
		local xx = x * xs
		local xy = x * ys
		local xz = x * zs
		local yy = y * ys
		local yz = y * zs
		local zz = z * zs
		return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
	end
	function QuaternionSlerp(a, b, t)
		local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
		local startInterp, finishInterp
		if cosTheta >= 1.0E-4 then
			if 1 - cosTheta > 1.0E-4 then
				local theta = math.acos(cosTheta)
				local invSinTheta = 1 / math.sin(theta)
				startInterp = math.sin((1 - t) * theta) * invSinTheta
				finishInterp = math.sin(t * theta) * invSinTheta
			else
				startInterp = 1 - t
				finishInterp = t
			end
		elseif 1 + cosTheta > 1.0E-4 then
			local theta = math.acos(-cosTheta)
			local invSinTheta = 1 / math.sin(theta)
			startInterp = math.sin((t - 1) * theta) * invSinTheta
			finishInterp = math.sin(t * theta) * invSinTheta
		else
			startInterp = t - 1
			finishInterp = t
		end
		return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
	end
	function rayCast(Pos, Dir, Max, Ignore)
		return game:service("Workspace"):FindPartOnRay(Ray.new(Pos, Dir.unit * (Max or 999.999)), Ignore)
	end
	function part(formfactor, parent, reflectance, transparency, brickcolor, name, size)
		local fp = it("Part")
		fp.formFactor = formfactor
		fp.Parent = parent
		fp.Reflectance = reflectance
		fp.Transparency = transparency
		fp.CanCollide = false
		fp.Locked = true
		fp.BrickColor = brickcolor
		fp.Name = name
		fp.Size = size
		fp.Position = Torso.Position
		fp.BottomSurface = "Smooth"
		fp.TopSurface = "Smooth"
		fp:BreakJoints()
		return fp
	end
	function mesh(Mesh, part, meshtype, meshid, offset, scale)
		local mesh = it(Mesh)
		mesh.Parent = part
		if Mesh == "SpecialMesh" then
			mesh.MeshType = meshtype
			mesh.MeshId = meshid
		end
		mesh.Offset = offset
		mesh.Scale = scale
		return mesh
	end
	function weld(parent, part0, part1, c0)
		local weld = it("Weld")
		weld.Parent = parent
		weld.Part0 = part0
		weld.Part1 = part1
		weld.C0 = c0
		return weld
	end
	function rayCast(Pos, Dir, Max, Ignore)
		return game:service("Workspace"):FindPartOnRay(Ray.new(Pos, Dir.unit * (Max or 999.999)), Ignore)
	end
	RSH, LSH = nil, nil
	RW, LW = Instance.new("Weld"), Instance.new("Weld")
	RW.Name = "Right Shoulder"
	LW.Name = "Left Shoulder"
	LH = Torso["Left Hip"]
	RH = Torso["Right Hip"]
	TorsoColor = Torso.BrickColor
	function NoOutline(Part)
		Part.TopSurface, Part.BottomSurface, Part.LeftSurface, Part.RightSurface, Part.FrontSurface, Part.BackSurface = 10, 10, 10, 10, 10, 10
	end
	player = Player
	ch = Character
	RSH = ch.Torso["Right Shoulder"]
	LSH = ch.Torso["Left Shoulder"]
	RSH.Parent = nil
	LSH.Parent = nil
	RW.Name = "Right Shoulder"
	RW.Part0 = ch.Torso
	RW.C0 = cf(1.5, 0.5, 0)
	RW.C1 = cf(0, 0.5, 0)
	RW.Part1 = ch["Right Arm"]
	RW.Parent = ch.Torso
	LW.Name = "Left Shoulder"
	LW.Part0 = ch.Torso
	LW.C0 = cf(-1.5, 0.5, 0)
	LW.C1 = cf(0, 0.5, 0)
	LW.Part1 = ch["Left Arm"]
	LW.Parent = ch.Torso
	function newWeld(wp0, wp1, wc0x, wc0y, wc0z)
		local wld = Instance.new("Weld", wp1)
		wld.Part0 = wp0
		wld.Part1 = wp1
		wld.C0 = CFrame.new(wc0x, wc0y, wc0z)
	end
	newWeld(RootPart, Torso, 0, -1, 0)
	Torso.Weld.C1 = CFrame.new(0, -1, 0)
	newWeld(Torso, LeftLeg, -0.5, -1, 0)
	LeftLeg.Weld.C1 = CFrame.new(0, 1, 0)
	newWeld(Torso, RightLeg, 0.5, -1, 0)
	RightLeg.Weld.C1 = CFrame.new(0, 1, 0)
	Player = game:GetService("Players").LocalPlayer
	Character = char
	mouse = Player:GetMouse()
	m = Instance.new("Model", Character)
	local weldBetween = function(a, b)
		local weldd = Instance.new("ManualWeld")
		weldd.Part0 = a
		weldd.Part1 = b
		weldd.C0 = CFrame.new()
		weldd.C1 = b.CFrame:inverse() * a.CFrame
		weldd.Parent = a
		return weldd
	end
	ArtificialHB = Instance.new("BindableEvent", script)
	ArtificialHB.Name = "Heartbeat"
	script:WaitForChild("Heartbeat")
	frame = 0.016666666666666666
	tf = 0
	allowframeloss = false
	tossremainder = false
	lastframe = tick()
	script.Heartbeat:Fire()
	game:GetService("RunService").Heartbeat:connect(function(s, p)
		tf = tf + s
		if tf >= frame then
			if allowframeloss then
				script.Heartbeat:Fire()
				lastframe = tick()
			else
				for i = 1, math.floor(tf / frame) do
					script.Heartbeat:Fire()
				end
				lastframe = tick()
			end
			if tossremainder then
				tf = 0
			else
				tf = tf - frame * math.floor(tf / frame)
			end
		end
	end)
	function swait(num)
		if num == 0 or num == nil then
			ArtificialHB.Event:wait()
		else
			for i = 0, num do
				ArtificialHB.Event:wait()
			end
		end
	end
	mouse.KeyDown:connect(function(key)
		if key == "c" then
			repeat
				swait()
				Chillmusic.Volume = Chillmusic.Volume - 0.05
			until Chillmusic.Volume == 0
			Chillmusic:Stop()
			swait()
			Chillmusic2:Play()
			Chillmusic.Volume = 1
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "f" then
			text.Text = "Guys why not just chill?"
			wait(1)
			text.Text = "It's just the way life should be."
			wait(1)
			text.Text = "Chill is life."
			wait(1)
			text.Text = "Chill is love."
			wait(1)
			text.Text = "Chill is for the best."
			wait(1)
			text.Text = "Maybe if you were chill you wouldn't be a skid..."
			wait(3)
			text.Text = "But some people cant handle the chill can they."
			wait(3)
			text.Text = "Chill Af"
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "v" then
			repeat
				swait()
				Chillmusic2.Volume = Chillmusic2.Volume - 0.05
			until Chillmusic2.Volume == 0
			Chillmusic2:Stop()
			swait()
			Chillmusic:Play()
			Chillmusic2.Volume = 1
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "b" then
			text.Text = "Be back scrubs."
			wait(1)
			text.Text = "Afk nibba..."
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "n" then
			text.Text = "K back you nubs's!"
			wait(1)
			text.Text = "Chill Af"
		end
	end)
	m = Instance.new("ForceField", Character)
	m.Visible = false
	Character.Humanoid.WalkSpeed = 4
	mouse.KeyDown:connect(function(key)
		if string.byte(key) == 48 then
			Swing = 2
			Character.Humanoid.WalkSpeed = 40
		end
	end)
	mouse.KeyUp:connect(function(key)
		if string.byte(key) == 48 then
			Swing = 1
			Character.Humanoid.WalkSpeed = 4
		end
	end)
	local sine = 0
	local change = 1
	local val = 0
	spawn(function()
		while true do
			swait()
			sine = sine + change
			local torvel = (RootPart.Velocity * Vector3.new(1, 0, 1)).magnitude
			local velderp = RootPart.Velocity.y
			hitfloor, posfloor = rayCast(RootPart.Position, CFrame.new(RootPart.Position, RootPart.Position - Vector3.new(0, 1, 0)).lookVector, 4, Character)
			if equipped == true or equipped == false then
				if attack == false then
					idle = idle + 1
					Character.Humanoid.MaxHealth = math.huge
					Character.Humanoid.Health = math.huge
				else
					idle = 0
				end
				if not (idle >= 500) or attack == false then
				end
				if torvel < 1 and hitfloor ~= nil then
					Anim = "Chill"
					if attack == false then
						Humanoid.CameraOffset = Vector3.new(0, 10.25 - 5.45 * math.cos(sine / 65), 0)
						Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 10.25 - 5.45 * math.cos(sine / 65), 0) * CFrame.Angles(math.rad(90 + 15 * math.sin(sine / 60)), math.rad(0), math.rad(0)), 0.8)
						Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-20 + 20 * math.cos(sine / 60)), math.rad(0 + 4 * math.sin(sine / 60)), math.rad(0)), 0.2)
						RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-90 + 25 * math.cos(sine / 60)), math.rad(0 + 20 * math.sin(sine / 60)), math.rad(0 + 55 * math.sin(sine / 60))), 0.3)
						LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-90 + 25 * math.cos(sine / 60)), math.rad(-20 - 20 * math.sin(sine / 60)), math.rad(0 - 55 * math.sin(sine / 60))), 0.3)
						LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -0.86 + 0.03 * math.cos(sine / 65), -0.4) * CFrame.Angles(math.rad(15 - 45 * math.cos(sine / 70)), math.rad(3), math.rad(-4)), 0.8)
						RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1 + 0.05 * math.cos(sine / 65), -0.4) * CFrame.Angles(math.rad(15 - 35 * math.cos(sine / 65)), math.rad(-3), math.rad(4)), 0.8)
					end
				elseif torvel > 2 and torvel < 22 and hitfloor ~= nil then
					Anim = "Walk"
					if attack == false then
						Humanoid.CameraOffset = Vector3.new(0, 6 - 2.55 * math.cos(sine / 48.5), 0)
						RootJoint.C0 = clerp(RootJoint.C0, RootCF * cf(0, 0, 0) * angles(math.rad(5), math.rad(0), math.rad(0)), 0.2)
						Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 6 - 2.55 * math.cos(sine / 48.5), 0) * CFrame.Angles(math.rad(-90 + 5 * math.cos(sine / 45)), math.rad(180 * math.cos(sine / 48.5)), math.rad(0)), 0.8)
						Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-4 + 2 * math.sin(sine / 48)), math.rad(0), math.rad(0)), 0.2)
						RW.C0 = clerp(RW.C0, cf(1.5, 0.5 + 0.1 * math.cos(sine / 45), 0) * angles(math.rad(90), math.rad(0), math.rad(90 - 20.5 * math.cos(sine / 45))), 0.3)
						LW.C0 = clerp(LW.C0, cf(-1.5, 0.5 + 0.1 * math.cos(sine / 45), 0) * angles(math.rad(90), math.rad(0), math.rad(-90 + 20.5 * math.cos(sine / 45))), 0.3)
						LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -1 - 0.05 * math.cos(sine / 45), 0) * CFrame.Angles(math.rad(0), math.rad(3), math.rad(-4)), 0.8)
						RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1 + 0.05 * math.cos(sine / 45), 0) * CFrame.Angles(math.rad(0), math.rad(-3), math.rad(4)), 0.8)
					end
				elseif torvel >= 22 and hitfloor ~= nil then
					Anim = "Run"
					if attack == false then
						Humanoid.CameraOffset = Vector3.new(0, 6 - 1.55 * math.cos(sine / 68.5), 0)
						RootJoint.C0 = clerp(RootJoint.C0, RootCF * cf(0, 6 - 1.55 * math.cos(sine / 68.5), -0.2) * angles(math.rad(50), math.rad(0), math.rad(0)), 0.2)
						Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 6 - 1.55 * math.cos(sine / 68.5), 0) * CFrame.Angles(math.rad(-40 + 20 * math.sin(sine / 68.5)), 0, 0), 0.8)
						Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-12 + 17 * math.cos(sine / 68.5)), math.rad(0), math.rad(0)), 0.2)
						RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-90), math.rad(0), math.rad(40 - 20 * math.cos(sine / 68.5))), 0.2)
						LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-90), math.rad(0), math.rad(-40 + 20 * math.cos(sine / 68.5))), 0.2)
						LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -0.87, -0.25) * CFrame.Angles(math.rad(-45 - 10 * math.cos(sine / 68.5)), math.rad(0), math.rad(0)), 0.8)
						RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1, -0.1) * CFrame.Angles(math.rad(-35 - 10 * math.cos(sine / 68.5)), math.rad(0), math.rad(0)), 0.8)
					end
				end
			end
		end
	end)



	-- Objects

	local Chill_Gui_Bro = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
	local Header = Instance.new("Frame")
	local BackGround = Instance.new("Frame")
	local Chill_Gui_Label = Instance.new("TextLabel")
	local Play_ID_Button = Instance.new("TextButton")
	local ID_Box = Instance.new("TextBox")
	local Set_Vol_Button = Instance.new("TextButton")
	local Vol_Box = Instance.new("TextBox")
	local Set_Tpos_Button = Instance.new("TextButton")
	local Tpos_Box = Instance.new("TextBox")
	local Set_Text_Button = Instance.new("TextButton")
	local Tpos_Box_2 = Instance.new("TextBox")
	local Toggle_Chat_Button = Instance.new("TextButton")
	local Chat_Toggle_Label = Instance.new("TextLabel")
	local Current_Song_Label = Instance.new("TextLabel")

	-- Properties

	Chill_Gui_Bro.Name = "Chill_Gui_Bro"

	Header.Name = "Header"
	Header.Parent = Chill_Gui_Bro
	Header.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Header.BorderSizePixel = 0
	Header.Draggable = true
	Header.Active = true
	Header.Selectable = true
	Header.Position = UDim2.new(0.469539374, 0, 0.147921771, 0)
	Header.Size = UDim2.new(0, 250, 0, 45)

	BackGround.Name = "BackGround"
	BackGround.Parent = Header
	BackGround.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
	BackGround.BorderSizePixel = 0
	BackGround.Draggable = true
	BackGround.Position = UDim2.new(0, 0, 1, 0)
	BackGround.Size = UDim2.new(0, 250, 0, 299)

	Chill_Gui_Label.Name = "Chill_Gui_Label"
	Chill_Gui_Label.Parent = Header
	Chill_Gui_Label.BackgroundColor3 = Color3.new(1, 1, 1)
	Chill_Gui_Label.BackgroundTransparency = 1
	Chill_Gui_Label.BorderSizePixel = 0
	Chill_Gui_Label.Draggable = true
	Chill_Gui_Label.Size = UDim2.new(0, 250, 0, 45)
	Chill_Gui_Label.Font = Enum.Font.Arcade
	Chill_Gui_Label.Text = "~»Chill Gui«~"
	Chill_Gui_Label.TextColor3 = Color3.new(1, 1, 1)
	Chill_Gui_Label.TextScaled = true
	Chill_Gui_Label.TextSize = 14
	Chill_Gui_Label.TextWrapped = true

	Play_ID_Button.Name = "Play_ID_Button"
	Play_ID_Button.Parent = Header
	Play_ID_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Play_ID_Button.BorderColor3 = Color3.new(0, 0, 0)
	Play_ID_Button.BorderSizePixel = 0
	Play_ID_Button.Position = UDim2.new(0.0520000011, 0, 1.22222221, 0)
	Play_ID_Button.Size = UDim2.new(0, 68, 0, 35)
	Play_ID_Button.Font = Enum.Font.Arcade
	Play_ID_Button.Text = "Play ID"
	Play_ID_Button.TextColor3 = Color3.new(1, 1, 1)
	Play_ID_Button.TextSize = 20
	Play_ID_Button.TextWrapped = true

	ID_Box.Name = "ID_Box"
	ID_Box.Parent = Header
	ID_Box.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	ID_Box.BorderColor3 = Color3.new(0, 0, 0)
	ID_Box.BorderSizePixel = 0
	ID_Box.Position = UDim2.new(0.356000006, 0, 1.22222221, 0)
	ID_Box.Size = UDim2.new(0, 140, 0, 35)
	ID_Box.Font = Enum.Font.Arcade
	ID_Box.Text = "ID here"
	ID_Box.TextColor3 = Color3.new(1, 1, 1)
	ID_Box.TextSize = 35
	ID_Box.TextWrapped = true

	Set_Vol_Button.Name = "Set_Vol_Button"
	Set_Vol_Button.Parent = Header
	Set_Vol_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Set_Vol_Button.BorderColor3 = Color3.new(0, 0, 0)
	Set_Vol_Button.BorderSizePixel = 0
	Set_Vol_Button.Position = UDim2.new(0.0520000011, 0, 2.20000005, 0)
	Set_Vol_Button.Size = UDim2.new(0, 68, 0, 35)
	Set_Vol_Button.Font = Enum.Font.Arcade
	Set_Vol_Button.Text = "Set Vol"
	Set_Vol_Button.TextColor3 = Color3.new(1, 1, 1)
	Set_Vol_Button.TextSize = 20
	Set_Vol_Button.TextWrapped = true

	Vol_Box.Name = "Vol_Box"
	Vol_Box.Parent = Header
	Vol_Box.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Vol_Box.BorderColor3 = Color3.new(0, 0, 0)
	Vol_Box.BorderSizePixel = 0
	Vol_Box.Position = UDim2.new(0.356000006, 0, 2.20000005, 0)
	Vol_Box.Size = UDim2.new(0, 140, 0, 35)
	Vol_Box.Font = Enum.Font.Arcade
	Vol_Box.Text = "Volume"
	Vol_Box.TextColor3 = Color3.new(1, 1, 1)
	Vol_Box.TextSize = 35
	Vol_Box.TextWrapped = true

	Set_Tpos_Button.Name = "Set_Tpos_Button"
	Set_Tpos_Button.Parent = Header
	Set_Tpos_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Set_Tpos_Button.BorderColor3 = Color3.new(0, 0, 0)
	Set_Tpos_Button.BorderSizePixel = 0
	Set_Tpos_Button.Position = UDim2.new(0.0520000011, 0, 3.24444437, 0)
	Set_Tpos_Button.Size = UDim2.new(0, 68, 0, 35)
	Set_Tpos_Button.Font = Enum.Font.Arcade
	Set_Tpos_Button.Text = "Set Tpos"
	Set_Tpos_Button.TextColor3 = Color3.new(1, 1, 1)
	Set_Tpos_Button.TextSize = 18
	Set_Tpos_Button.TextWrapped = true

	Tpos_Box.Name = "Tpos_Box"
	Tpos_Box.Parent = Header
	Tpos_Box.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Tpos_Box.BorderColor3 = Color3.new(0, 0, 0)
	Tpos_Box.BorderSizePixel = 0
	Tpos_Box.Position = UDim2.new(0.356000006, 0, 3.24444437, 0)
	Tpos_Box.Size = UDim2.new(0, 140, 0, 35)
	Tpos_Box.Font = Enum.Font.Arcade
	Tpos_Box.Text = "Time Position"
	Tpos_Box.TextColor3 = Color3.new(1, 1, 1)
	Tpos_Box.TextSize = 20
	Tpos_Box.TextWrapped = true

	Set_Text_Button.Name = "Set_Text_Button"
	Set_Text_Button.Parent = Header
	Set_Text_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Set_Text_Button.BorderColor3 = Color3.new(0, 0, 0)
	Set_Text_Button.BorderSizePixel = 0
	Set_Text_Button.Position = UDim2.new(0.0600000024, 0, 4.22222233, 0)
	Set_Text_Button.Size = UDim2.new(0, 68, 0, 35)
	Set_Text_Button.Font = Enum.Font.Arcade
	Set_Text_Button.Text = "Set Text"
	Set_Text_Button.TextColor3 = Color3.new(1, 1, 1)
	Set_Text_Button.TextSize = 18
	Set_Text_Button.TextWrapped = true

	Tpos_Box_2.Name = "Tpos_Box"
	Tpos_Box_2.Parent = Header
	Tpos_Box_2.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Tpos_Box_2.BorderColor3 = Color3.new(0, 0, 0)
	Tpos_Box_2.BorderSizePixel = 0
	Tpos_Box_2.Position = UDim2.new(0.356000006, 0, 4.22222233, 0)
	Tpos_Box_2.Size = UDim2.new(0, 140, 0, 35)
	Tpos_Box_2.Font = Enum.Font.Arcade
	Tpos_Box_2.Text = "Text"
	Tpos_Box_2.TextColor3 = Color3.new(1, 1, 1)
	Tpos_Box_2.TextSize = 20
	Tpos_Box_2.TextWrapped = true

	Toggle_Chat_Button.Name = "Toggle_Chat_Button"
	Toggle_Chat_Button.Parent = Header
	Toggle_Chat_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Toggle_Chat_Button.BorderColor3 = Color3.new(0, 0, 0)
	Toggle_Chat_Button.BorderSizePixel = 0
	Toggle_Chat_Button.Position = UDim2.new(0.0579999983, 0, 5.26666689, 0)
	Toggle_Chat_Button.Size = UDim2.new(0, 97, 0, 35)
	Toggle_Chat_Button.Font = Enum.Font.Arcade
	Toggle_Chat_Button.Text = "Toggle Chat"
	Toggle_Chat_Button.TextColor3 = Color3.new(1, 1, 1)
	Toggle_Chat_Button.TextSize = 20
	Toggle_Chat_Button.TextWrapped = true

	Chat_Toggle_Label.Name = "Chat_Toggle_Label"
	Chat_Toggle_Label.Parent = Header
	Chat_Toggle_Label.BackgroundColor3 = Color3.new(1, 1, 1)
	Chat_Toggle_Label.BackgroundTransparency = 0.89999997615814
	Chat_Toggle_Label.BorderColor3 = Color3.new(1, 1, 1)
	Chat_Toggle_Label.Position = UDim2.new(0.540000021, 0, 5.26666689, 0)
	Chat_Toggle_Label.Size = UDim2.new(0, 94, 0, 35)
	Chat_Toggle_Label.Font = Enum.Font.Arcade
	Chat_Toggle_Label.Text = "~»False«~"
	Chat_Toggle_Label.TextColor3 = Color3.new(1, 1, 1)
	Chat_Toggle_Label.TextScaled = true
	Chat_Toggle_Label.TextSize = 14
	Chat_Toggle_Label.TextWrapped = true

	Current_Song_Label.Name = "Current_Song_Label"
	Current_Song_Label.Parent = Header
	Current_Song_Label.BackgroundColor3 = Color3.new(1, 1, 1)
	Current_Song_Label.BackgroundTransparency = 0.89999997615814
	Current_Song_Label.BorderColor3 = Color3.new(1, 1, 1)
	Current_Song_Label.Position = UDim2.new(0.0520000011, 0, 6.64444447, 0)
	Current_Song_Label.Size = UDim2.new(0, 225, 0, 35)
	Current_Song_Label.Font = Enum.Font.Arcade
	Current_Song_Label.Text = "~»Current Song: None«~"
	Current_Song_Label.TextColor3 = Color3.new(1, 1, 1)
	Current_Song_Label.TextScaled = true
	Current_Song_Label.TextSize = 14
	Current_Song_Label.TextWrapped = true

	Play_ID_Button.MouseButton1Down:Connect(function()
		if tonumber(ID_Box.Text) then
			Chillmusic:Stop()
			Chillmusic.SoundId='rbxassetid://'..tonumber(ID_Box.Text)
			Chillmusic:Play()
			currentsong = game:GetService("MarketplaceService"):GetProductInfo(tonumber(ID_Box.Text)).Name
			text.Text = "~»Chill Af«~ Now Playing: "..currentsong
			Current_Song_Label.Text = "~»Current Song: "..currentsong.."«~"
			wait(4)
			text.Text = "~»Fell Apart AF«~"
		end
	end)
	local ischatting = false

	Set_Vol_Button.MouseButton1Down:Connect(function()

		Chillmusic.Volume = tonumber(Vol_Box.Text)
	end)

	Set_Tpos_Button.MouseButton1Down:Connect(function()

		Chillmusic.TimePosition = tonumber(Tpos_Box.Text)
	end)

	Set_Text_Button.MouseButton1Down:Connect(function()

		text.Text = "~»"..Tpos_Box_2.Text.."«~"
	end)

	Toggle_Chat_Button.MouseButton1Down:Connect(function()
		if ischatting == false then
			ischatting = true
			Chat_Toggle_Label.Text = "~»True«~"
			spawn(function()
				game.Players.LocalPlayer.Chatted:connect(function(msg)
					for i = 0, msg:len(), 1 do
						text.Text = "~»"..msg:sub(0, i).."«~"
					end
					wait(3)
					text.Text = "~»Fell Apart AF«~"
				end)
			end)
		else
			ischatting = false
			Chat_Toggle_Label.Text = "~»False«~"
		end
	end)
end)

AdminSection:NewButton("Incode Admin", "Runs An Admin Script Made By Danny (dovydas138)", function()
	-- Credit by , ItzDannyX , Gryo_1
--[[
	MoonlightX Fate admin - 28/6/2021
]]

	UndetectedMode = UndetectedMode or false
	if (not UndetectedMode and not game:IsLoaded()) then
		print("MoonlightX Fate admin: waiting for game to load...");
		game.Loaded:Wait();
	end

	local start = start or tick() or os.clock();

	if (game:IsLoaded() and UndetectedMode and syn) then
		syn.queue_on_teleport("loadstring(game:HttpGet(\"https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua\"))()");
		return game:GetService("TeleportService").TeleportToPlaceInstance(game:GetService("TeleportService"), game.PlaceId, game.JobId);
	end

	if (getgenv().F_A and getgenv().F_A.Loaded) then
		return getgenv().F_A.Utils.Notify(nil, "Loaded", " MoonlightX admin is already loaded... use 'killscript' to kill", nil);
	end

	RunService               = game:GetService("RunService");
	Players                  = game:GetService("Players");
	UserInputService         = game:GetService("UserInputService");
	local Workspace          = game:GetService("Workspace");
	local ReplicatedStorage  = game:GetService("ReplicatedStorage");
	local StarterPlayer      = game:GetService("StarterPlayer");
	local StarterPack        = game:GetService("StarterPack");
	local StarterGui         = game:GetService("StarterGui");
	local TeleportService    = game:GetService("TeleportService");
	local CoreGui            = game:GetService("CoreGui");
	local TweenService       = game:GetService("TweenService");
	local HttpService        = game:GetService("HttpService");
	local TextService        = game:GetService("TextService");
	local MarketplaceService = game:GetService("MarketplaceService")
	local Chat               = game:GetService("Chat");
	local SoundService       = game:GetService("SoundService");
	local Lighting           = game:GetService("Lighting");

	local Camera             = Workspace.CurrentCamera

	LocalPlayer              = Players.LocalPlayer
	local Mouse              = LocalPlayer and LocalPlayer:GetMouse();

	local GetCharacter = GetCharacter or function(Plr)
		return Plr and Plr.Character or LocalPlayer.Character
	end

	--IMPORT [extend]
	Debug = true
	if (getconnections) then
		local ErrorConnections = getconnections(game:GetService("ScriptContext").Error);
		if (next(ErrorConnections)) then
			getfenv().error = warn
			getgenv().error = warn
		end
	end

	local table = {}
	for i,v in pairs(getfenv().table) do
		table[i] = v
	end
	local string = {}
	for i,v in pairs(getfenv().string) do
		string[i] = v
	end

	---@param searchString string
	---@param rawPos number
	---@return boolean
	string.startsWith = function(str, searchString, rawPos)
		local pos = rawPos or 1
		return searchString == "" and true or string.sub(str, pos, pos) == searchString
	end

	---@param str any
	---@return string
	string.trim = function(str)
		return str:gsub("^%s*(.-)%s*$", "%1");
	end

	---@return table
	table.tbl_concat = function(...)
		local new = {}
		for i, v in next, {...} do
			for i2, v2 in next, v do
				table.insert(new, #new + 1, v2);
			end
		end
		return new
	end

	---@param tbl table
	---@param val any
	---@return any
	table.indexOf = function(tbl, val)
		if (type(tbl) == 'table') then
			for i, v in next, tbl do
				if (v == val) then
					return i
				end
			end
		end
	end

	---@param tbl table
	---@param ret function
	table.forEach = function(tbl, ret)
		for i, v in next, tbl do
			ret(i, v);
		end
	end

	---@param tbl table
	---@param ret function
	---@return table
	table.filter = function(tbl, ret)
		if (type(tbl) == 'table') then
			local new = {}
			for i, v in next, tbl do
				if (ret(i, v)) then
					table.insert(new, #new + 1, v);
				end
			end
			return new
		end
	end

	---@param tbl table
	---@param ret function
	---@return table
	table.map = function(tbl, ret)
		if (type(tbl) == 'table') then
			local new = {}
			for i, v in next, tbl do
				table.insert(new, #new + 1, ret(i, v));
			end
			return new
		end
	end

	---@param tbl table
	---@param ret function
	table.deepsearch = function(tbl, ret)
		if (type(tbl) == 'table') then
			for i, v in next, tbl do
				if (type(v) == 'table') then
					table.deepsearch(v, ret);
				end
				ret(i, v);
			end
		end
	end

	---The flat() method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth
	---@param tbl table
	---@return table
	table.flat = function(tbl)
		if (type(tbl) == 'table') then
			local new = {}
			table.deepsearch(tbl, function(i, v)
				if (type(v) ~= 'table') then
					new[#new + 1] = v
				end
			end)
			return new
		end
	end

	---@param tbl table
	---@param ret function
	---@return table
	table.flatMap = function(tbl, ret)
		if (type(tbl) == 'table') then
			local new = table.flat(table.map(tbl, ret));
			return new
		end
	end

	---@param tbl any
	table.shift = function(tbl)
		if (type(tbl) == 'table') then
			local firstVal = tbl[1]
			tbl = table.pack(table.unpack(tbl, 2, #tbl));
			tbl.n = nil
			return tbl
		end
	end

	table.keys = function(tbl)
		if (type(tbl) == 'table') then
			local new = {}
			for i, v in next, tbl do
				new[#new + 1] = i	
			end
			return new
		end
	end

	local touched = {}
	firetouchinterest = firetouchinterest or function(part1, part2, toggle)
		if (part1 and part2) then
			if (toggle == 0) then
				touched[1] = part1.CFrame
				part1.CFrame = part2.CFrame
			else
				part1.CFrame = touched[1]
				touched[1] = nil
			end
		end
	end

	hookfunction = hookfunction or function(func, newfunc)
		if (replaceclosure) then
			replaceclosure(func, newfunc);
			return newfunc
		end

		func = newcclosure and newcclosure(newfunc) or newfunc
		return newfunc
	end

	getconnections = getconnections or function()
		return {}
	end

	getrawmetatable = getrawmetatable or function()
		return setmetatable({}, {});
	end

	getnamecallmethod = getnamecallmethod or function()
		return ""
	end

	checkcaller = checkcaller or function()
		return false
	end

	getgc = getgc or function()
		return {}
	end

	local ISPF, Network, Client, GetBodyParts, GunTbl, Trajectory
	if (game.PlaceId == 292439477) then
		ISPF = true
		for i, v in next, getgc(true) do
			if (type(v) == "table") then
				if (rawget(v, "send")) then
					Network = v
				end
				if (rawget(v, "getbodyparts")) then
					GetBodyParts = rawget(v, "getbodyparts");
				end
				if (rawget(v, "setsprintdisable")) then
					GunTbl = v
				end
				if (rawget(v, "setsway")) then
					Client = v
				end
			elseif (type(v) == "function") then
				local funcinfo = debug.getinfo(v);
				if (funcinfo.name == "trajectory") then
					Trajectory = v
				end
			end
			if (GunTbl and GetBodyParts and Network and Trajectory) then
				break
			end
		end
		GetCharacter = function(Plr)
			if (Plr == LocalPlayer or not Plr) then
				return LocalPlayer.Character
			end
			local Char = GetBodyParts(Plr);
			if (type(Char) == "table") then
				if (rawget(Char, "rootpart")) then
					Plr.Character = rawget(Char, "rootpart").Parent
				end
			end
			return Plr and Plr.Character or nil
		end
	end

	local ProtectedInstances = {}
	local SpoofedInstances = {}
	local SpoofedProperties = {}
	local Methods = {
		"FindFirstChild",
		"FindFirstChildWhichIsA",
		"FindFirstChildOfClass",
		"IsA"
	}
	local AllowedIndexes = {
		"RootPart",
		"Parent"
	}
	local AllowedNewIndexes = {
		"Jump"
	}
	local SilentAimingPlayer = nil
	local SilentAimHitChance = 100
	local AimBone = "Head"
	local Wallbang = true
	local AntiKick = false
	local AntiTeleport = false

	local OldMemoryTags = {}
	local Stats = game:GetService("Stats");
	for i, v in next, Enum.DeveloperMemoryTag:GetEnumItems() do
		OldMemoryTags[v] = Stats:GetMemoryUsageMbForTag(v);
	end

	local mt = getrawmetatable(game);
	local OldMetaMethods = {}
	setreadonly(mt, false);
	for i, v in next, mt do
		OldMetaMethods[i] = v
	end
	local __Namecall = OldMetaMethods.__namecall
	local __Index = OldMetaMethods.__index
	local __NewIndex = OldMetaMethods.__newindex

	mt.__namecall = newcclosure(function(self, ...)
		if (checkcaller()) then
			return __Namecall(self, ...);
		end

		local Args = {...}
		local Method = getnamecallmethod();

		local Protected = ProtectedInstances[self]

		if (Protected) then
			if (table.find(Methods, Method)) then
				return Method == "IsA" and false or nil
			end
		end

		if (Method == "GetChildren" or Method == "GetDescendants") then
			return table.filter(__Namecall(self, ...), function(i, v)
				return not table.find(ProtectedInstances, v);
			end)
		end

		if (Method == "GetFocusedTextBox") then
			if (table.find(ProtectedInstances, __Namecall(self, ...))) then
				return nil
			end
		end

		if (AntiKick and string.lower(Method) == "kick") then
			getgenv().F_A.Utils.Notify(nil, "Attempt to kick", ("attempt to kick with message \"%s\""):format(Args[1]));
			return
		end

		if (AntiTeleport and Method == "Teleport" or Method == "TeleportToPlaceInstance") then
			getgenv().F_A.Utils.Notify(nil, "Attempt to teleport", ("attempt to teleport to place \"%s\""):format(Args[1]));
			return
		end

		return __Namecall(self, unpack(Args));
	end)

	mt.__index = newcclosure(function(Instance_, Index)
		if (checkcaller()) then
			return __Index(Instance_, Index);
		end

		local SanitisedIndex = type(Index) == 'string' and Index:gsub("%z.*", "") or Index

		local ProtectedInstance = ProtectedInstances[Instance_]
		local SpoofedInstance = SpoofedInstances[Instance_]
		local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]

		if (SpoofedInstance) then
			if (table.find(AllowedIndexes, SanitisedIndex)) then
				return __Index(Instance_, Index);
			end
			return __Index(SpoofedInstance, Index);
		end

		if (SpoofedPropertiesForInstance) then
			for i, SpoofedProperty in next, SpoofedPropertiesForInstance do
				if (SanitisedIndex == SpoofedProperty.Property) then
					return __Index(SpoofedProperty.SpoofedProperty, Index);
				end
			end
		end

		if (ProtectedInstance) then
			if (table.find(Methods, SanitisedIndex)) then
				return newcclosure(function()
					return SanitisedIndex == "IsA" and false or nil
				end);
			end
		end

		return __Index(Instance_, Index);
	end)

	mt.__newindex = newcclosure(function(Instance_, Index, Value)
		local SpoofedInstance = SpoofedInstances[Instance_]
		local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]

		if (checkcaller()) then
			if (SpoofedInstance or SpoofedPropertiesForInstance) then
				local Connections = getconnections(Instance_:GetPropertyChangedSignal(SpoofedPropertiesForInstance and SpoofedPropertiesForInstance.Property or Index));
				if (not next(Connections)) then
					return __NewIndex(Instance_, Index, Value);
				end
				for i, v in next, Connections do
					v:Disable();
				end
				local Suc, Ret = pcall(function()
					return __NewIndex(Instance_, Index, Value);
				end)
				for i, v in next, Connections do
					v:Enable();
				end
				return Ret
			end
			return __NewIndex(Instance_, Index, Value);
		end

		local SanitisedIndex = type(Index) == 'string' and Index:gsub("%z.*", "") or Index

		if (SpoofedInstance) then
			if (table.find(AllowedNewIndexes, SanitisedIndex)) then
				return __NewIndex(Instance_, Index, Value);
			end
			return __NewIndex(SpoofedInstance, Index, __Index(SpoofedInstance, Index));
		end

		if (SpoofedPropertiesForInstance) then
			for i, SpoofedProperty in next, SpoofedPropertiesForInstance do
				if (SpoofedProperty.Property == SanitisedIndex and not table.find(AllowedIndexes, SanitisedIndex)) then
					return __NewIndex(SpoofedProperty.SpoofedProperty, Index, __Index(SpoofedProperty.SpoofedProperty, Index));
				end
			end
		end

		return __NewIndex(Instance_, Index, Value);
	end)

	setreadonly(mt, true);

	local OldGetChildren
	OldGetChildren = hookfunction(game.GetChildren, function(...)
		if (not checkcaller()) then
			local Children = OldGetChildren(...);
			if (table.find(Children, ProtectedInstances)) then
				return table.filter(Children, function(i, v)
					return not table.find(ProtectedInstances, v);
				end)
			end
		end
		return OldGetChildren(...);
	end)

	local OldGetDescendants
	OldGetDescendants = hookfunction(game.GetDescendants, newcclosure(function(...)
		if (not checkcaller()) then
			local Descendants = OldGetDescendants(...);
			if (table.find(Descendants, ProtectedInstances)) then
				return table.filter(Descendants, function(i, v)
					return not table.find(ProtectedInstances, v);
				end)
			end
		end
		return OldGetDescendants(...);
	end))

	local OldGetFocusedTextBox
	OldGetFocusedTextBox = hookfunction(game:GetService("UserInputService").GetFocusedTextBox, newcclosure(function(...)
		if (not checkcaller()) then
			local FocusedTextBox = OldGetFocusedTextBox(...);
			if (FocusedTextBox and table.find(ProtectedInstances, FocusedTextBox)) then
				return nil
			end
		end
		return OldGetFocusedTextBox(...);
	end))

	local OldKick
	OldKick = hookfunction(Instance.new("Player").Kick, newcclosure(function(self, ...)
		if (AntiKick) then
			local Args = {...}
			getgenv().F_A.Utils.Notify(nil, "Attempt to kick", ("attempt to kick with message \"%s\""):format(Args[1]));
			return
		end

		return OldKick(self, ...);
	end))

	local OldTeleportToPlaceInstance
	OldTeleportToPlaceInstance = hookfunction(game:GetService("TeleportService").TeleportToPlaceInstance, newcclosure(function(self, ...)
		if (AntiTeleport) then
			getgenv().F_A.Utils.Notify(nil, "Attempt to teleport", ("attempt to teleport to place \"%s\""):format(Args[1]));
			return
		end
		return OldTeleportToPlaceInstance(self, ...);
	end))
	local OldTeleport
	OldTeleport = hookfunction(game:GetService("TeleportService").Teleport, newcclosure(function(self, ...)
		if (AntiTeleport) then
			getgenv().F_A.Utils.Notify(nil, "Attempt to teleport", ("attempt to teleport to place \"%s\""):format(Args[1]));
			return
		end
		return OldTeleport(self, ...);
	end))

	local OldGetMemoryUsageMbForTag
	OldGetMemoryUsageMbForTag = hookfunction(Stats.GetMemoryUsageMbForTag, newcclosure(function(self, ...)
		if (game.PlaceId == 6650331930) then
			local Args = {...}
			if (Args[1] == Enum.DeveloperMemoryTag.Gui) then
				return Stats:GetMemoryUsageMbForTag(Args[1]) - 1
			end
		end
		return OldGetMemoryUsageMbForTag(self, ...);
	end))

	local ProtectInstance = function(Instance_, disallow)
		if (not ProtectedInstances[Instance_]) then
			ProtectedInstances[#ProtectedInstances + 1] = Instance_
			if (syn and syn.protect_gui and not disallow) then
				syn.protect_gui(Instance_);
			end
		end
	end

	local SpoofInstance = function(Instance_, Instance2)
		if (not SpoofedInstances[Instance_]) then
			SpoofedInstances[Instance_] = Instance2 and Instance2 or Instance_:Clone();
		end
	end

	local SpoofProperty = function(Instance_, Property)
		if (SpoofedProperties[Instance_]) then
			local Properties = table.map(SpoofedProperties[Instance_], function(i, v)
				return v.Property
			end)
			if (not table.find(Properties, Property)) then
				table.insert(SpoofedProperties[Instance_], {
					SpoofedProperty = SpoofedProperties[Instance_].SpoofedProperty,
					Property = Property,
				});
			end
		else
			SpoofedProperties[Instance_] = {{
				SpoofedProperty = Instance_:Clone(),
				Property = Property,
			}}
		end
	end

	local UnProtectInstance = function(Instance_)
		for i, v in next, ProtectedInstances do
			if (ProtectedInstances[i] == Instance_) then
				ProtectedInstances[i] = nil
			end
		end
	end

	local UnSpoofInstance = function(Instance_)
		if (SpoofedInstances[Instance_]) then
			SpoofedInstances[Instance_]:Destroy();
			SpoofedInstances[Instance_] = nil
		end
	end
	local UnSpoofProperty = function(Instance_, Property)
		local SpoofedProperty = SpoofedProperties[Instance_]
		if (SpoofedProperty and SpoofedProperty.Property == Property) then
			SpoofedProperty.SpoofedProperty:Destroy();
			SpoofedInstances[Instance_] = nil
		end
	end
	--END IMPORT [extend]


	local PlayerGui = LocalPlayer and LocalPlayer:FindFirstChildOfClass('PlayerGui')

	local PluginLibrary = {}


	PluginLibrary.GetCharacter = GetCharacter

	local GetRoot = function(Plr)
		return Plr and GetCharacter(Plr) and GetCharacter(Plr):FindFirstChild("HumanoidRootPart") or GetCharacter() and GetCharacter():FindFirstChild("HumanoidRootPart");
	end
	PluginLibrary.GetRoot = GetRoot

	local GetHumanoid = function(Plr)
		return Plr and GetCharacter(Plr) and GetCharacter(Plr):FindFirstChildWhichIsA("Humanoid") or GetCharacter() and GetCharacter():FindFirstChildWhichIsA("Humanoid");
	end
	PluginLibrary.GetHumanoid = GetHumanoid

	local GetMagnitude = function(Plr)
		return Plr and GetRoot(Plr) and (GetRoot(Plr).Position - GetRoot().Position).magnitude or math.huge
	end
	PluginLibrary.GetMagnitude = GetMagnitude

	local Settings = {
		Prefix = "!",
		CommandBarPrefix = "Semicolon"
	}
	local PluginSettings = {
		PluginsEnabled = true,
		PluginDebug = false,
		DisabledPlugins = {
			["PluginName"] = true
		}
	}

	local WriteConfig = function(Destroy)
		local JSON = HttpService:JSONEncode(Settings);
		local PluginJSON = HttpService:JSONEncode(PluginSettings);
		if (isfolder("fates-admin") and Destroy) then
			delfolder("fates-admin");
			writefile("fates-admin/config.json", JSON);
			writefile("fates/admin/pluings/plugin-conf.json", PluginJSON);
		else
			makefolder("fates-admin");
			makefolder("fates-admin/plugins");
			makefolder("fates-admin/chatlogs");
			writefile("fates-admin/config.json", JSON);
			writefile("fates-admin/plugins/plugin-conf.json", PluginJSON);
		end
	end

	local GetConfig = function()
		if (isfolder("fates-admin")) then
			return HttpService:JSONDecode(readfile("fates-admin/config.json"));
		else
			WriteConfig();
			return HttpService:JSONDecode(readfile("fates-admin/config.json"));
		end
	end

	local GetPluginConfig = function()
		if (isfolder("fates-admin") and isfolder("fates-admin/plugins") and isfile("fates-admin/plugins/plugin-conf.json")) then
			return HttpService:JSONDecode(readfile("fates-admin/plugins/plugin-conf.json"));
		else
			WriteConfig();
			return HttpService:JSONDecode(readfile("fates-admin/plugins/plugin-conf.json"));
		end
	end

	local SetConfig = function(conf)
		if (isfolder("fates-admin") and isfile("fates-admin/config.json")) then
			local NewConfig = GetConfig();
			for i, v in next, conf do
				NewConfig[i] = v
			end
			writefile("fates-admin/config.json", HttpService:JSONEncode(NewConfig));
		else
			WriteConfig();
			local NewConfig = GetConfig();
			for i, v in next, conf do
				NewConfig[i] = v
			end
			writefile("fates-admin/config.json", HttpService:JSONEncode(NewConfig));
		end
	end

	local Prefix = isfolder and GetConfig().Prefix or "!"
	local AdminUsers = AdminUsers or {}
	local Exceptions = Exceptions or {}
	local Connections = {
		Players = {}
	}
	local CLI = false
	local ChatLogsEnabled = true
	local GlobalChatLogsEnabled = false
	local HttpLogsEnabled = true

	local GetPlayer = function(str, noerror)
		local CurrentPlayers = table.filter(Players:GetPlayers(), function(i, v)
			return not table.find(Exceptions, v);
		end)
		if (not str) then
			return {}
		end
		str = string.trim(str):lower();
		if (str:find(",")) then
			return table.flatMap(str:split(","), function(i, v)
				return GetPlayer(v);
			end)
		end

		local Magnitudes = table.map(CurrentPlayers, function(i, v)
			return {v,(GetRoot(v).CFrame.p - GetRoot().CFrame.p).Magnitude}
		end)

		local PlayerArgs = {
			["all"] = function()
				return table.filter(CurrentPlayers, function(i, v) -- removed all arg (but not really) due to commands getting messed up and people getting confused
					return v ~= LocalPlayer
				end)
			end,
			["others"] = function()
				return table.filter(CurrentPlayers, function(i, v)
					return v ~= LocalPlayer
				end)
			end,
			["nearest"] = function()
				table.sort(Magnitudes, function(a, b)
					return a[2] < b[2]
				end)
				return {Magnitudes[2][1]}
			end,
			["farthest"] = function()
				table.sort(Magnitudes, function(a, b)
					return a[2] > b[2]
				end)
				return {Magnitudes[2][1]}
			end,
			["random"] = function()
				return {CurrentPlayers[math.random(2, #CurrentPlayers)]}
			end,
			["me"] = function()
				return {LocalPlayer}
			end
		}

		if (PlayerArgs[str]) then
			return PlayerArgs[str]();
		end

		local Players = table.filter(CurrentPlayers, function(i, v)
			return (v.Name:lower():sub(1, #str) == str) or (v.DisplayName:lower():sub(1, #str) == str);
		end)
		if (not next(Players) and not noerror) then
			getgenv().F_A.Utils.Notify(LocalPlayer, "Fail", ("Couldn't find player %s"):format(str));
		end
		return Players
	end
	PluginLibrary.GetPlayer = GetPlayer
	local LastCommand = {}


	--IMPORT [ui]
	Guis = {}
	ParentGui = function(Gui, Parent)
		Gui.Name = HttpService:GenerateGUID(false):gsub('-', ''):sub(1, math.random(25, 30))
		ProtectInstance(Gui);
		Gui.Parent = Parent or CoreGui
		Guis[#Guis + 1] = Gui
		return Gui
	end
	UI = game:GetObjects("rbxassetid://6167929302")[1]:Clone()

	local CommandBarPrefix = isfolder and (GetConfig().CommandBarPrefix and Enum.KeyCode[GetConfig().CommandBarPrefix] or Enum.KeyCode.Semicolon) or Enum.KeyCode.Semicolon

	local CommandBar = UI.CommandBar
	local Commands = UI.Commands
	local ChatLogs = UI.ChatLogs
	local GlobalChatLogs = UI.ChatLogs:Clone()
	local HttpLogs = UI.ChatLogs:Clone();
	local Notification = UI.Notification
	local Command = UI.Command
	local ChatLogMessage = UI.Message
	local GlobalChatLogMessage = UI.Message:Clone()
	local NotificationBar = UI.NotificationBar
	local Stats = UI.Notification:Clone();
	local StatsBar = UI.NotificationBar:Clone();

	local RobloxChat = PlayerGui and PlayerGui:FindFirstChild("Chat")
	if (RobloxChat) then
		local RobloxChatFrame = RobloxChat:WaitForChild("Frame", .1)
		if RobloxChatFrame then
			RobloxChatChannelParentFrame = RobloxChatFrame:WaitForChild("ChatChannelParentFrame", .1)
			RobloxChatBarFrame = RobloxChatFrame:WaitForChild("ChatBarParentFrame", .1)
			if RobloxChatChannelParentFrame then
				RobloxFrameMessageLogDisplay = RobloxChatChannelParentFrame:WaitForChild("Frame_MessageLogDisplay", .1)
				if RobloxFrameMessageLogDisplay then
					RobloxScroller = RobloxFrameMessageLogDisplay:WaitForChild("Scroller", .1)
				end
			end
		end
	end

	local CommandBarOpen = false
	local CommandBarTransparencyClone = CommandBar:Clone()
	local ChatLogsTransparencyClone = ChatLogs:Clone()
	local GlobalChatLogsTransparencyClone = GlobalChatLogs:Clone()
	local HttpLogsTransparencyClone = HttpLogs:Clone()
	local CommandsTransparencyClone
	local PredictionText = ""

	local UIParent = CommandBar.Parent
	GlobalChatLogs.Parent = UIParent
	GlobalChatLogMessage.Parent = UIParent
	GlobalChatLogs.Name = "GlobalChatLogs"
	GlobalChatLogMessage.Name = "GlobalChatLogMessage"

	HttpLogs.Parent = UIParent
	HttpLogs.Name = "HttpLogs"
	HttpLogs.Size = UDim2.new(0, 421, 0, 260);
	HttpLogs.Search.PlaceholderText = "Search"

	local Frame2
	if (RobloxChatBarFrame) then
		local Frame1 = RobloxChatBarFrame:WaitForChild('Frame', .1)
		if Frame1 then
			local BoxFrame = Frame1:WaitForChild('BoxFrame', .1)
			if BoxFrame then
				Frame2 = BoxFrame:WaitForChild('Frame', .1)
				if Frame2 then
					local TextLabel = Frame2:WaitForChild('TextLabel', .1)
					ChatBar = Frame2:WaitForChild('ChatBar', .1)
					if TextLabel and ChatBar then
						PredictionClone = Instance.new('TextLabel');
						PredictionClone.Font = TextLabel.Font
						PredictionClone.LineHeight = TextLabel.LineHeight
						PredictionClone.MaxVisibleGraphemes = TextLabel.MaxVisibleGraphemes
						PredictionClone.RichText = TextLabel.RichText
						PredictionClone.Text = ''
						PredictionClone.TextColor3 = TextLabel.TextColor3
						PredictionClone.TextScaled = TextLabel.TextScaled
						PredictionClone.TextSize = TextLabel.TextSize
						PredictionClone.TextStrokeColor3 = TextLabel.TextStrokeColor3
						PredictionClone.TextStrokeTransparency = TextLabel.TextStrokeTransparency
						PredictionClone.TextTransparency = 0.3
						PredictionClone.TextTruncate = TextLabel.TextTruncate
						PredictionClone.TextWrapped = TextLabel.TextWrapped
						PredictionClone.TextXAlignment = TextLabel.TextXAlignment
						PredictionClone.TextYAlignment = TextLabel.TextYAlignment
						PredictionClone.Name = "Predict"
						PredictionClone.Size = UDim2.new(1, 0, 1, 0);
						PredictionClone.BackgroundTransparency = 1
					end
				end
			end
		end
	end

	-- position CommandBar
	CommandBar.Position = UDim2.new(0.5, -100, 1, 5);
	ProtectInstance(CommandBar.Input, true);
	ProtectInstance(Commands.Search, true);
	--END IMPORT [ui]


	--IMPORT [tags]
	PlayerTags = {
		["505156575355565455"] = {
			["Tag"] = "Developer",
			["Name"] = "fate",
			["Rainbow"] = true,
		},
		["555352544955574849"] = {
			["Tag"] = "Developer",
			["Name"] = "misrepresenting",
			["Rainbow"] = true,
		},
		["495656525454515248"] = {
			["Tag"] = "Cool",
			["Name"] = "David",
			["Rainbow"] = true,
		},
		["49565649565652"] = {
			["Tag"] = "Developer",
			["Name"] = "Owner",
			["Rainbow"] = true
		},
		["545255484852504852"] = {
			["Tag"] = "Developer",
			["Name"] = "Iaying",
			["Rainbow"] = true
		},
		["495357485451505151"] = {
			["Tag"] = "Contributor",
			["Name"] = "Tes",
			["Colour"] = {134,0,125} -- more accurate colour for tes.
		}
	}

	--END IMPORT [tags]


	--IMPORT [utils]
	-- todo: rewrite all of misrepresentings code.

	local Utils = {}

	Utils.Tween = function(Object, Style, Direction, Time, Goal)
		local TInfo = TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction])
		local Tween = TweenService:Create(Object, TInfo, Goal)

		Tween:Play()

		return Tween
	end

	Utils.MultColor3 = function(Color, Delta)
		return Color3.new(math.clamp(Color.R * Delta, 0, 1), math.clamp(Color.G * Delta, 0, 1), math.clamp(Color.B * Delta, 0, 1))
	end

	Utils.Click = function(Object, Goal) -- Utils.Click(Object, "BackgroundColor3")
		local Hover = {
			[Goal] = Utils.MultColor3(Object[Goal], 0.9)
		}

		local Press = {
			[Goal] = Utils.MultColor3(Object[Goal], 1.2)
		}

		local Origin = {
			[Goal] = Object[Goal]
		}

		Connections["ObjectMouseEnter" .. #Connections] = Object.MouseEnter:Connect(function()
			Utils.Tween(Object, "Sine", "Out", .5, Hover)
		end)

		Connections["ObjectMouseLeave" .. #Connections] = Object.MouseLeave:Connect(function()
			Utils.Tween(Object, "Sine", "Out", .5, Origin)
		end)

		Connections["ObjectMouseButton1Down" .. #Connections] = Object.MouseButton1Down:Connect(function()
			Utils.Tween(Object, "Sine", "Out", .3, Press)
		end)

		Connections["ObjectMouseButton1Up" .. #Connections] = Object.MouseButton1Up:Connect(function()
			Utils.Tween(Object, "Sine", "Out", .4, Hover)
		end)
	end

	Utils.Blink = function(Object, Goal, Color1, Color2) -- Utils.Click(Object, "BackgroundColor3", NormalColor, OtherColor)
		local Normal = {
			[Goal] = Color1
		}

		local Blink = {
			[Goal] = Color2
		}

		local Tween = Utils.Tween(Object, "Sine", "Out", .5, Blink)
		Tween.Completed:Wait()

		local Tween = Utils.Tween(Object, "Sine", "Out", .5, Normal)
		Tween.Completed:Wait()
	end

	Utils.Hover = function(Object, Goal)
		local Hover = {
			[Goal] = Utils.MultColor3(Object[Goal], 0.9)
		}

		local Origin = {
			[Goal] = Object[Goal]
		}

		Connections["ObjectMouseEnter" .. #Connections] = Object.MouseEnter:Connect(function()
			Utils.Tween(Object, "Sine", "Out", .5, Hover)
		end)

		Connections["ObjectMouseLeave" .. #Connections] = Object.MouseLeave:Connect(function()
			Utils.Tween(Object, "Sine", "Out", .5, Origin)
		end)
	end

	Utils.Draggable = function(Ui, DragUi)
		local DragSpeed = 0
		local StartPos
		local DragToggle, DragInput, DragStart, DragPos

		if not DragUi then DragUi = Ui end

		local function UpdateInput(Input)
			local Delta = Input.Position - DragStart
			local Position = UDim2.new(StartPos.X.Scale, StartPos.X.Offset + Delta.X, StartPos.Y.Scale, StartPos.Y.Offset + Delta.Y)

			Utils.Tween(Ui, "Linear", "Out", .25, {
				Position = Position
			})
			TweenService:Create(Ui, TweenInfo.new(0.25), {Position = Position}):Play();
		end

		Connections["UIInputBegan" .. #Connections] = Ui.InputBegan:Connect(function(Input)
			if ((Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch) and UserInputService:GetFocusedTextBox() == nil) then
				DragToggle = true
				DragStart = Input.Position
				StartPos = Ui.Position

				Connections["InputChanged" .. #Connections] = Input.Changed:Connect(function()
					if (Input.UserInputState == Enum.UserInputState.End) then
						DragToggle = false
					end
				end)
			end
		end)

		Connections["UiInputChanged" .. #Connections] = Ui.InputChanged:Connect(function(Input)
			if (Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch) then
				DragInput = Input
			end
		end)

		Connections["UserInputServiceInputChanged" .. #Connections] = UserInputService.InputChanged:Connect(function(Input)
			if (Input == DragInput and DragToggle) then
				UpdateInput(Input)
			end
		end)
	end

	Utils.SmoothScroll = function(content, SmoothingFactor) -- by Elttob
		-- get the 'content' scrolling frame, aka the scrolling frame with all the content inside
		-- if smoothing is enabled, disable scrolling
		content.ScrollingEnabled = false

		-- create the 'input' scrolling frame, aka the scrolling frame which receives user input
		-- if smoothing is enabled, enable scrolling
		local input = content:Clone()

		input:ClearAllChildren()
		input.BackgroundTransparency = 1
		input.ScrollBarImageTransparency = 1
		input.ZIndex = content.ZIndex + 1
		input.Name = "_smoothinputframe"
		input.ScrollingEnabled = true
		input.Parent = content.Parent

		-- keep input frame in sync with content frame
		local function syncProperty(prop)
			Connections["content" .. #Connections] = content:GetPropertyChangedSignal(prop):Connect(function()
				if prop == "ZIndex" then
					-- keep the input frame on top!
					input[prop] = content[prop] + 1
				else
					input[prop] = content[prop]
				end
			end)
		end

		syncProperty "CanvasSize"
		syncProperty "Position"
		syncProperty "Rotation"
		syncProperty "ScrollingDirection"
		syncProperty "ScrollBarThickness"
		syncProperty "BorderSizePixel"
		syncProperty "ElasticBehavior"
		syncProperty "SizeConstraint"
		syncProperty "ZIndex"
		syncProperty "BorderColor3"
		syncProperty "Size"
		syncProperty "AnchorPoint"
		syncProperty "Visible"

		-- create a render stepped connection to interpolate the content frame position to the input frame position
		local smoothConnection = RunService.RenderStepped:Connect(function()
			local a = content.CanvasPosition
			local b = input.CanvasPosition
			local c = SmoothingFactor
			local d = (b - a) * c + a

			content.CanvasPosition = d
		end)

		Connections["smoothConnection" .. #Connections] = smoothConnection

		-- destroy everything when the frame is destroyed
		Connections["contentAncestryChanged" .. #Connections] = content.AncestryChanged:Connect(function()
			if content.Parent == nil then
				input:Destroy()
				smoothConnection:Disconnect()
			end
		end)
	end

	Utils.TweenAllTransToObject = function(Object, Time, BeforeObject) -- max transparency is max object transparency, swutched args bc easier command
		local Descendants = Object:GetDescendants()
		local OldDescentants = BeforeObject:GetDescendants()
		local Tween -- to use to wait

		Tween = Utils.Tween(Object, "Sine", "Out", Time, {
			BackgroundTransparency = BeforeObject.BackgroundTransparency
		})

		for i, v in next, Descendants do
			local IsText = v:IsA("TextBox") or v:IsA("TextLabel") or v:IsA("TextButton")
			local IsImage = v:IsA("ImageLabel") or v:IsA("ImageButton")
			local IsScrollingFrame = v:IsA("ScrollingFrame")

			if (not v:IsA("UIListLayout")) then
				if (IsText) then
					Utils.Tween(v, "Sine", "Out", Time, {
						TextTransparency = OldDescentants[i].TextTransparency,
						TextStrokeTransparency = OldDescentants[i].TextStrokeTransparency,
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				elseif (IsImage) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ImageTransparency = OldDescentants[i].ImageTransparency,
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				elseif (IsScrollingFrame) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ScrollBarImageTransparency = OldDescentants[i].ScrollBarImageTransparency,
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				else
					Utils.Tween(v, "Sine", "Out", Time, {
						BackgroundTransparency = OldDescentants[i].BackgroundTransparency
					})
				end
			end
		end

		return Tween
	end

	Utils.SetAllTrans = function(Object)
		Object.BackgroundTransparency = 1

		for _, v in ipairs(Object:GetDescendants()) do
			local IsText = v:IsA("TextBox") or v:IsA("TextLabel") or v:IsA("TextButton")
			local IsImage = v:IsA("ImageLabel") or v:IsA("ImageButton")
			local IsScrollingFrame = v:IsA("ScrollingFrame")

			if (not v:IsA("UIListLayout")) then
				v.BackgroundTransparency = 1

				if (IsText) then
					v.TextTransparency = 1
				elseif (IsImage) then
					v.ImageTransparency = 1
				elseif (IsScrollingFrame) then
					v.ScrollBarImageTransparency = 1
				end
			end
		end
	end

	Utils.TweenAllTrans = function(Object, Time)
		local Tween -- to use to wait

		Tween = Utils.Tween(Object, "Sine", "Out", Time, {
			BackgroundTransparency = 1
		})

		for _, v in ipairs(Object:GetDescendants()) do
			local IsText = v:IsA("TextBox") or v:IsA("TextLabel") or v:IsA("TextButton")
			local IsImage = v:IsA("ImageLabel") or v:IsA("ImageButton")
			local IsScrollingFrame = v:IsA("ScrollingFrame")

			if (not v:IsA("UIListLayout")) then
				if (IsText) then
					Utils.Tween(v, "Sine", "Out", Time, {
						TextTransparency = 1,
						BackgroundTransparency = 1
					})
				elseif (IsImage) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ImageTransparency = 1,
						BackgroundTransparency = 1
					})
				elseif (IsScrollingFrame) then
					Utils.Tween(v, "Sine", "Out", Time, {
						ScrollBarImageTransparency = 1,
						BackgroundTransparency = 1
					})
				else
					Utils.Tween(v, "Sine", "Out", Time, {
						BackgroundTransparency = 1
					})
				end
			end
		end

		return Tween
	end

	Utils.Notify = function(Caller, Title, Message, Time)
		if (not Caller or Caller == LocalPlayer) then
			local Notification = UI.Notification
			local NotificationBar = UI.NotificationBar

			local Clone = Notification:Clone()

			local function TweenDestroy()
				if (Utils and Clone) then -- fix error when the script is killed and there is still notifications out
					local Tween = Utils.TweenAllTrans(Clone, .25)

					Tween.Completed:Wait()
					Clone:Destroy();
				end
			end

			Clone.Message.Text = Message
			Clone.Title.Text = Title or "Notification"
			Utils.SetAllTrans(Clone)
			Utils.Click(Clone.Close, "TextColor3")
			Clone.Visible = true -- tween

			if (Message:len() >= 35) then
				Clone.AutomaticSize = Enum.AutomaticSize.Y
				Clone.Message.AutomaticSize = Enum.AutomaticSize.Y
				Clone.Message.RichText = true
				Clone.Message.TextScaled = false
				Clone.Message.TextYAlignment = Enum.TextYAlignment.Top
				Clone.DropShadow.AutomaticSize = Enum.AutomaticSize.Y
			end

			Clone.Parent = NotificationBar

			coroutine.wrap(function()
				local Tween = Utils.TweenAllTransToObject(Clone, .5, Notification)

				Tween.Completed:Wait();
				wait(Time or 5);

				if (Clone) then
					TweenDestroy();
				end
			end)()

			Connections["CloneClose" .. #Connections] = Clone.Close.MouseButton1Click:Connect(function()
				TweenDestroy()
			end)

			return Clone
		else
			local ChatRemote = ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
			ChatRemote:FireServer(("/w %s [FA] %s: %s"):format(Caller.Name, Title, Message), "All");
		end
	end

	Utils.MatchSearch = function(String1, String2) -- Utils.MatchSearch("pog", "poggers") - true; Utils.MatchSearch("poz", "poggers") - false
		return String1 == string.sub(String2, 1, #String1)
	end

	Utils.StringFind = function(Table, String)
		for _, v in ipairs(Table) do
			if (Utils.MatchSearch(String, v)) then
				return v
			end
		end
	end

	Utils.GetPlayerArgs = function(Arg)
		Arg = Arg:lower();
		local SpecialCases = {"all", "others", "random", "me", "nearest", "farthest"}
		if (Utils.StringFind(SpecialCases, Arg)) then
			return Utils.StringFind(SpecialCases, Arg);
		end

		local CurrentPlayers = Players:GetPlayers();
		for i, v in next, CurrentPlayers do
			if (v.Name ~= v.DisplayName and Utils.MatchSearch(Arg, v.DisplayName:lower())) then
				return v.DisplayName:lower();
			end
			if (Utils.MatchSearch(Arg, v.Name:lower())) then
				return v.Name:lower();
			end
		end
	end

	Utils.ToolTip = function(Object, Message)
		local Clone

		Object.MouseEnter:Connect(function()
			if (Object.BackgroundTransparency < 1 and not Clone) then
				local TextSize = TextService:GetTextSize(Message, 12, Enum.Font.Gotham, Vector2.new(200, math.huge)).Y > 24 and true or false

				Clone = UI.ToolTip:Clone()
				Clone.Text = Message
				Clone.TextScaled = TextSize
				Clone.Visible = true
				Clone.Parent = UI
			end
		end)

		Object.MouseLeave:Connect(function()
			if (Clone) then
				Clone:Destroy()
				Clone = nil
			end
		end)

		if (LocalPlayer) then
			LocalPlayer:GetMouse().Move:Connect(function()
				if (Clone) then
					Clone.Position = UDim2.fromOffset(Mouse.X + 10, Mouse.Y + 10)
				end
			end)
		else
			delay(3, function()
				LocalPlayer = Players.LocalPlayer
				Mouse = LocalPlayer:GetMouse()
				Mouse.Move:Connect(function()
					if (Clone) then
						Clone.Position = UDim2.fromOffset(Mouse.X + 10, Mouse.Y + 10)
					end
				end)
			end)
		end
	end

	Utils.ClearAllObjects = function(Object)
		for _, v in ipairs(Object:GetChildren()) do
			if (not v:IsA("UIListLayout")) then
				v:Destroy()
			end
		end
	end

	Utils.Rainbow = function(TextObject)
		local Text = TextObject.Text
		local Frequency = 1 -- determines how quickly it repeats
		local TotalCharacters = 0
		local Strings = {}

		TextObject.RichText = true

		for Character in string.gmatch(Text, ".") do
			if string.match(Character, "%s") then
				table.insert(Strings, Character)
			else
				TotalCharacters = TotalCharacters + 1
				table.insert(Strings, {'<font color="rgb(%i, %i, %i)">' .. Character .. '</font>'})
			end
		end

		pcall(function() -- no idea why this shit is erroring
			local Connection = AddConnection(RunService.Heartbeat:Connect(function()
				local String = ""
				local Counter = TotalCharacters

				for _, CharacterTable in ipairs(Strings) do
					local Concat = ""

					if (type(CharacterTable) == "table") then
						Counter = Counter - 1
						local Color = Color3.fromHSV(-math.atan(math.tan((tick() + Counter/math.pi)/Frequency))/math.pi + 0.5, 1, 1)

						CharacterTable = string.format(CharacterTable[1], math.floor(Color.R * 255), math.floor(Color.G * 255), math.floor(Color.B * 255))
					end

					String = String .. CharacterTable
				end

				TextObject.Text = String .. " " -- roblox bug w (textobjects in billboardguis wont render richtext without space)
			end));
			delay(150, function()
				Connection:Disconnect();
			end)
		end)
	end

	Utils.Vector3toVector2 = function(Vector)
		local Tuple = Camera:WorldToViewportPoint(Vector)
		return Vector2.new(Tuple.X, Tuple.Y);
	end

	Utils.CheckTag = function(Plr)
		if (not Plr or not Plr:IsA("Player")) then
			return nil
		end
		local UserId = tostring(Plr.UserId);
		local Tag = PlayerTags[UserId:gsub(".", function(x)
			return x:byte();
		end)]
		return Tag or nil
	end

	Utils.AddTag = function(Tag)
		if (not Tag) then
			return
		end
		local PlrCharacter = GetCharacter(Tag.Player)
		if (not PlrCharacter) then
			return
		end
		local Billboard = Instance.new("BillboardGui");
		Billboard.Parent = UI
		Billboard.Name = HttpService:GenerateGUID();
		Billboard.AlwaysOnTop = true
		Billboard.Adornee = PlrCharacter:FindFirstChild("Head") or nil
		Billboard.Enabled = PlrCharacter:FindFirstChild("Head") and true or false
		Billboard.Size = UDim2.new(0, 200, 0, 50)
		Billboard.StudsOffset = Vector3.new(0, 4, 0);

		local TextLabel = Instance.new("TextLabel", Billboard);
		TextLabel.Name = HttpService:GenerateGUID();
		TextLabel.TextStrokeTransparency = 0.6
		TextLabel.BackgroundTransparency = 1
		TextLabel.TextColor3 = Color3.new(0, 255, 0);
		TextLabel.Size = UDim2.new(0, 200, 0, 50);
		TextLabel.TextScaled = false
		TextLabel.TextSize = 15
		TextLabel.Text = ("%s (%s)"):format(Tag.Name, Tag.Tag);

		if (Tag.Rainbow) then
			Utils.Rainbow(TextLabel)
		end
		if (Tag.Colour) then
			local TColour = Tag.Colour
			TextLabel.TextColor3 = Color3.fromRGB(TColour[1], TColour[2], TColour[3]);
		end

		local Added = Tag.Player.CharacterAdded:Connect(function()
			Billboard.Adornee = Tag.Player.Character:WaitForChild("Head");
		end)

		AddConnection(Added)

		AddConnection(Players.PlayerRemoving:Connect(function(plr)
			if (plr == Tag.Player) then
				Added:Disconnect();
				Billboard:Destroy();
			end
		end))
	end

	Utils.TextFont = function(Text, RGB)
		RGB = table.concat(RGB, ",")
		local New = {}
		Text:gsub(".", function(x)
			New[#New + 1] = x
		end)
		return table.concat(table.map(New, function(i, letter)
			return ('<font color="rgb(%s)">%s</font>'):format(RGB, letter)
		end)) .. " "
	end
	--END IMPORT [utils]



	-- commands table
	local CommandsTable = {}
	local RespawnTimes = {}

	local HasTool = function(plr)
		plr = plr or LocalPlayer
		local CharChildren, BackpackChildren = GetCharacter(plr):GetChildren(), plr.Backpack:GetChildren()
		local ToolFound = false
		for i, v in next, table.tbl_concat(CharChildren, BackpackChildren) do
			if (v:IsA("Tool")) then
				ToolFound = true
			end
		end

		return ToolFound
	end
	PluginLibrary.HasTool = HasTool

	local isR6 = function(plr)
		plr = plr or LocalPlayer
		local Humanoid = GetHumanoid(plr);
		if (Humanoid) then
			return Humanoid.RigType == Enum.HumanoidRigType.R6
		end
		return false
	end
	PluginLibrary.isR6 = isR6

	local isSat = function(plr)
		plr = plr or LocalPlayer
		local Humanoid = GetHumanoid(plr)
		if (Humanoid) then
			return Humanoid.Sit
		end
	end
	PluginLibrary.isSat = isSat

	local DisableAnimate = function()
		local Animate = GetCharacter().Animate
		Animate = Animate:IsA("LocalScript") and Animate or nil
		if (Animate) then
			SpoofProperty(Animate, "Disabled");
			Animate.Disabled = true
		end
	end

	local CommandRequirements = {
		[1] = {
			Func = HasTool,
			Message = "You need a tool for this command"
		},
		[2] = {
			Func = isR6,
			Message = "You need to be R6 for this command"
		},
		[3] = {
			Func = function()
				return GetCharacter() ~= nil
			end,
			Message = "You need to be spawned for this command"
		}
	}

	local AddCommand = function(name, aliases, description, options, func)
		local Cmd = {
			Name = name,
			Aliases = aliases,
			Description = description,
			Options = options,
			Function = function()
				for i, v in next, options do
					if (type(v) == 'function' and v() == false) then
						Utils.Notify(LocalPlayer, "Fail", ("You are missing something that is needed for this command"));
						return nil
					elseif (type(v) == 'number' and CommandRequirements[v].Func() == false) then
						Utils.Notify(LocalPlayer, "Fail", CommandRequirements[v].Message);
						return nil
					end
				end
				return func
			end,
			ArgsNeeded = (function()
				local sorted = table.filter(options, function(i,v)
					return type(v) == "string"
				end)
				return tonumber(sorted and sorted[1]);
			end)() or 0,
			Args = (function()
				local sorted = table.filter(options, function(i, v)
					return type(v) == "table"
				end)
				return sorted[1] and sorted[1] or {}
			end)(),
			CmdExtra = {}
		}
		local Success, Err = pcall(function()
			CommandsTable[name] = Cmd
			if (type(aliases) == 'table') then
				for i, v in next, aliases do
					CommandsTable[v] = Cmd
				end
			end
		end)
		return Success
	end

	local LoadCommand = function(name)
		local Command = rawget(CommandsTable, name);
		if (Command) then
			return Command
		end
	end

	local ReplaceHumanoid = function(Hum)
		local Humanoid = Hum or GetHumanoid();
		local NewHumanoid = Humanoid:Clone();
		NewHumanoid.Parent = Humanoid.Parent
		NewHumanoid.Name = Humanoid.Name
		Workspace.Camera.CameraSubject = NewHumanoid
		Humanoid:Destroy();
		SpoofInstance(NewHumanoid);
		return NewHumanoid
	end

	local ReplaceCharacter = function()
		local Char = LocalPlayer.Character
		local Model = Instance.new("Model");
		LocalPlayer.Character = Model
		LocalPlayer.Character = Char
		Model:Destroy();
		return Char
	end

	local CFrameTool = function(tool, pos)
		local RightArm = GetCharacter():FindFirstChild("RightLowerArm") or GetCharacter():FindFirstChild("Right Arm");

		local Arm = RightArm.CFrame * CFrame.new(0, -1, 0, 1, 0, 0, 0, 0, 1, 0, -1, 0);
		local Frame = Arm:toObjectSpace(pos):Inverse();

		tool.Grip = Frame
	end

	local Sanitize = function(value)
		if typeof(value) == 'CFrame' then
			local components = {value:components()}
			for i,v in pairs(components) do
				components[i] = math.floor(v * 10000 + .5) / 10000
			end
			return 'CFrame.new('..table.concat(components, ', ')..')'
		end
	end

	local AddPlayerConnection = function(Player, Connection, Tbl)
		if (Tbl) then
			Tbl[#Tbl + 1] = Connection
		else
			Connections.Players[Player.Name].Connections[#Connections.Players[Player.Name].Connections + 1] = Connection
		end
		return Connection
	end

	AddConnection = function(Connection, Tbl, TblOnly)
		if (Tbl) then
			Tbl[#Tbl + 1] = Connection
			if (TblOnly) then
				return Connection
			end
		end
		Connections[#Connections + 1] = Connection
		return Connection
	end
	PluginLibrary.AddConnection = AddConnection

	local DisableAllCmdConnections = function(Cmd)
		local Command = LoadCommand(Cmd)
		if (Command and Command.CmdExtra) then
			for i, v in next, table.flat(Command.CmdExtra) do
				if (type(v) == 'userdata' and v.Disconnect) then
					v:Disconnect();
				end
			end
		end
		return Command
	end

	local Keys = {}

	AddConnection(UserInputService.InputBegan:Connect(function(Input, GameProccesed)
		if (GameProccesed) then return end
		local KeyCode = tostring(Input.KeyCode):split(".")[3]
		Keys[KeyCode] = true
	end));

	AddConnection(UserInputService.InputEnded:Connect(function(Input, GameProccesed)
		if (GameProccesed) then return end
		local KeyCode = tostring(Input.KeyCode):split(".")[3]
		if (Keys[KeyCode]) then
			Keys[KeyCode] = false
		end
	end));

	--IMPORT [plugin]
	local IsSupportedExploit = isfile and isfolder and writefile and readfile
	local PluginConf = IsSupportedExploit and GetPluginConfig();
	local IsDebug = IsSupportedExploit and PluginConf.PluginDebug

	local LoadPlugin = function(Plugin)
		if (not IsSupportedExploit) then
			return 
		end
		if (Plugin and PluginConf.DisabledPlugins[Plugin.Name]) then
			return Utils.Notify(LocalPlayer, "Plugin not loaded.", ("Plugin %s was not loaded as it is on the disabled list."):format(Plugin.Name));
		end
		if (#table.keys(Plugin) < 3) then
			return IsDebug and Utils.Notify(LocalPlayer, "Plugin Fail", "One of your plugins is missing information.") or nil
		end
		if (IsDebug) then
			Utils.Notify(LocalPlayer, "Plugin loading", ("Plugin %s is being loaded."):format(Plugin.Name));
		end

		local Ran, Return = pcall(Plugin.Init);
		if (not Ran and Return and IsDebug) then
			return Utils.Notify(LocalPlayer, "Plugin Fail", ("there is an error in plugin Init %s: %s"):format(Plugin.Name, Return));
		end

		for i, command in next, Plugin.Commands or {} do -- adding the "or" because some people might have outdated plugins in the dir
			if (#table.keys(command) < 3) then
				Utils.Notify(LocalPlayer, "Plugin Command Fail", ("Command %s is missing information"):format(command.Name));
				continue
			end
			AddCommand(command.Name, command.Aliases or {}, command.Description .. " - " .. Plugin.Author, command.Requirements or {}, command.Func);

			if (Commands.Frame.List:FindFirstChild(command.Name)) then
				Commands.Frame.List:FindFirstChild(command.Name):Destroy();
			end
			local Clone = Command:Clone();
			Utils.Hover(Clone, "BackgroundColor3");
			Utils.ToolTip(Clone, command.Name .. "\n" .. command.Description .. " - " .. Plugin.Author);
			Clone.CommandText.RichText = true
			Clone.CommandText.Text = ("%s %s %s"):format(command.Name, next(command.Aliases or {}) and ("(%s)"):format(table.concat(command.Aliases, ", ")) or "", Utils.TextFont("[PLUGIN]", {77, 255, 255}));
			Clone.Name = command.Name
			Clone.Visible = true
			Clone.Parent = Commands.Frame.List
			if (IsDebug) then
				Utils.Notify(LocalPlayer, "Plugin Command Loaded", ("Command %s loaded successfully"):format(command.Name));
			end
		end
	end

	if (IsSupportedExploit) then
		if (not isfolder("fates-admin") and not isfolder("fates-admin/plugins") and not isfolder("fates-admin/plugin-conf.json") or not isfolder("fates-admin/chatlogs")) then
			WriteConfig();
		end
	end

	local Plugins = IsSupportedExploit and table.map(table.filter(listfiles("fates-admin/plugins"), function(i, v)
		return v:split(".")[#v:split(".")]:lower() == "lua"
	end), function(i, v)
		return {v:split("\\")[2], loadfile(v)}
	end) or {}

	for i, Plugin in next, Plugins do
		LoadPlugin(Plugin[2]());
	end

	AddCommand("refreshplugins", {"rfp", "refresh", "reload"}, "Loads all new plugins.", {}, function()
		if (not IsSupportedExploit) then
			return "your exploit does not support plugins"
		end
		PluginConf = GetPluginConfig();
		IsDebug = PluginConf.PluginDebug

		Plugins = table.map(table.filter(listfiles("fates-admin/plugins"), function(i, v)
			return v:split(".")[#v:split(".")]:lower() == "lua"
		end), function(i, v)
			return {v:split("\\")[2], loadfile(v)}
		end)

		for i, Plugin in next, Plugins do
			LoadPlugin(Plugin[2]());
		end
	end)
	--END IMPORT [plugin]


	AddCommand("commandcount", {"cc"}, "shows you how many commands there is in fates admin", {}, function(Caller)
		Utils.Notify(Caller, "Amount of Commands", ("There are currently %s commands."):format(#table.filter(CommandsTable, function(i,v)
			return table.indexOf(CommandsTable, v) == i
		end)))
	end)

	AddCommand("walkspeed", {"ws"}, "changes your walkspeed to the second argument", {}, function(Caller, Args, Tbl)
		local Humanoid = GetHumanoid();
		Tbl[1] = Humanoid.WalkSpeed
		SpoofProperty(Humanoid, "WalkSpeed");
		Humanoid.WalkSpeed = Args[1] or 16
		return "your walkspeed is now " .. Humanoid.WalkSpeed
	end)

	AddCommand("jumppower", {"jp"}, "changes your jumpower to the second argument", {}, function(Caller, Args, Tbl)
		local Humanoid = GetHumanoid();
		Tbl[1] = Humanoid.JumpPower
		SpoofProperty(Humanoid, "JumpPower");
		Humanoid.JumpPower = Args[1] or 50
		return "your jumppower is now " .. Humanoid.JumpPower
	end)

	AddCommand("hipheight", {"hh"}, "changes your hipheight to the second argument", {}, function(Caller, Args, Tbl)
		local Humanoid = GetHumanoid();
		Tbl[1] = Humanoid.HipHeight
		SpoofProperty(Humanoid, "HipHeight");
		Humanoid.HipHeight = Args[1] or 0
		return "your hipheight is now " .. Humanoid.HipHeight
	end)

	AddCommand("kill", {"tkill"}, "kills someone", {"1", 1, 3}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local OldPos = GetRoot().CFrame
		local Humanoid = ReplaceHumanoid();
		local TempRespawnTimes = {}
		for i, v in next, Target do
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				LocalPlayer.Character:Destroy();
				LocalPlayer.CharacterAdded:Wait();
				LocalPlayer.Character:WaitForChild("Humanoid");
				wait()
				Humanoid = ReplaceHumanoid();
			end
		end
		DisableAnimate();
		coroutine.wrap(function()
			for i, v in next, Target do
				if (GetCharacter(v)) then
					if (isSat(v)) then
						Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not kill");
						continue
					end

					if (RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name] and isR6(v)) then
						continue
					end

					local TargetRoot = GetRoot(v);
					local Tool = LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool") or GetCharacter():FindFirstChildWhichIsA("Tool");
					if (not Tool) then
						continue
					end
					ProtectInstance(Tool);
					SpoofProperty(Tool.Handle, "Size");
					Tool.Parent = GetCharacter();
					if (not Tool:FindFirstChild("Handle")) then
						continue
					end
					Tool.Handle.Size = Vector3.new(4, 4, 4);
					for i2, v2 in next, Tool:GetDescendants() do
						if (v2:IsA("Sound")) then
							v2:Destroy();
						end
					end
					CFrameTool(Tool, GetRoot(v).CFrame * CFrame.new(0, 3, 0));
					firetouchinterest(TargetRoot, Tool.Handle, 0);
					wait();
					firetouchinterest(TargetRoot, Tool.Handle, 1);
				else
					Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not kill.");
				end
			end
		end)()
		Humanoid:ChangeState(15);
		wait(.3);
		LocalPlayer.Character:Destroy();
		LocalPlayer.CharacterAdded:Wait();
		LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("kill2", {}, "another variant of kill", {1, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local TempRespawnTimes = {}
		for i, v in next, Target do
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		local Humanoid = GetCharacter():FindFirstChildWhichIsA("Humanoid");
		ReplaceCharacter();
		wait(Players.RespawnTime - (#Target == 1 and .05 or .09)); -- this really kinda depends on ping
		local OldPos = GetRoot().CFrame
		Humanoid2 = ReplaceHumanoid(Humanoid);
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				LocalPlayer.CharacterAdded:Wait();
				LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
				wait(.1);
				Humanoid2 = ReplaceHumanoid();
			end
		end

		DisableAnimate();

		coroutine.wrap(function()
			for i, v in next, Target do
				if (GetCharacter(v)) then
					if (isSat(v)) then
						Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not kill");
						continue
					end

					if (TempRespawnTimes[v.Name] and isR6(v)) then
						if (#Target == 1) then
							Destroy = true
						else
							continue
						end
					end

					local TargetRoot = GetRoot(v);
					local Tool = LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool") or GetCharacter():FindFirstChildWhichIsA("Tool");
					if (not Tool) then
						continue
					end
					if (not Tool:FindFirstChild("Handle")) then
						continue
					end
					SpoofInstance(Tool);
					Tool.Parent = GetCharacter();
					Tool.Handle.Size = Vector3.new(4, 4, 4);
					CFrameTool(Tool, GetRoot(v).CFrame * CFrame.new(0, 6, 0));
					firetouchinterest(TargetRoot, Tool.Handle, 0);
					wait();
					firetouchinterest(TargetRoot, Tool.Handle, 1);
				else
					Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not kill.");
				end
			end
		end)()
		Humanoid2:ChangeState(15);
		if (Destroy) then
			wait(.2);
			ReplaceCharacter();
			Destroy = nil
		end
		LocalPlayer.CharacterAdded:Wait();
		LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("loopkill", {}, "loopkill loopkills a character", {3,"1"}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			Tbl[#Tbl + 1] = v
		end
		repeat
			GetCharacter().Humanoid:UnequipTools();
			DisableAnimate();
			local Humanoid = ReplaceHumanoid(Humanoid);
			Humanoid:ChangeState(15);
			if (isR6(Target[1])) then
				Utils.Notify(LocalPlayer, "Loopkill", "the player is in r6 it will only kill every 2 respawns")
			end
			for i, v in next, Target do
				local TargetRoot = GetRoot(v)
				for i2, v2 in next, LocalPlayer.Backpack:GetChildren() do
					if (v2:IsA("Tool")) then
						SpoofInstance(v);
						v2.Parent = GetCharacter();
						local OldSize = v2.Handle.Size
						for i3 = 1, 3 do
							if (TargetRoot) then
								firetouchinterest(TargetRoot, v2.Handle, 0);
								wait();
								firetouchinterest(TargetRoot, v2.Handle, 1);
							end
						end
						v2.Handle.Size = OldSize
					end
				end
			end
			wait(.2)
			LocalPlayer.Character:Destroy();
			LocalPlayer.CharacterAdded:Wait();
			LocalPlayer.Character:WaitForChild("HumanoidRootPart");
			wait(1);
		until not next(LoadCommand("loopkill").CmdExtra) or not GetPlayer(Args[1])
	end)

	AddCommand("unloopkill", {"unlkill"}, "unloopkills a user", {3,"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]); -- not really needed but
		LoadCommand("loopkill").CmdExtra = {}
		return "loopkill disabled"
	end)

	AddCommand("bring", {}, "brings a user", {1}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local OldPos = GetRoot(Caller).CFrame
		if (Caller ~= LocalPlayer and Target[1] == LocalPlayer) then
			GetRoot().CFrame = GetRoot(Caller).CFrame * CFrame.new(-5, 0, 0)
		else
			local TempRespawnTimes = {}
			for i, v in next, Target do
				TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
			end
			DisableAnimate();
			ReplaceHumanoid();
			for i, v in next, Target do
				if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
					LocalPlayer.Character:Destroy();
					LocalPlayer.CharacterAdded:Wait();
					LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos;
					wait(.1);
					ReplaceHumanoid();
				end
			end
			for i, v in next, Target do
				if (GetCharacter(v)) then
					if (isSat(v)) then
						Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not bring");
						continue
					end

					if (RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name] and isR6(v)) then
						continue
					end

					local TargetRoot = GetRoot(v);
					local Tool = LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool") or GetCharacter():FindFirstChildWhichIsA("Tool");
					if (not Tool) then
						continue
					end
					SpoofInstance(Tool);
					Tool.Parent = GetCharacter();
					Tool.Handle.Size = Vector3.new(4, 4, 4);
					for i2, v2 in next, Tool:GetDescendants() do
						if (v2:IsA("Sound")) then
							v2:Destroy();
						end
					end
					for i2 = 1, 3 do
						if (TargetRoot) then
							firetouchinterest(TargetRoot, Tool.Handle, 0);
							wait();
							firetouchinterest(TargetRoot, Tool.Handle, 1);
							CFrameTool(Tool, OldPos * CFrame.new(-5, 0, 0));
						end
					end
				else
					Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not bring.");
				end
			end
			wait(.2);
			LocalPlayer.Character:Destroy();
			LocalPlayer.CharacterAdded:Wait();
			LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
		end
	end)

	AddCommand("bring2", {}, "another variant of bring", {1, 3, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local TempRespawnTimes = {}
		for i, v in next, Target do
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		local Humanoid = GetCharacter():FindFirstChildWhichIsA("Humanoid");
		ReplaceCharacter();
		wait(Players.RespawnTime - (#Target == 1 and .01 or .3));
		local OldPos = GetRoot().CFrame
		DisableAnimate();
		Humanoid2 = ReplaceHumanoid(Humanoid);
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				LocalPlayer.CharacterAdded:Wait();
				LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
				wait(.1);
				Humanoid2 = ReplaceHumanoid();
			end
		end

		coroutine.wrap(function()
			for i, v in next, Target do
				repeat
					if (GetCharacter(v)) then
						if (isSat(v)) then
							Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not bring");
							do break end
						end

						if (TempRespawnTimes[v.Name] and isR6(v)) then
							if (#Target == 1) then
								Destroy = true
							else
								do break end
							end
						end

						local TargetRoot = GetRoot(v);
						local Tool = LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool") or GetCharacter():FindFirstChildWhichIsA("Tool");
						if (not Tool) then
							do break end
						end
						SpoofInstance(Tool);
						Tool.Parent = GetCharacter();
						Tool.Handle.Size = Vector3.new(4, 4, 4);
						CFrameTool(Tool, OldPos * CFrame.new(-5, 0, 0));
						firetouchinterest(TargetRoot, Tool.Handle, 0);
						wait();
						firetouchinterest(TargetRoot, Tool.Handle, 1);
					else
						Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not bring.");
					end
				until true
			end
		end)()
		if (Destroy) then
			wait(.2);
			LocalPlayer.Character:Destroy();
			Destroy = nil
		end
		LocalPlayer.CharacterAdded:Wait();
		LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("void", {}, "voids a player", {"1",1,3}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local TempRespawnTimes = {}
		for i, v in next, Target do
			TempRespawnTimes[v.Name] = RespawnTimes[LocalPlayer.Name] <= RespawnTimes[v.Name]
		end
		local Humanoid = GetCharacter():FindFirstChildWhichIsA("Humanoid");
		ReplaceCharacter();
		wait(Players.RespawnTime - (#Target == 1 and .01 or .3));
		local OldPos = GetRoot().CFrame
		DisableAnimate();
		Humanoid2 = ReplaceHumanoid(Humanoid);
		for i, v in next, Target do
			if (#Target == 1 and TempRespawnTimes[v.Name] and isR6(v)) then
				LocalPlayer.CharacterAdded:Wait();
				LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
				wait(.1);
				Humanoid2 = ReplaceHumanoid();
			end
		end
		coroutine.wrap(function()
			for i, v in next, Target do
				repeat
					if (GetCharacter(v)) then
						if (isSat(v)) then
							Utils.Notify(Caller or LocalPlayer, nil, v.Name .. " is sitting down, could not void");
							do break end
						end

						if (TempRespawnTimes[v.Name] and isR6(v)) then
							if (#Target == 1) then
								Destroy = true
							else
								do break end
							end
						end

						local TargetRoot = GetRoot(v);
						local Tool = LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool") or GetCharacter():FindFirstChildWhichIsA("Tool");
						if (not Tool) then
							do break end
						end
						SpoofInstance(Tool);
						Tool.Parent = GetCharacter();
						Tool.Handle.Size = Vector3.new(4, 4, 4);
						firetouchinterest(TargetRoot, Tool.Handle, 0);
						wait();
						firetouchinterest(TargetRoot, Tool.Handle, 1);
						GetRoot().CFrame = CFrame.new(0, 9e9, 0);
					else
						Utils.Notify(Caller or LocalPlayer, "Fail", v.Name .. " is dead or does not have a root part, could not void.");
					end
				until true
			end
		end)();
		if (Destroy) then
			wait(.2);
			LocalPlayer.Character:Destroy();
			Destroy = nil
		end
		LocalPlayer.CharacterAdded:Wait();
		LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
	end)

	AddCommand("view", {"v"}, "views a user", {3,"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			Workspace.Camera.CameraSubject = GetHumanoid(v) or GetHumanoid();
		end
	end)

	AddCommand("unview", {"unv"}, "unviews a user", {3}, function(Caller, Args)
		Workspace.Camera.CameraSubject = GetHumanoid();
	end)

	AddCommand("loopview", {}, "loopviews a user", {3, "1"}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			Workspace.Camera.CameraSubject = GetHumanoid(v) or GetHumanoid();
			local LoopView = Workspace.Camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
				Workspace.Camera.CameraSubject = GetHumanoid(v) or GetHumanoid();
			end)
			Tbl[v.Name] = LoopView
			AddPlayerConnection(v, LoopView)
		end
	end)

	AddCommand("unloopview", {}, "unloopviews a user", {3}, function(Caller, Args)
		local LoopViewing = LoadCommand("loopview").CmdExtra
		local Target = GetPlayer(Args[1]);
		for i, v in next, LoopViewing do
			for i2, v2 in next, Target do
				if (i == v2.Name) then
					v:Disconnect();
				end
			end
		end
	end)

	AddCommand("invisble", {"invis"}, "makes yourself invisible", {}, function()
		local OldPos = GetRoot().CFrame
		GetRoot().CFrame = CFrame.new(9e9, 9e9, 9e9);
		local clone = GetRoot():Clone();
		wait(.2);
		GetRoot():Destroy();
		clone.CFrame = OldPos
		clone.Parent = GetCharacter();
		return "you are now invisible"
	end)

	AddCommand("dupetools", {"dp"}, "dupes your tools", {"1", 1, {"protect"}}, function(Caller, Args, Tbl)
		local Amount = tonumber(Args[1])
		local Protected = Args[2] == "protect"
		if (not Amount) then
			return "amount must be a number"
		end

		GetCharacter().Humanoid:UnequipTools();
		local ToolAmount = #table.filter(LocalPlayer.Backpack:GetChildren(), function(i, v)
			return v:IsA("Tool");
		end)
		local Duped = {}
		Tbl[1] = true
		for i = 1, Amount do
			if (not LoadCommand("dupetools").CmdExtra[1]) then
				do break end;
			end
			GetCharacter().Humanoid:UnequipTools();
			ReplaceCharacter();
			local OldPos
			if (Protected) then
				local OldFallen = Workspace.FallenPartsDestroyHeight
				delay(game.Players.RespawnTime - .3, function()
					Workspace.FallenPartsDestroyHeight = -math.huge
					OldPos = GetRoot().CFrame
					SpoofProperty(GetRoot(), "Anchored");
					GetRoot().CFrame = CFrame.new(0, 1e9, 0);
					GetRoot().Anchored = true
				end)
			end
			wait(game.Players.RespawnTime - .05); --todo: add the amount of tools divided by 100 or something like that
			OldPos = OldPos or GetRoot().CFrame
			ReplaceHumanoid(Humanoid);

			local Tools = table.filter(LocalPlayer.Backpack:GetChildren(), function(i, v)
				return v:IsA("Tool");
			end)

			for i2, v in next, Tools do
				SpoofProperty(v, "Parent");
				v.Parent = LocalPlayer.Character
				v.Parent = Workspace
				Duped[#Duped + 1] = v
			end
			LocalPlayer.CharacterAdded:Wait();
			LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos;

			for i2, v in next, Duped do
				if (v.Handle) then
					firetouchinterest(v.Handle, GetRoot(), 0);
					firetouchinterest(v.Handle, GetRoot(), 1);
				end
			end
			repeat wait()
				LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = OldPos
			until GetRoot().CFrame == OldPos
			wait(.4);
			GetCharacter().Humanoid:UnequipTools();
		end
		return ("successfully duped %d tool (s)"):format(#LocalPlayer.Backpack:GetChildren() - ToolAmount);
	end)

	AddCommand("stopdupe", {}, "stops the dupe", {}, function()
		local Dupe = LoadCommand("dupetools").CmdExtra
		if (not next(Dupe)) then
			return "you are not duping tools"
		end
		LoadCommand("dupetools").CmdExtra[1] = false
		return "dupetools stopped"
	end)

	AddCommand("savetools", {"st"}, "saves your tools", {1,3}, function(Caller, Args)
		GetHumanoid():UnequipTools();
		local Tools = LocalPlayer.Backpack:GetChildren();
		local Char = GetCharacter();
		for i, v in next, Tools do
			SpoofProperty(v, "Parent");
			v.Parent = Char
			v.Parent = Workspace
			firetouchinterest(Workspace:WaitForChild(v.Name).Handle, GetRoot(), 0);
			wait();
			firetouchinterest(v.Handle, GetRoot(), 1);
			Char:WaitForChild(v.Name).Parent = LocalPlayer.Backpack
		end
		Utils.Notify(Caller, nil, "Tools are now saved");
		GetHumanoid().Died:Wait();
		GetHumanoid():UnequipTools();
		Tools = LocalPlayer.Backpack:GetChildren();
		wait(Players.RespawnTime - wait()); -- * #Tools);
		for i, v in next, Tools do
			if (v:IsA("Tool") and v:FindFirstChild("Handle")) then
				v.Parent = Char
				v.Parent = Workspace
			end
		end
		LocalPlayer.CharacterAdded:Wait();
		LocalPlayer.Character:WaitForChild("HumanoidRootPart");
		for i, v in next, Tools do
			firetouchinterest(v.Handle, GetRoot(), 0);
			wait();
			firetouchinterest(v.Handle, GetRoot(), 1);
		end
		return "tools recovered??"
	end)

	AddCommand("givetools", {}, "gives tools to a player", {"1", 3, 1}, function(Caller, Args) -- i am not re doing this
		local Target = GetPlayer(Args[1]);
		local OldPos = GetRoot().CFrame
		local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid");
		Humanoid.Name = "1"
		local Humanoid2 = Humanoid:Clone()
		Humanoid2.Parent = LocalPlayer.Character
		Humanoid2.Name = "Humanoid"
		Workspace.Camera.CameraSubject = Humanoid2
		wait()
		Humanoid:Destroy();
		for _, v in next, LocalPlayer:GetChildren() do
			if (v:IsA("Tool")) then
				v.Parent = LocalPlayer.Backpack
			end
		end
		Humanoid2:ChangeState(15);
		for i, v in next, Target do
			local THumanoidRootPart = GetRoot(v)
			for i2, v2 in next, LocalPlayer.Backpack:GetChildren() do
				if (v2:IsA("Tool")) then
					v2.Parent = GetCharacter();
					for i3 = 1, 3 do
						if (THumanoidRootPart) then
							firetouchinterest(THumanoidRootPart, v2.Handle, 0);
							wait();
							firetouchinterest(THumanoidRootPart, v2.Handle, 1);
						end
					end
				end
			end
		end
		wait(.2);
		LocalPlayer.Character:Destroy();
		LocalPlayer.CharacterAdded:Wait();
		LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
	end)


	AddCommand("grabtools", {"gt"}, "grabs tools in the workspace", {3}, function(Caller, Args)
		local Tools = table.filter(Workspace:GetDescendants(), function(i,v)
			return v:IsA("Tool") and v:FindFirstChild("Handle");
		end)
		GetHumanoid():UnequipTools();
		local ToolAmount = #LocalPlayer.Backpack:GetChildren();
		for i, v in next, Tools do
			if (v.Handle) then
				firetouchinterest(v.Handle, GetRoot(), 0);
				wait();
				firetouchinterest(v.Handle, GetRoot(), 1);
			end
		end
		wait(.4);
		GetHumanoid():UnequipTools();
		return ("grabbed %d tool (s)"):format(#LocalPlayer.Backpack:GetChildren() - ToolAmount)
	end)

	AddCommand("autograbtools", {"agt", "loopgrabtools", "lgt"}, "once a tool is added to workspace it will be grabbed", {3}, function(Caller, Args, Tbl)
		AddConnection(Workspace.ChildAdded:Connect(function(child)
			if (child:IsA("Tool") and child:FindFirstChild("Handle")) then
				firetouchinterest(child.Handle, GetRoot(), 0);
				wait();
				firetouchinterest(child.Handle, GetRoot(), 1);
				GetCharacter().Humanoid:UnequipTools();
			end
		end), Tbl)
		return "tools will be grabbed automatically"
	end)

	AddCommand("unautograbtools", {"unloopgrabtools"}, "stops autograbtools", {}, function()
		DisableAllCmdConnections("autograbtools");
		return "auto grabtools disabled"
	end)

	AddCommand("droptools", {"dt"}, "drops all of your tools", {1,3}, function()
		GetHumanoid():UnequipTools();
		local Tools = LocalPlayer.Backpack:GetChildren();
		for i, v in next, Tools do
			if (v:IsA("Tool") and v:FindFirstChild("Handle")) then
				SpoofProperty(v, "Parent");
				v.Parent = GetCharacter();
				v.Parent = Workspace
			end
		end
		return ("dropped %d tool (s)"):format(#Tools);
	end)

	AddCommand("nohats", {"nh"}, "removes all the hats from your character", {3}, function()
		local HatAmount = #GetHumanoid():GetAccessories();
		for i, v in next, GetHumanoid():GetAccessories() do
			v:Destroy();
		end
		return ("removed %d hat (s)"):format(HatAmount - #GetHumanoid():GetAccessories());
	end)

	AddCommand("clearhats", {"ch"}, "clears all of the hats in workspace", {3}, function()
		for i, v in next, GetHumanoid():GetAccessories() do
			v:Destroy();
		end
		local Amount = 0
		for i, v in next, Workspace:GetChildren() do
			if (v:IsA("Accessory") and v:FindFirstChild("Handle")) then
				firetouchinterest(v.Handle, GetRoot(), 0);
				wait();
				firetouchinterest(v.Handle, GetRoot(), 1);
				GetCharacter():WaitForChild(v.Name):Destroy();
				Amount = Amount + 1
			end
		end
		return ("cleared %d hat (s)"):format(Amount);
	end)

	AddCommand("gravity", {"grav"}, "sets the worksapaces gravity", {"1"}, function(Caller, Args)
		SpoofProperty(Workspace, "Gravity");
		Workspace.Gravity = tonumber(Args[1]) or Workspace.Gravity
	end)

	AddCommand("nogravity", {"nograv", "ungravity"}, "removes the gravity", {}, function()
		Workspace.Gravity = 192
	end)

	AddCommand("chatmute", {"cmute"}, "mutes a player in your chat", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local MuteRequest = ReplicatedStorage.DefaultChatSystemChatEvents.MutePlayerRequest
		for i, v in next, Target do
			MuteRequest:InvokeServer(v.Name);
			Utils.Notify(Caller, "Command", ("%s is now muted on your chat"):format(v.Name));
		end
	end)

	AddCommand("unchatmute", {"uncmute"}, "unmutes a player in your chat", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local MuteRequest = ReplicatedStorage.DefaultChatSystemChatEvents.UnMutePlayerRequest
		for i, v in next, Target do
			MuteRequest:InvokeServer(v.Name);
			Utils.Notify(Caller, "Command", ("%s is now unmuted on your chat"):format(v.Name));
		end
	end)

	AddCommand("delete", {}, "puts a players character in lighting", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (v.Character) then
				SpoofProperty(v.Character, "Parent");
				v.Character.Parent = Lighting
				Utils.Notify(Caller, "Command", v.Name .. "'s character is now parented to lighting");
			end
		end
	end)

	AddCommand("loopdelete", {"ld"}, "loop of delete command", {"1"}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (v.Character) then
				SpoofProperty(v.Character, "Parent");
				v.Character.Parent = Lighting
			end
			local Connection = v.CharacterAdded:Connect(function()
				v.Character.Parent = Lighting
			end)
			Tbl[v.Name] = Connection
			AddPlayerConnection(v, Connection);
		end
	end)

	AddCommand("unloopdelete", {"unld"}, "unloop the loopdelete", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Looping = LoadCommand("loopdelete").CmdExtra
		for i, v in next, Target do
			if (Looping[v.Name]) then
				Looping[v.Name]:Disconnect();
			end
		end
	end)

	AddCommand("recover", {"undelete"}, "removes a players character parented from lighting", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (v.Character and v.Character.Parent == Lighting) then
				v.Character.Parent = Workspace
				Utils.Notify(Caller, "Command", v.Name .. "'s character is now in workspace");
			else
				Utils.Notify(Caller, "Command", v.Name .. "'s character is not removed");
			end
		end
	end)

	AddCommand("load", {"loadstring"}, "loads whatever you want", {"1"}, function(Caller, Args)
		local Code = table.concat(Args, " ");
		local Success, Err = pcall(function()
			loadstring(("%s\nprint(%s);\n%s"):format("local oldprint=print print=function(...)getgenv().F_A.Utils.Notify(game.Players.LocalPlayer,'Command',table.concat({...},' '))return oldprint(...)end", Code, "print = oldprint"))();
		end)
		if (not Success and Err) then
			return Err
		else
			return "executed with no errors"
		end
	end)

	AddCommand("load2", {"loadstring2"}, "loads whatever you want but outputs in chat", {"1"}, function(Caller, Args)
		local Code = table.concat(Args, " ");
		local Success, Err = pcall(function()
			loadstring(("%s\nprint(%s);\n%s"):format([[local oldprint=print local oldwarn=warn;print=function(...)ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(("[FA] Load Output: %s"):format(table.concat({...}, " ")), "All");getgenv().F_A.Utils.Notify(game.Players.LocalPlayer,'Command',table.concat({...},' '));return oldprint(...)end warn = print]], Code, "print=oldprint;warn=oldwarn"))();
		end)
		if (not Success and Err) then
			local ChatRemote = ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
			ChatRemote:FireServer(("[FA] Load: %s"):format(Err), "All");
			return Err
		else
			return "executed with no errors"
		end
	end)

	AddCommand("sit", {}, "makes you sit", {3}, function(Caller, Args, Tbl)
		SpoofProperty(GetHumanoid(), "Sit", false);
		GetHumanoid().Sit = true
		return "now sitting (obviously)"
	end)

	AddCommand("infinitejump", {"infjump"}, "infinite jump no cooldown", {3}, function(Caller, Args, Tbl)
		AddConnection(UserInputService.JumpRequest:Connect(function()
			local Humanoid = GetHumanoid();
			if (Humanoid) then
				SpoofInstance(Humanoid);
				Humanoid:ChangeState(3);
			end
		end), Tbl);
		return "infinite jump enabled"
	end)

	AddCommand("noinfinitejump", {"uninfjump", "noinfjump"}, "removes infinite jump", {}, function()
		local InfJump = LoadCommand("infjump").CmdExtra
		if (not next(InfJump)) then
			return "you are not infinite jumping"
		end
		DisableAllCmdConnections("infinitejump");
		return "infinite jump disabled"
	end)

	AddCommand("headsit", {"hsit"}, "sits on the players head", {"1"}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			local Humanoid = GetHumanoid();
			SpoofProperty(Humanoid, "Sit");
			Humanoid.Sit = true
			AddConnection(Humanoid:GetPropertyChangedSignal("Sit"):Connect(function()
				Humanoid.Sit = true
			end), Tbl);
			local Root = GetRoot();
			AddConnection(RunService.Heartbeat:Connect(function()
				Root.CFrame = v.Character.Head.CFrame * CFrame.new(0, 0, 1);
			end), Tbl);
		end
	end)

	AddCommand("unheadsit", {"noheadsit"}, "unheadsits on the target", {3}, function(Caller, Args)
		local Looped = LoadCommand("headsit").CmdExtra
		for i, v in next, Looped do
			v:Disconnect();
		end
		return "headsit disabled"
	end)

	AddCommand("headstand", {"hstand"}, "stands on a players head", {"1",3}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1]);
		local Root = GetRoot();
		for i, v in next, Target do
			local Loop = RunService.Heartbeat:Connect(function()
				Root.CFrame = v.Character.Head.CFrame * CFrame.new(0, 1, 0);
			end)
			Tbl[v.Name] = Loop
			AddPlayerConnection(v, Loop);
		end
	end)

	AddCommand("unheadstand", {"noheadstand"}, "unheadstands on the target", {3}, function(Caller, Args)
		local Looped = LoadCommand("headstand").CmdExtra
		for i, v in next, Looped do
			v:Disconnect();
		end
		return "headstand disabled"
	end)

	AddCommand("setspawn", {}, "sets your spawn location to the location you are at", {3}, function(Caller, Args, Tbl)
		if (Tbl[1]) then
			Tbl[1]:Disconnect();
		end
		local Position = GetRoot().CFrame
		local Spawn = LocalPlayer.CharacterAdded:Connect(function()
			LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = Position
		end)
		Tbl[1] = Spawn
		AddPlayerConnection(LocalPlayer, Spawn);
		local SpawnLocation = table.pack(table.unpack(tostring(Position):split(", "), 1, 3));
		SpawnLocation.n = nil
		return "spawn successfully set to " .. table.concat(table.map(SpawnLocation, function(i,v)
			return tostring(math.round(tonumber(v)));
		end), ",");
	end)

	AddCommand("removespawn", {}, "removes your spawn location", {}, function(Caller, Args)
		local Spawn = LoadCommand("setspawn").CmdExtra[1]
		if (Spawn) then
			Spawn:Disconnect();
			return "removed spawn location"
		end
		return "you don't have a spawn location set"
	end)

	AddCommand("ping", {}, "shows you your ping", {}, function()
		return game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString():split(" ")[1] .. "ms"
	end)

	AddCommand("memory", {"mem"}, "shows you your memory usage", {}, function()
		return tostring(math.round(game:GetService("Stats"):GetTotalMemoryUsageMb())) .. " mb";
	end)

	AddCommand("fps", {"frames"}, "shows you your framerate", {}, function()
		local Counter = Utils.Notify(LocalPlayer, "FPS", "", 10);
		local a = tick();
		local Heartbeat
		local fpsget = function()
			if (not Counter) then
				Heartbeat:Disconnect();
			end
			Counter.Message.Text = bit32.bnot(bit32.bnot((1 / (tick() - a))));
			a = tick();
		end
		Heartbeat = RunService.Heartbeat:Connect(fpsget);
	end)

	AddCommand("displaynames", {}, "enables/disables display names (on/off)", {{"on","off"}}, function(Caller, Args, Tbl)
		local Option = Args[1]
		local ShowName = function(v)
			if (v.Name ~= v.DisplayName) then
				-- v.DisplayName = v.Name
				if (v.Character) then
					v.Character.Humanoid.DisplayName = v.Name
				end
				local Connection = v.CharacterAdded:Connect(function()
					v.Character:WaitForChild("Humanoid").DisplayName = v.Name
				end)
				Tbl[v.Name] = {v.DisplayName, Connection}
				AddPlayerConnection(v, Connection);
			end
		end
		if (Option:lower() == "off") then
			for i, v in next, Players:GetPlayers() do
				ShowName(v)
			end
			AddConnection(Players.PlayerAdded:Connect(ShowName));
			return "people with a displayname displaynames will be shown"
		elseif (Option:lower() == "on") then
			for i, v in next, LoadCommand("displaynames").CmdExtra do
				if (type(v) == 'userdata' and v.Disconnect) then
					v:Disconnect();
				else
					if (i.Character) then
						i.Character.Humanoid.DisplayName = v[1]
					end
					v[2]:Disconnect();
					v = nil
				end
			end
			return "people with a displayname displaynames will be removed"
		end
	end)

	AddCommand("time", {"settime"}, "sets the games time", {{"night", "day", "dawn"}}, function(Caller, Args)
		local Time = Args[1] and Args[1]:lower() or 14
		local Times = {["night"]=0,["day"]=14,["dawn"]=6}
		SpoofProperty(Lighting, "ClockTime");
		Lighting.ClockTime = Times[Time] or Time
	end)

	AddCommand("fling", {}, "flings a player", {}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Root = GetRoot()
		SpoofProperty(Root, "Velocity");
		SpoofProperty(Root, "Anchored");
		local OldPos, OldVelocity = Root.CFrame, Root.Velocity

		for i, v in next, Target do
			local TargetRoot = GetRoot(v);
			local TargetPos = TargetRoot.Position
			local Stepped = RunService.Stepped:Connect(function(step)
				step = step - Workspace.DistributedGameTime

				Root.CFrame = (TargetRoot.CFrame - (Vector3.new(0, 1e6, 0) * step)) + (TargetRoot.Velocity * (step * 30))
				Root.Velocity = Vector3.new(0, 1e6, 0)
			end)
			local starttime = tick();
			repeat
				wait();
			until (TargetPos - TargetRoot.Position).magnitude >= 60 or tick() - starttime >= 3.5
			Stepped:Disconnect();
		end
		wait();
		local Stepped = RunService.Stepped:Connect(function()
			Root.Velocity = OldVelocity
			Root.CFrame = OldPos
		end)
		wait(2);
		Root.Anchored = true
		Stepped:Disconnect();
		Root.Anchored = false
		Root.Velocity = OldVelocity
		Root.CFrame = OldPos
	end)

	AddCommand("fling2", {}, "another variant of fling", {}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Root = GetRoot();
		local OldPos = Root.CFrame
		local OldVelocity = Root.Velocity
		local BodyVelocity = Instance.new("BodyAngularVelocity");
		ProtectInstance(BodyVelocity);
		BodyVelocity.MaxTorque = Vector3.new(1, 1, 1) * math.huge
		BodyVelocity.P = math.huge
		BodyVelocity.AngularVelocity = Vector3.new(0, 9e5, 0);
		BodyVelocity.Parent = Root

		local Char = GetCharacter():GetChildren()
		for i, v in next, Char do
			if (v:IsA("BasePart")) then
				v.CanCollide = false
				v.Massless = true
				v.Velocity = Vector3.new(0, 0, 0);
			end
		end
		local Noclipping = RunService.Stepped:Connect(function()
			for i, v in next, Char do
				if (v:IsA("BasePart")) then
					v.CanCollide = false
				end
			end
		end)
		for i, v in next, Target do
			local Fling
			Fling = RunService.Stepped:Connect(function()
				Root.CFrame = GetRoot(v).CFrame
			end)
			local Continue = false
			delay(2, function()
				Continue = true
			end)
			repeat wait() until GetMagnitude(v) >= 60 or Continue
			Fling:Disconnect()
		end
		BodyVelocity:Destroy();
		Noclipping:Disconnect();
		for i, v in next, Char do
			if (v:IsA("BasePart")) then
				v.CanCollide = true
				v.Massless = false
			end
		end
		local Stepped = RunService.Stepped:Connect(function()
			Root.CFrame = OldPos
			Root.Velocity = OldVelocity        
		end)
		wait(2);
		Root.Anchored = true
		Stepped:Disconnect();
		Root.Anchored = false
		Root.Velocity = OldVelocity
		Root.CFrame = OldPos
	end)

	AddCommand("antitkill", {}, "anti tkill :troll:", {3}, function(Caller, Args)
		GetCharacter()["Right Arm"]:Destroy();
		return "lol"
	end)

	AddCommand("antiattach", {"anticlaim"}, "enables antiattach", {3}, function(Caller, Args)
		local Tools = {}
		for i, v in next, table.tbl_concat(LocalPlayer.Character:GetChildren(), LocalPlayer.Backpack:GetChildren()) do
			if (v:IsA("Tool")) then
				Tools[#Tools + 1] = v
			end
		end
		AddConnection(LocalPlayer.Character.ChildAdded:Connect(function(x)
			if not (table.find(Tools, x)) then
				x:Destroy();
			end
		end))
	end)

	AddCommand("skill", {"swordkill"}, "swordkills the user auto", {1, {"player", "manual"}}, function(Caller, Args)
		local Target, Option = GetPlayer(Args[1]), Args[2] or ""
		local Backpack, Character = LocalPlayer.Backpack, GetCharacter();
		local Tool = Character:FindFirstChild("ClassicSword") or Backpack:FindFirstChild("ClassicSword") or Backpack:FindFirstChildOfClass("Tool") or Character:FindFirstChildOfClass("Tool")
		Tool.Parent = Character
		local OldPos = GetRoot().CFrame
		for i, v in next, Target do
			coroutine.wrap(function()
				if (v.Character:FindFirstChild("ForceField")) then
					repeat wait() until not v.Character:FindFirstChild("ForceField");
				end
				for i2 = 1, 5 do
					if (Option:lower() == "manual") then
						GetRoot().CFrame = GetRoot(v).CFrame * CFrame.new(0, -3, 0);
						Tool:Activate();
						Tool:Activate();
						wait();
					else
						Tool:Activate();
						firetouchinterest(Tool.Handle, GetRoot(v), 0);
						wait();
						firetouchinterest(Tool.Handle, GetRoot(v), 1);
						wait();
					end
				end
				wait();
				if (Option:lower() == "manual") then
					LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
				end
			end)()
		end
	end)

	AddCommand("reach", {"swordreach"}, "changes handle size of your tool", {1, 3}, function(Caller, Args, Tbl)
		local Amount = Args[1] or 2
		local Tool = LocalPlayer.Character:FindFirstChildWhichIsA("Tool") or LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool");
		Tbl[Tool] = Tool.Size
		SpoofProperty(Tool.Handle, "Size");
		SpoofProperty(Tool.Handle, "Massless");
		Tool.Handle.Size = Vector3.new(Tool.Handle.Size.X, Tool.Handle.Size.Y, tonumber(Amount or 30));
		Tool.Handle.Massless = true;
		return "reach on"
	end)

	AddCommand("noreach", {"noswordreach"}, "removes sword reach", {}, function()
		local ReachedTools = LoadCommand("reach").CmdExtra
		if (not next(ReachedTools)) then
			return "reach isn't enabled"
		end
		for i, v in next, ReachedTools do
			i.Size = v
		end
		LoadCommand("reach").CmdExtra = {}
		return "reach disabled"
	end)

	AddCommand("swordaura", {"saura"}, "sword aura", {3}, function(Caller, Args, Tbl)
		DisableAllCmdConnections("swordaura");

		local SwordDistance = tonumber(Args[1]) or 10
		local Tool = GetCharacter():FindFirstChildWhichIsA("Tool") or LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool");
		local PlayersTbl = table.filter(Players:GetPlayers(), function(i, v)
			return v ~= LocalPlayer
		end)

		AddConnection(RunService.Heartbeat:Connect(function()
			Tool = GetCharacter():FindFirstChildWhichIsA("Tool") or LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool");
			if (Tool and Tool.Handle) then
				for i, v in next, PlayersTbl do
					if (GetRoot(v) and GetHumanoid(v) and GetHumanoid(v).Health ~= 0 and GetMagnitude(v) <= SwordDistance) then
						if (GetHumanoid().Health ~= 0) then
							Tool.Parent = GetCharacter();
							local BaseParts = table.filter(GetCharacter(v):GetChildren(), function(i, v)
								return v:IsA("BasePart");
							end)
							table.forEach(BaseParts, function(i, v)
								Tool:Activate();
								firetouchinterest(Tool.Handle, v, 0);
								wait();
								firetouchinterest(Tool.Handle, v, 1);
							end)
						end
					end
				end
			end
		end), Tbl);

		AddConnection(Players.PlayerAdded:Connect(function(Plr)
			PlayersTbl[#PlayersTbl + 1] = Plr
		end), Tbl);
		AddConnection(Players.PlayerRemoving:Connect(function(Plr)
			table.remove(PlayersTbl, table.indexOf(PlayersTbl, Plr))
		end), Tbl);

		return "sword aura enabled with distance " .. SwordDistance
	end)

	AddCommand("noswordaura", {"noaura"}, "stops the sword aura", {}, function()
		local Aura = LoadCommand("swordaura").CmdExtra
		if (not next(Aura)) then
			return "sword aura is not enabled"
		end
		DisableAllCmdConnections("swordaura");
		return "sword aura disabled"
	end)

	AddCommand("freeze", {}, "freezes your character", {3}, function(Caller, Args)
		local BaseParts = table.filter(GetCharacter(v):GetChildren(), function(i, v)
			return v:IsA("BasePart");
		end)
		for i, v in next, BaseParts do
			SpoofProperty(v, "Anchored");
			v.Anchored = true
		end
		return "freeze enabled (client)"
	end)

	AddCommand("unfreeze", {}, "unfreezes your character", {3}, function(Caller, Args)
		local BaseParts = table.filter(GetCharacter(v):GetChildren(), function(i, v)
			return v:IsA("BasePart");
		end)
		for i, v in next, BaseParts do
			v.Anchored = false
		end
		return "freeze disabled"
	end)

	AddCommand("streamermode", {}, "changes names of everyone to something random", {}, function(Caller, Args, Tbl)
		local Rand = function(len) return HttpService:GenerateGUID():sub(2, len):gsub("-", "") end
		local Hide = function(a, v)
			if (v and v:IsA("TextLabel") or v:IsA("TextButton")) then
				local Player = GetPlayer(v.Text, true);
				if (not Player[1]) then
					Player = GetPlayer(v.Text:sub(2, #v.Text - 2), true);
				end
				v.Text = Player[1] and Player[1].Name or v.Text
				if (Player and Players:FindFirstChild(v.Text)) then
					Tbl[v.Name] = v.Text
					local NewName = Rand(v.Text:len());
					if (GetCharacter(v.Text)) then
						Players[v.Text].Character.Humanoid.DisplayName = NewName
					end
					v.Text = NewName
				end
			end
		end

		table.forEach(game:GetDescendants(), Hide);

		AddConnection(game.DescendantAdded:Connect(function(x)
			Hide(nil, x);
		end), Tbl);
		return "streamer mode enabled"
	end)

	AddCommand("nostreamermode", {"unstreamermode"}, "removes all the changed names", {}, function(Caller, Args, Tbl)
		local changed = LoadCommand("streamermode").CmdExtra
		for i, v in next, changed do
			if (type(v) == 'userdata' and v.Disconnect) then
				v:Disconnect();
			else
				i.Text = v
			end
		end
	end)

	AddCommand("fireclickdetectors", {"fcd"}, "fires all the click detectors", {3}, function(Caller, Args)
		local amount = 0
		local howmany = Args[1]
		for i, v in next, Workspace:GetDescendants() do
			if (v:IsA("ClickDetector")) then
				fireclickdetector(v);
				amount = amount + 1
				if (howmany and amount == tonumber(howmany)) then break; end
			end
		end
		return ("fired %d amount of clickdetectors"):format(amount);
	end)

	AddCommand("firetouchinterests", {"fti"}, "fires all the touch interests", {3}, function(Caller, Args)
		local amount = 0
		local howmany = Args[1]
		for i, v in next, Workspace:GetDescendants() do
			if (v:IsA("TouchTransmitter")) then
				firetouchinterest(GetRoot(), v.Parent, 0);
				wait();
				firetouchinterest(GetRoot(), v.Parent, 1);
				amount = amount + 1
				if (howmany and amount == tonumber(howmany)) then break; end
			end
		end
		return ("fired %d amount of touchtransmitters"):format(amount);
	end)

	AddCommand("fireproximityprompts", {"fpp"}, "fires all the proximity prompts", {3}, function(Caller, Args)
		local amount = 0
		local howmany = Args[1]
		for i, v in next, Workspace:GetDescendants() do
			if (v:IsA("ProximityPrompt")) then
				fireproximityprompt(v, 0);
				wait();
				fireproximityprompt(v, 1);
				amount = amount + 1
				if (howmany and amount == tonumber(howmany)) then break; end
			end
		end
		return ("fired %d amount of proximityprompts"):format(amount);
	end)


	AddCommand("muteboombox", {}, "mutes a users boombox", {}, function(Caller, Args)
		SoundService.RespectFilteringEnabled = false
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			for i2, v2 in next, v.Character:GetDescendants() do
				if (v2:IsA("Sound")) then
					v2.Playing = false
				end
			end
		end
		SoundService.RespectFilteringEnabled = true
	end)

	AddCommand("loopmuteboombox", {}, "loop mutes a users boombox", {}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1]);
		local filterBoomboxes = function(i,v)
			return v:FindFirstChild("Handle") and v.Handle:FindFirstChildWhichIsA("Sound");
		end
		SpoofProperty(SoundService, "RespectFilteringEnabled");
		SoundService.RespectFilteringEnabled = false
		for i, v in next, Target do
			local Tools = table.tbl_concat(table.filter(v.Character:GetDescendants(), filterBoomboxes), table.filter(v.Backpack:GetChildren(), filterBoomboxes));
			for i2, v2 in next, Tools do
				Tbl[v.Name] = true
				v2.Handle.Sound.Playing = false
				coroutine.wrap(function()
					while (LoadCommand("loopmuteboombox").CmdExtra[v.Name]) do
						v2.Handle.Sound.Playing = false
						RunService.Heartbeat:Wait();
						if (not Players:FindFirstChild(v.Name) or not v2) then
							Tbl[v.Name] = nil
							break
						end
					end
					SoundService.RespectFilteringEnabled = true
				end)()
				Tbl[v.Name] = Connection
				AddPlayerConnection(v, Connection);
			end
		end
	end)

	AddCommand("unloopmuteboombox", {}, "unloopmutes a persons boombox", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1])
		local Looped = LoadCommand("loopmuteboombox").CmdExtra
		for i, v in next, Target do
			if (Looped[v.Name]) then
				Looped[v.Name] = nil
			end
		end
		LoadCommand("loopmuteboombox").CmdExtra = Looped
	end)

	AddCommand("forceplay", {}, "forcesplays an audio", {1,3,"1"}, function(Caller, Args, Tbl)
		local Id = Args[1]
		local filterBoomboxes = function(i,v)
			return v:IsA("Tool") and v:FindFirstChild("Handle") and v.Handle:FindFirstChildWhichIsA("Sound");
		end
		GetHumanoid():UnequipTools();
		local Boombox = table.filter(LocalPlayer.Backpack:GetChildren(), filterBoomboxes)
		if (not next(Boombox)) then
			return "you need a boombox to forceplay"
		end
		SpoofProperty(SoundService, "RespectFilteringEnabled");
		SoundService.RespectFilteringEnabled = false
		Boombox = Boombox[1]
		Boombox.Parent = GetCharacter();
		local Sound = Boombox.Handle.Sound
		Sound.SoundId = "http://roblox.com/asset/?id=" .. Id
		Boombox:FindFirstChildWhichIsA("RemoteEvent"):FireServer("PlaySong", tonumber(Id));
		Boombox.Parent = LocalPlayer.Backpack
		Tbl[Boombox] = true
		coroutine.wrap(function()
			while (LoadCommand("forceplay").CmdExtra[Boombox]) do
				Boombox.Handle.Sound.Playing = true
				RunService.Heartbeat:Wait();
			end
			SoundService.RespectFilteringEnabled = true
		end)()
		return "now forceplaying ".. Id
	end)

	AddCommand("unforceplay", {}, "stops forceplay", {}, function()
		local Playing = LoadCommand("forceplay").CmdExtra
		for i, v in next, Playing do
			i:FindFirstChild("Sound", true).Playing = false
			LoadCommand("forceplay").CmdExtra[i] = false
		end
		return "stopped forceplay"
	end)

	AddCommand("audiotime", {"audiotimeposition"}, "changes audio timeposition", {"1",1}, function(Caller, Args)
		local Time = Args[1]
		if (not tonumber(Time)) then
			return "time must be a number"
		end
		local filterplayingboomboxes = function(i,v)
			return v:IsA("Tool") and v:FindFirstChild("Handle") and v.Handle:FindFirstChildWhichIsA("Sound") and v.Handle:FindFirstChildWhichIsA("Sound").Playing == true
		end
		local OtherPlayingBoomboxes = LoadCommand("forceplay").CmdExtra
		local Boombox = table.filter(table.tbl_concat(LocalPlayer.Backpack:GetChildren(), GetCharacter():GetChildren()), filterplayingboomboxes)
		if (not next(Boombox) and not next(OtherPlayingBoomboxes)) then
			return "you need a boombox to change the timeposition"
		end
		Boombox = Boombox[1]
		if (Boombox) then
			Boombox:FindFirstChild("Sound", true).TimePosition = math.floor(tonumber(Time));
		else
			for i, v in next, OtherPlayingBoomboxes do
				i:FindFirstChild("Sound", true).TimePosition = math.floor(tonumber(Time));
			end
		end
		return "changed time position to " .. Time
	end)

	AddCommand("audiolog", {}, "audio logs someone", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			for i2, v2 in next, v.Character:GetDescendants() do
				if (v2:IsA("Sound") and v2.Parent.Parent:IsA("Tool")) then
					local AudioId = v2.SoundId:split("=")[2]
					setclipboard(AudioId);
					Utils.Notify(Caller, "Command", ("Audio Id (%s) copied to clipboard"):format(AudioId));
				end
			end
		end
	end)

	AddCommand("position", {"pos"}, "shows you a player's current (cframe) position", {}, function(Caller, Args)
		local Target = Args[1] and GetPlayer(Args[1])[1] or Caller
		local Root = GetRoot(Target)
		local Pos = Sanitize(Root.CFrame)
		if setclipboard then
			setclipboard(Pos)
		end
		return ("%s's position: %s"):format(Target.Name, Pos);
	end)

	AddCommand("grippos", {}, "changes grippos of your tool", {"3"}, function(Caller, Args, Tbl)
		local Tool = GetCharacter():FindFirstChildWhichIsA("Tool") or LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool");
		SpoofProperty(Tool, "GripPos");
		Tool.GripPos = Vector3.new(tonumber(Args[1]), tonumber(Args[2]), tonumber(Args[3]));
		Tool.Parent = GetCharacter();
		return "grippos set"
	end)

	AddCommand("truesightguis", {"tsg"}, "true sight on all guis", {}, function(Caller, Args, Tbl)
		for i, v in next, game:GetDescendants() do
			if (v:IsA("Frame") or v:IsA("ScrollingFrame") and not v.Visible) then
				Tbl[v] = v.Visible
				SpoofProperty(v, "Visible");
				v.Visible = true
			end
		end
		return "truesight for guis are now on"
	end)

	AddCommand("notruesightguis", {"untruesightguis", "notsg"}, "removes truesight on guis", {}, function(Caller, Args)
		local Guis = LoadCommand("truesightguis").CmdExtra
		for i, v in next, Guis do
			i.Visible = v
		end
		return "truesight for guis are now off"
	end)

	AddCommand("esp", {"aimbot", "cameralock", "locate", "silentaim", "aimlock", "tracers", "trace"}, "loads fates esp", {}, function(Caller, Args, Tbl)
		loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua"))();
		return "esp enabled"
	end)


	AddCommand("crosshair", {}, "enables a crosshair", {function()
		return Drawing ~= nil
	end}, function(Caller, Args, Tbl)
		if (Tbl[1] and Tbl[2] and Tbl[1].Transparency ~= 0) then
			Tbl[1]:Remove();
			Tbl[2]:Remove();
			Tbl[1] = nil
			Tbl[2] = nil
			return "crosshair disabled"
		end
		local Viewport = Camera.ViewportSize
		local Y = Drawing.new("Line");
		local X = Drawing.new("Line");
		Y.Thickness = 1
		X.Thickness = 1
		Y.Transparency = 1
		X.Transparency = 1
		Y.Visible = true
		X.Visible = true
		Y.To = Vector2.new(Viewport.X / 2, Viewport.Y / 2 - 10);
		X.To = Vector2.new(Viewport.X / 2 - 10, Viewport.Y / 2);
		Y.From = Vector2.new(Viewport.X / 2, Viewport.Y / 2 + 10);
		X.From = Vector2.new(Viewport.X / 2 + 10, Viewport.Y / 2);
		Tbl[1] = Y
		Tbl[2] = X
		return "crosshair enabled"
	end)

	AddCommand("walkto", {}, "walks to a player", {"1", 3}, function(Caller, Args)
		local Target = GetPlayer(Args[1])[1];
		GetHumanoid():MoveTo(GetRoot(Target).Position);
		return "walking to " .. Target.Name
	end)

	AddCommand("follow", {}, "follows a player", {"1", 3}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1])[1]
		Tbl[Target.Name] = true
		coroutine.wrap(function()
			repeat
				GetHumanoid():MoveTo(GetRoot(Target).Position);
				wait(.2);
			until not LoadCommand("follow").CmdExtra[Target.Name]
		end)()
		return "now following " .. Target.Name
	end)

	AddCommand("unfollow", {}, "unfollows a player", {}, function()
		local Following = LoadCommand("follow").CmdExtra
		if (not next(Following)) then
			return "you are not following anyone"
		end
		LoadCommand("follow").CmdExtra = {}
		return "stopped following"
	end)

	AddCommand("age", {}, "ages a player", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			local AccountAge = v.AccountAge
			local t = os.date("*t", os.time());
			t.day = t.day - tonumber(AccountAge);
			local CreatedAt = os.date("%d/%m/%y", os.time(t));
			Utils.Notify(Caller, "Command", ("%s's age is %s (%s)"):format(v.Name, AccountAge, CreatedAt));
		end
	end)

	AddCommand("nosales", {}, "no purchase prompt notifications will be shown", {}, function()
		CoreGui.PurchasePromptApp.PurchasePromptUI.Visible = false
		return "You'll no longer recive sale prompts"
	end)

	AddCommand("volume", {"vol"}, "changes your game volume", {}, function(Caller, Args)
		local Volume = tonumber(Args[1]);
		if (not Volume or Volume > 10 or Volume < 0) then
			return "volume must be a number between 0-10";
		end
		UserSettings():GetService("UserGameSettings").MasterVolume = Volume / 10
		return "volume set to " .. Volume
	end)

	AddCommand("antikick", {}, "client sided bypasses to kicks", {}, function()
		AntiKick = not AntiKick
		return "client sided antikick " .. (AntiKick and "enabled" or "disabled")
	end)

	AddCommand("antiteleport", {}, "client sided bypasses to teleports", {}, function()
		AntiTeleport = not AntiTeleport
		return "client sided antiteleport " .. (AntiTeleport and "enabled" or "disabled")
	end)

	AddCommand("autorejoin", {}, "auto rejoins the game when you get kicked", {}, function(Caller, Args, Tbl)
		local RejoinConnection = CoreGui:FindFirstChild("RobloxPromptGui"):FindFirstChildWhichIsA("Frame").DescendantAdded:Connect(function(Prompt)
			if (Prompt.Name == "ErrorTitle") then
				Prompt:GetPropertyChangedSignal("Text"):Wait();
				if (Prompt.Text == "Disconnected") then
					syn.queue_on_teleport("loadstring(game:HttpGet(\"https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua\"))()")
					TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId);
				end
			end
		end)
		AddConnection(RejoinConnection);
		Tbl[#Tbl + 1] = RejoinConnection
		return "auto rejoin enabled (rejoins when you get kicked from the game)"
	end)

	AddCommand("respawn", {}, "respawns your character", {3}, function()
		local OldPos = GetRoot().CFrame
		GetCharacter():BreakJoints();
		LocalPlayer.CharacterAdded:Wait();
		LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
		return "successfully respawned?"
	end)

	AddCommand("reset", {}, "resets your character", {3}, function()
		GetCharacter():BreakJoints();
	end)

	AddCommand("refresh", {"re"}, "refreshes your character", {3}, function(Caller)
		ReplaceCharacter();
		wait(Players.RespawnTime - 0.03);
		local OldPos = GetRoot().CFrame
		ReplaceHumanoid()
		LocalPlayer.CharacterAdded:Wait()
		LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = OldPos
		return "character refreshed"
	end)

	AddCommand("addalias", {}, "adds an alias to a command", {}, function(Caller, Args)
		local Command = Args[1]
		local Alias = Args[2]
		if (CommandsTable[Command]) then
			local Add = CommandsTable[Command]
			Add.Name = Alias
			CommandsTable[Alias] = Add
			return ("%s is now an alias of %s"):format(Alias, Command);
		else
			return Command .. " is not a valid command"
		end
	end)

	AddCommand("removealias", {}, "removes an alias from a command", {}, function(Caller, Args) -- todo: fix it removing actual commands when doing so
		local Command = Args[1]
		local Alias = Args[2]
		if (not CommandsTable[Command]) then
			return Command .. " is not a valid command"
		end
		if (not CommandsTable[Alias]) then
			return Alias .. " is not an alias"
		end

		if (CommandsTable[Alias].Name ~= Alias) then
			local Cmd = CommandsTable[Alias]
			CommandsTable[Alias] = nil
			return ("removed alias %s from %s"):format(Alias, Cmd.Name);
		end
		return "you can't remove commands"
	end)

	AddCommand("chatlogs", {"clogs"}, "enables chatlogs", {}, function()
		local MessageClone = ChatLogs.Frame.List:Clone()

		Utils.ClearAllObjects(ChatLogs.Frame.List)
		ChatLogs.Visible = true

		local Tween = Utils.TweenAllTransToObject(ChatLogs, .25, ChatLogsTransparencyClone)

		ChatLogs.Frame.List:Destroy()
		MessageClone.Parent = ChatLogs.Frame

		for i, v in next, ChatLogs.Frame.List:GetChildren() do
			if (not v:IsA("UIListLayout")) then
				Utils.Tween(v, "Sine", "Out", .25, {
					TextTransparency = 0
				})
			end
		end

		local ChatLogsListLayout = ChatLogs.Frame.List.UIListLayout

		ChatLogsListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			local CanvasPosition = ChatLogs.Frame.List.CanvasPosition
			local CanvasSize = ChatLogs.Frame.List.CanvasSize
			local AbsoluteSize = ChatLogs.Frame.List.AbsoluteSize

			if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
				wait() -- chatlogs updates absolutecontentsize before sizing frame
				ChatLogs.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000) --ChatLogsListLayout.AbsoluteContentSize.Y + 100)
			end
		end)

		Utils.Tween(ChatLogs.Frame.List, "Sine", "Out", .25, {
			ScrollBarImageTransparency = 0
		})
	end)

	AddCommand("globalchatlogs", {"globalclogs"}, "enables globalchatlogs", {}, function()
		local MessageClone = GlobalChatLogs.Frame.List:Clone();

		Utils.ClearAllObjects(GlobalChatLogs.Frame.List);
		GlobalChatLogs.Visible = true

		local Tween = Utils.TweenAllTransToObject(GlobalChatLogs, .25, GlobalChatLogsTransparencyClone);


		MessageClone.Parent = ChatLogs.Frame

		for i, v in next, GlobalChatLogs.Frame.List:GetChildren() do
			if (not v:IsA("UIListLayout")) then
				Utils.Tween(v, "Sine", "Out", .25, {
					TextTransparency = 0
				})
			end
		end

		local GlobalChatLogsListLayout = GlobalChatLogs.Frame.List.UIListLayout

		GlobalChatLogsListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			local CanvasPosition = GlobalChatLogs.Frame.List.CanvasPosition
			local CanvasSize = GlobalChatLogs.Frame.List.CanvasSize
			local AbsoluteSize = GlobalChatLogs.Frame.List.AbsoluteSize

			if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
				wait() -- chatlogs updates absolutecontentsize before sizing frame
				GlobalChatLogs.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000) --ChatLogsListLayout.AbsoluteContentSize.Y + 100)
			end
		end)

		Utils.Tween(GlobalChatLogs.Frame.List, "Sine", "Out", .25, {
			ScrollBarImageTransparency = 0
		});

		GlobalChatLogsEnabled = true
		if (not Socket) then
			Socket = (syn and syn.websocket or WebSocket).connect("ws://fate0.xyz:8080/scripts/fates-admin/chat?username=" .. LocalPlayer.Name);
			Socket.OnMessage:Connect(function(msg)
				if (GlobalChatLogsEnabled) then
					msg = HttpService:JSONDecode(msg);
					local Clone = GlobalChatLogMessage:Clone();
					Clone.Text = ("%s - [%s]: %s"):format(msg.fromDiscord and "from discord" or tostring(os.date("%X")), msg.username, msg.message);
					if (msg.tagColour) then
						Clone.TextColor3 = Color3.fromRGB(msg.tagColour[1], msg.tagColour[2], msg.tagColour[3]);
					end
					Clone.Visible = true
					Clone.TextTransparency = 1
					Clone.Parent = GlobalChatLogs.Frame.List
					Utils.Tween(Clone, "Sine", "Out", .25, {
						TextTransparency = 0
					});
					GlobalChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, GlobalChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
				end
			end)
			while (Socket and wait(30)) do
				Socket:Send("ping");
			end
		end
	end)

	AddCommand("httplogs", {"httpspy"}, "enables httpspy", {}, function()
		local MessageClone = HttpLogs.Frame.List:Clone()

		Utils.ClearAllObjects(HttpLogs.Frame.List)
		HttpLogs.Visible = true

		local Tween = Utils.TweenAllTransToObject(HttpLogs, .25, HttpLogsTransparencyClone)

		HttpLogs.Frame.List:Destroy()
		MessageClone.Parent = HttpLogs.Frame

		for i, v in next, HttpLogs.Frame.List:GetChildren() do
			if (not v:IsA("UIListLayout")) then
				Utils.Tween(v, "Sine", "Out", .25, {
					TextTransparency = 0
				})
			end
		end

		local HttpLogsListLayout = HttpLogs.Frame.List.UIListLayout

		HttpLogsListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			local CanvasPosition = HttpLogs.Frame.List.CanvasPosition
			local CanvasSize = HttpLogs.Frame.List.CanvasSize
			local AbsoluteSize = HttpLogs.Frame.List.AbsoluteSize

			if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
				wait() -- chatlogs updates absolutecontentsize before sizing frame
				HttpLogs.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000) --ChatLogsListLayout.AbsoluteContentSize.Y + 100)
			end
		end)

		Utils.Tween(HttpLogs.Frame.List, "Sine", "Out", .25, {
			ScrollBarImageTransparency = 0
		})

		if (hookfunction and syn) then
			local AddLog = function(reqType, url, body)
				if (getgenv().F_A and UI) then
					local Clone = ChatLogMessage:Clone();
					Clone.Text = ("%s\nUrl: %s%s\n"):format(Utils.TextFont(reqType .. " Detected (time: " .. tostring(os.date("%X")) ..")", {255, 165, 0}), url, body and ", Body: " .. Utils.TextFont(body, {255, 255, 0}) or "");
					Clone.RichText = true
					Clone.Visible = true
					Clone.TextTransparency = 1
					Clone.Parent = HttpLogs.Frame.List
					Utils.Tween(Clone, "Sine", "Out", .25, {
						TextTransparency = 0
					});
					HttpLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, HttpLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
				end
			end

			local Request;
			Request = hookfunction(syn and syn.request or request, newcclosure(function(reqtbl)
				AddLog(syn and "syn.request" or "request", reqtbl.Url, HttpService:JSONEncode(reqtbl));
				return Request(reqtbl);
			end));
			local Httpget;
			Httpget = hookfunction(game.HttpGet, newcclosure(function(self, url)
				AddLog("HttpGet", url);
				return Httpget(self, url);
			end));
			local HttpgetAsync;
			HttpgetAsync = hookfunction(game.HttpGetAsync, newcclosure(function(self, url)
				AddLog("HttpGetAsync", url);
				return HttpgetAsync(self, url);
			end));
			local Httppost;
			Httppost = hookfunction(game.HttpPost, newcclosure(function(self, url)
				AddLog("HttpPost", url);
				return Httppost(self, url);
			end));
			local HttppostAsync;
			HttppostAsync = hookfunction(game.HttpPostAsync, newcclosure(function(self, url)
				AddLog("HttpPostAsync", url);
				return HttppostAsync(self, url);
			end));

			local Clone = ChatLogMessage:Clone();
			Clone.Text = "httpspy loaded"
			Clone.RichText = true
			Clone.Visible = true
			Clone.TextTransparency = 1
			Clone.Parent = HttpLogs.Frame.List
			Utils.Tween(Clone, "Sine", "Out", .25, {
				TextTransparency = 0
			});
			HttpLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, HttpLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
		end
	end)

	AddCommand("btools", {}, "gives you btools", {3}, function(Caller, Args)
		local BP = LocalPlayer.Backpack
		for i = 1, 4 do
			local Bin = Instance.new("HopperBin");
			Bin.BinType = i
			ProtectInstance(Bin);
			Bin.Parent = BP
		end
		return "client sided btools loaded"
	end)

	AddCommand("spin", {}, "spins your character (optional: speed)", {}, function(Caller, Args, Tbl)
		local Speed = Args[1] or 5
		local Spin = Instance.new("BodyAngularVelocity");
		ProtectInstance(Spin);
		Spin.Parent = GetRoot();
		Spin.MaxTorque = Vector3.new(0, math.huge, 0);
		Spin.AngularVelocity = Vector3.new(0, Speed, 0);
		Tbl[#Tbl + 1] = Spin
		return "started spinning"
	end)

	AddCommand("unspin", {}, "unspins your character", {}, function(Caller, Args)
		local Spinning = LoadCommand("spin").CmdExtra
		for i, v in next, Spinning do
			v:Destroy();
		end
		return "stopped spinning"
	end)

	AddCommand("goto", {"to"}, "teleports yourself to the other character", {3, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Delay = tonumber(Args[2]);
		for i, v in next, Target do
			if (Delay) then
				wait(Delay);
			end
			GetRoot().CFrame = GetRoot(v).CFrame * CFrame.new(-5, 0, 0);
		end
	end)

	AddCommand("loopgoto", {"loopto"}, "loop teleports yourself to the other character", {3, "1"}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1])[1]
		local Connection = RunService.Heartbeat:Connect(function()
			GetRoot().CFrame = GetRoot(Target).CFrame * CFrame.new(0, 0, 2);
		end)

		Tbl[Target.Name] = Connection
		AddPlayerConnection(LocalPlayer, Connection);
		AddConnection(Connection);
		return "now looping to " .. Target.name
	end)

	AddCommand("unloopgoto", {"unloopto"}, "removes loop teleportation to the other character", {}, function(Caller)
		local Looping = LoadCommand("loopgoto").CmdExtra;
		if (not next(Looping)) then
			return "you aren't loop teleporting to anyone"
		end
		DisableAllCmdConnections("loopgoto");
		return "loopgoto disabled"
	end)

	AddCommand("tweento", {"tweengoto"}, "tweens yourself to the other person", {3, "1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			TweenService:Create(GetRoot(), TweenInfo.new(2), {CFrame = GetRoot(v).CFrame}):Play();
		end
	end)

	AddCommand("truesight", {"ts"}, "shows all the transparent stuff", {}, function(Caller, Args, Tbl)
		local amount = 0
		local time = tick() or os.clock();
		for i, v in next, Workspace:GetDescendants() do
			if (v:IsA("Part") and v.Transparency >= 0.3) then
				Tbl[v] = v.Transparency
				SpoofProperty(v, "Transparency");
				v.Transparency = 0
				amount = amount + 1
			end
		end

		return ("%d items shown in %.3f (s)"):format(amount, (tick() or os.clock()) - time);
	end)

	AddCommand("notruesight", {"nots"}, "removes truesight", {}, function(Caller, Args)
		local showing = LoadCommand("truesight").CmdExtra
		local time = tick() or os.clock();
		for i, v in next, showing do
			i.Transparency = v
		end
		return ("%d items hidden in %.3f (s)"):format(#showing, (tick() or os.clock()) - time);
	end)

	AddCommand("xray", {}, "see through wallks", {}, function(Caller, Args, Tbl)
		for i, v in next, Workspace:GetDescendants() do
			if v:IsA("Part") and v.Transparency <= 0.3 then
				Tbl[v] = v.Transparency
				SpoofProperty(v, "Transparency");
				v.Transparency = 0.3
			end
		end
		return "xray is now on"
	end)

	AddCommand("noxray", {"unxray"}, "stops xray", {}, function(Caller, Args)
		local showing = LoadCommand("xray").CmdExtra
		local time = tick() or os.clock();
		for i, v in next, showing do
			i.Transparency = v
		end
		return "xray is now off"
	end)

	AddCommand("nolights", {}, "removes all lights", {}, function(Caller, Args, Tbl)
		SpoofProperty(Lighting, "GlobalShadows");
		for i, v in next, game:GetDescendants() do
			if (v:IsA("PointLight") or v:IsA("SurfaceLight") or v:IsA("SpotLight")) then
				Tbl[v] = v.Parent
				v.Parent = nil
			end
		end
		Lighting.GlobalShadows = true
		return "removed all lights"
	end)

	AddCommand("revertnolights", {"lights"}, "reverts nolights", {}, function()
		local Lights = LoadCommand("nolights").CmdExtra
		for i, v in next, Lights do
			i.Parent = v
		end
		return "fullbright disabled"
	end)


	AddCommand("fullbright", {"fb"}, "turns on fullbright", {}, function(Caller, Args, Tbl)
		for i, v in next, game:GetDescendants() do
			if (v:IsA("PointLight") or v:IsA("SurfaceLight") or v:IsA("SpotLight")) then
				Tbl[v] = v.Range
				SpoofInstance(v);
				v.Enabled = true
				v.Shadows = false
				v.Range = math.huge
			end
		end
		SpoofProperty(Lighting, "GlobalShadows");
		Lighting.GlobalShadows = false
		return "fullbright enabled"
	end)

	AddCommand("nofullbright", {"revertlights", "unfullbright", "nofb"}, "reverts fullbright", {}, function()
		local Lights = LoadCommand("fullbright").CmdExtra
		for i, v in next, Lights do
			i.Range = v
		end
		Lighting.GlobalShadows = true
		return "fullbright disabled"
	end)

	AddCommand("swim", {}, "allows you to use the swim state", {3}, function(Caller, Args, Tbl)
		local Humanoid = GetHumanoid();
		SpoofInstance(Humanoid);
		for i, v in next, Enum.HumanoidStateType:GetEnumItems() do
			Humanoid:SetStateEnabled(v, false);
		end
		Tbl[1] = Humanoid:GetState();
		Humanoid:ChangeState(Enum.HumanoidStateType.Swimming);
		SpoofProperty(Workspace, "Gravity");
		Workspace.Gravity = 0
		coroutine.wrap(function()
			Humanoid.Died:Wait();
			Workspace.Gravity = 198
		end)()
		return "swimming enabled"
	end)

	AddCommand("unswim", {"noswim"}, "removes swim", {}, function(Caller, Args)
		local Humanoid = GetHumanoid();
		for i, v in next, Enum.HumanoidStateType:GetEnumItems() do
			Humanoid:SetStateEnabled(v, true);
		end
		Humanoid:ChangeState(LoadCommand("swim").CmdExtra[1]);
		Workspace.Gravity = 198
		return "swimming disabled"
	end)

	AddCommand("disableanims", {"noanims"}, "disables character animations", {3}, function(Caller, Args)
		local Animate = GetCharacter():FindFirstChild("Animate");
		SpoofProperty(Animate, "Disabled");
		Animate.Disabled = true
		return "animations disabled"
	end)

	AddCommand("enableanims", {"anims"}, "enables character animations", {3}, function(Caller, Args)
		GetCharacter():FindFirstChild("Animate").Disabled = false
		return "animations enabled"
	end)

	AddCommand("fly", {}, "fly your character", {3}, function(Caller, Args, Tbl)
		LoadCommand("fly").CmdExtra[1] = tonumber(Args[1]) or 3
		local Speed = LoadCommand("fly").CmdExtra[1]
		for i, v in next, GetRoot():GetChildren() do
			if (v:IsA("BodyPosition") or v:IsA("BodyGyro")) then
				v:Destroy();
			end
		end
		local BodyPos = Instance.new("BodyPosition");
		local BodyGyro = Instance.new("BodyGyro");
		ProtectInstance(BodyPos);
		ProtectInstance(BodyGyro);
		SpoofProperty(GetHumanoid(), "FloorMaterial");
		SpoofProperty(GetHumanoid(), "PlatformStand");
		BodyPos.Parent = GetRoot();
		BodyGyro.Parent = GetRoot();    
		BodyGyro.maxTorque = Vector3.new(1, 1, 1) * 9e9
		BodyGyro.CFrame = GetRoot().CFrame
		BodyPos.maxForce = Vector3.new(1, 1, 1) * math.huge
		GetHumanoid().PlatformStand = true
		coroutine.wrap(function()
			BodyPos.Position = GetRoot().Position
			while (next(LoadCommand("fly").CmdExtra) and wait()) do
				Speed = LoadCommand("fly").CmdExtra[1]
				local NewPos = (BodyGyro.CFrame - (BodyGyro.CFrame).Position) + BodyPos.Position
				local CoordinateFrame = Camera.CoordinateFrame
				if (Keys["W"]) then
					NewPos = NewPos + CoordinateFrame.lookVector * Speed

					BodyPos.Position = (GetRoot().CFrame * CFrame.new(0, 0, -Speed)).Position;
					BodyGyro.CFrame = CoordinateFrame * CFrame.Angles(-math.rad(Speed * 15), 0, 0);
				end
				if (Keys["A"]) then
					NewPos = NewPos * CFrame.new(-Speed, 0, 0);
				end
				if (Keys["S"]) then
					NewPos = NewPos - CoordinateFrame.lookVector * Speed

					BodyPos.Position = (GetRoot().CFrame * CFrame.new(0, 0, Speed)).Position;
					BodyGyro.CFrame = CoordinateFrame * CFrame.Angles(-math.rad(Speed * 15), 0, 0);
				end
				if (Keys["D"]) then
					NewPos = NewPos * CFrame.new(Speed, 0, 0);
				end
				BodyPos.Position = NewPos.Position
				BodyGyro.CFrame = CoordinateFrame
			end
			GetHumanoid().PlatformStand = false
		end)();
	end)

	AddCommand("fly2", {}, "fly your character", {3}, function(Caller, Args, Tbl)
		LoadCommand("fly2").CmdExtra[1] = tonumber(Args[1]) or 5
		local Speed = LoadCommand("fly").CmdExtra[1]
		for i, v in next, GetRoot():GetChildren() do
			if (v:IsA("BodyPosition") or v:IsA("BodyGyro")) then
				v:Destroy();
			end
		end
		local BodyPos = Instance.new("BodyPosition");
		local BodyGyro = Instance.new("BodyGyro");
		ProtectInstance(BodyPos);
		ProtectInstance(BodyGyro);
		SpoofProperty(GetHumanoid(), "FloorMaterial");
		SpoofProperty(GetHumanoid(), "PlatformStand");
		BodyPos.Parent = GetRoot();
		BodyGyro.Parent = GetRoot();
		BodyGyro.maxTorque = Vector3.new(1, 1, 1) * 9e9
		BodyGyro.CFrame = GetRoot().CFrame
		BodyGyro.D = 0
		BodyPos.maxForce = Vector3.new(1, 1, 1) * 9e9
		BodyPos.D = 400
		coroutine.wrap(function()
			BodyPos.Position = GetRoot().Position
			while (next(LoadCommand("fly2").CmdExtra) and wait()) do
				Speed = LoadCommand("fly2").CmdExtra[1]
				local CoordinateFrame = Camera.CoordinateFrame
				if (Keys["W"] or Keys["A"] or Keys["S"] or Keys["D"]) then
					GetRoot().CFrame = GetRoot().CFrame + GetHumanoid().MoveDirection * Speed
				end
				BodyGyro.CFrame = CoordinateFrame
				BodyPos.Position = GetRoot().CFrame.Position
			end
		end)();

		return "now flying"
	end)

	AddCommand("flyspeed", {"fs"}, "changes the fly speed", {3, "1"}, function(Caller, Args)
		local Speed = tonumber(Args[1]);
		LoadCommand("fly").CmdExtra[1] = Speed or LoadCommand("fly2").CmdExtra[1]
		return Speed and "your fly speed is now " .. Speed or "flyspeed must be a number"
	end)

	AddCommand("unfly", {}, "unflies your character", {3}, function()
		LoadCommand("fly").CmdExtra = {}
		LoadCommand("fly2").CmdExtra = {}
		for i, v in next, GetRoot():GetChildren() do
			if (v:IsA("BodyPosition") or v:IsA("BodyGyro")) then
				v:Destroy();
			end
		end
		GetHumanoid().PlatformStand = false
		return "stopped flying"
	end)

	AddCommand("float", {}, "floats your character (uses grass to bypass some ac's)", {}, function(Caller, Args, Tbl)
		if (not Tbl[1]) then
			local Part = Instance.new("Part");
			Part.CFrame = CFrame.new(0, -10000, 0);
			Part.Size = Vector3.new(2, .2, 1.5);
			Part.Material = "Grass"
			ProtectInstance(Part);
			Part.Parent = Workspace
			Part.Anchored = true

			AddConnection(RunService.RenderStepped:Connect(function()
				if (LoadCommand("float").CmdExtra[1] and GetRoot()) then
					Part.CFrame = GetRoot().CFrame * CFrame.new(0, -3.1, 0);
				else
					Part.CFrame = CFrame.new(0, -10000, 0);
				end
			end))
			Tbl[1] = true
		end
		return "now floating"
	end)

	AddCommand("unfloat", {"nofloat"}, "stops float", {}, function(Caller, Args, Tbl)
		local Floating = LoadCommand("float").CmdExtra
		if (Floating[1]) then
			Floating[1] = false
			return "stopped floating"
		end
		return "floating not on"
	end)

	AddCommand("fov", {}, "sets your fov", {}, function(Caller, Args)
		local Amount = tonumber(Args[1]) or 70
		SpoofProperty(Camera, "FieldOfView");
		Camera.FieldOfView = Amount
	end)

	AddCommand("noclip", {}, "noclips your character", {3}, function(Caller, Args, Tbl)
		local Char = GetCharacter()
		local Noclipping = AddConnection(RunService.Stepped:Connect(function()
			for i, v in next, Char:GetChildren() do
				if (v:IsA("BasePart") and v.CanCollide) then
					SpoofProperty(v, "CanCollide");
					v.CanCollide = false
				end
			end
		end), Tbl);
		local Noclipping2 = AddConnection(GetRoot().Touched:Connect(function(Part)
			if (Part.CanCollide) then
				local OldTransparency = Part.Transparency
				Part.CanCollide = false
				Part.Transparency = Part.Transparency <= 0.5 and 0.6 or Part.Transparency
				wait(2);
				Part.CanCollide = true
				Part.Transparency = OldTransparency
			end
		end), Tbl);
		Utils.Notify(Caller, "Command", "noclip enabled");
		GetHumanoid().Died:Wait();
		DisableAllCmdConnections("noclip");
		return "noclip disabled"
	end)

	AddCommand("clip", {}, "disables noclip", {}, function(Caller, Args)
		if (not next(LoadCommand("noclip").CmdExtra)) then
			return "you aren't in noclip"
		else
			DisableAllCmdConnections("noclip");
			return "noclip disabled"
		end
	end)

	AddCommand("anim", {"animation"}, "plays an animation", {3, "1"}, function(Caller, Args)
		local Anims = {
			["idle"] = 180435571,
			["idle2"] = 180435792,
			["walk"] = 180426354,
			["run"] = 180426354,
			["jump"] = 125750702,
			["climb"] = 180436334,
			["toolnone"] = 182393478,
			["fall"] = 180436148,
			["sit"] = 178130996,
			["dance"] = 182435998,
			["dance2"] = 182491277,
			["dance3"] = 182491423
		}
		if (not Anims[Args[1]]) then
			return "there is no animation named " .. Args[1]
		end
		local Animation = Instance.new("Animation");
		Animation.AnimationId = "rbxassetid://" .. Anims[Args[1]]
		local LoadedAnimation = GetHumanoid():LoadAnimation(Animation);
		LoadedAnimation:Play();
		local Playing = LoadedAnimation:GetPropertyChangedSignal("IsPlaying"):Connect(function()
			if (LoadedAnimation.IsPlaying ~= true) then
				LoadedAnimation:Play(.1, 1, 10);
			end
		end)
		return "playing animation " .. Args[1]
	end)

	AddCommand("lastcommand", {"lastcmd"}, "executes the last command", {}, function(Caller)
		local Command = LastCommand[#LastCommand]
		LoadCommand(Command[1]).Function()(Command[2], Command[3], Command[4]);
		return ("command %s executed"):format(Command[1]);
	end)

	AddCommand("whisper", {}, "whispers something to another user", {"2"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		local Message = table.concat(table.shift(Args), " ");
		local ChatRemote = ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
		for i, v in next, Target do
			ChatRemote:FireServer(("/w %s %s"):format(v.Name, Message), "All");
			Utils.Notify(Caller or LocalPlayer, "Command", "Message sent to " .. v.Name);
		end
	end)

	AddCommand("chat", {}, "sends a message", {"1"}, function(Caller, Args)
		local ChatRemote = ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
		local toChat = table.concat(Args, " ");
		ChatRemote:FireServer(toChat, "All");
		return "chatted " .. toChat
	end)

	AddCommand("silentchat", {"chatsilent"}, "sends a message but will not show in the chat (fires .Chatted signals)", {"1"}, function(Caller, Args)
		local toChat = table.concat(Args, " ");
		Players:Chat(toChat);
		return "silent chatted " .. toChat
	end)

	AddCommand("spamsilentchat", {"spamchatlogs"}, "spams sending messages with what you want", {"1"}, function(Caller, Args, Tbl)
		local toChat = table.concat(Args, " ");
		local ChatMsg = Players.Chat
		for i = 1, 100 do
			ChatMsg(Players, toChat);
		end
		AddConnection(Players.Chatted:Connect(function()
			for i = 1, 100 do
				ChatMsg(Players, toChat);
			end
		end), Tbl);
		return "spamming chat sliently"
	end)

	AddCommand("unspamsilentchat", {"nospamsilentchat", "unspamchatlogs", "nospamchatlogs"}, "stops the spam of chat", {}, function()
		local Spamming = LoadCommand("spamsilentchat").CmdExtra
		if (not next(Spamming)) then
			return "you are not spamming slient chat"
		end
		DisableAllCmdConnections("spamsilentchat");
		return "stopped spamming slient chat"
	end)

	AddCommand("advertise", {}, "advertises the script", {}, function()
		local ChatRemote = ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
		ChatRemote:FireServer("I am using fates admin, join the server 5epGRYR", "All");
	end)

	AddCommand("joinserver", {"discord"}, "joins the fates admin discord server", {}, function()
		local Request = syn and syn.request or request
		if (Request({
			Url = "http://127.0.0.1:6463/rpc?v=1",
			Method = "POST",
			Headers = {
				["Content-Type"] = "application/json",
				["Origin"] = "https://discord.com"
			},
			Body = HttpService:JSONEncode({
				cmd = "INVITE_BROWSER",
				args = {
					code = "5epGRYR"
				},
				nonce = HttpService:GenerateGUID(false)
			}),
			}).StatusCode == 200) then
			return "joined fates admin discord server"
		else
			return "discord isn't open"
		end
	end)

	AddCommand("rejoin", {"rj"}, "rejoins the game you're currently in", {}, function(Caller)
		if (Caller == LocalPlayer) then
			TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId);
			return "Rejoining..."
		end
	end)

	AddCommand("serverhop", {"sh"}, "switches servers (optional: min or max)", {{"min", "max"}}, function(Caller, Args)
		if (Caller == LocalPlayer) then
			Utils.Notify(Caller or LocalPlayer, nil, "Looking for servers...");

			local Servers = HttpService:JSONDecode(game:HttpGetAsync(("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100"):format(game.PlaceId))).data
			if (#Servers >= 1) then
				Servers = table.filter(Servers, function(i,v)
					return v.playing ~= v.maxPlayers and v.id ~= game.JobId
				end)
				local Server
				local Option = Args[1] or ""
				if (Option:lower() == "min") then
					Server = Servers[#Servers]
				elseif (Option:lower() == "max") then
					Server = Servers[1]
				else
					Server = Servers[math.random(1, #Servers)]
				end
				if (syn) then
					syn.queue_on_teleport("loadstring(game:HttpGet(\"https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua\"))()");
				end
				TeleportService:TeleportToPlaceInstance(game.PlaceId, Server.id);
				return ("joining server (%d/%d players)"):format(Server.playing, Server.maxPlayers);
			else
				return "no servers foudn"
			end
		end
	end)

	AddCommand("changelogs", {"cl"}, "shows you the updates on fates admin", {}, function()
		local ChangeLogs = HttpService:JSONDecode(game:HttpGetAsync("https://api.github.com/repos/fatesc/fates-admin/commits?per_page=100&path=main.lua"));
		ChangeLogs = table.map(ChangeLogs, function(i, v)
			return {
				["Author"] = v.commit.author.name,
				["Date"] = v.commit.committer.date:gsub("[T|Z]", " "),
				["Message"] = v.commit.message
			}
		end)
		for i, v in next, ChangeLogs do
			print(("Author: %s\nDate: %s\nMessage: %s"):format(v.Author, v.Date, v.Message));
		end

		return "changelogs loaded, press f9"
	end)

	AddCommand("whitelist", {"wl"}, "whitelists a user so they can use commands", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			AdminUsers[#AdminUsers + 1] = v
			Utils.Notify(v, "Whitelisted", ("You (%s) are whitelisted to use commands"):format(v.Name));
		end
	end)

	AddCommand("whitelisted", {"whitelistedusers"}, "shows all the users whitelisted to use commands", {}, function(Caller)
		return next(AdminUsers) and table.concat(table.map(AdminUsers, function(i,v) return v.Name end), ", ") or "no users whitelisted"
	end)

	AddCommand("blacklist", {"bl"}, "blacklists a whitelisted user", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			if (table.find(AdminUsers, v)) then
				table.remove(AdminUsers, table.indexOf(AdminUsers, v));
			end
		end
	end)

	AddCommand("exceptions", {}, "blocks user from being used in stuff like kill all", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1]);
		for i, v in next, Target do
			Exceptions[#Exceptions + 1] = v
			Utils.Notify(Caller, "Command", v.Name .. " is added to the exceptions list");
		end
	end)

	AddCommand("noexception", {}, "removes user from exceptions list", {"1"}, function(Caller, Args)
		for i2, v2 in next, Exceptions do
			if (v2.Name == Args[1]) then
				v2 = nil
			end
			Utils.Notify(Caller, "Command", Args[1] .. " is removed from the exceptions list");
		end
	end)

	AddCommand("clearexceptions", {}, "removes users from exceptions list", {}, function(Caller, Args)
		Exceptions = {}
		return "exceptions list cleared"
	end)
	local CommandsLoaded = false
	AddCommand("commands", {"cmds"}, "shows you all the commands listed in fates admin", {}, function()
		if (not CommandsLoaded) then
			local CommandsList = Commands.Frame.List
			Utils.SmoothScroll(CommandsList, .14);
			for _, v in next, CommandsTable do
				if (not CommandsList:FindFirstChild(v.Name)) then
					local Clone = Command:Clone()
					Utils.Hover(Clone, "BackgroundColor3");
					Utils.ToolTip(Clone, v.Name .. "\n" .. v.Description);
					Clone.CommandText.Text = v.Name .. (#v.Aliases > 0 and " (" ..table.concat(v.Aliases, ", ") .. ")" or "");
					Clone.Name = v.Name
					Clone.Visible = true
					Clone.Parent = CommandsList
				end
			end
			Commands.Frame.List.CanvasSize = UDim2.fromOffset(0, Commands.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			CommandsTransparencyClone = Commands:Clone();
			Utils.SetAllTrans(Commands)
			CommandsLoaded = true
		end
		Commands.Visible = true
		Utils.TweenAllTransToObject(Commands, .25, CommandsTransparencyClone);
		return "Commands Loaded"
	end)

	AddCommand("killscript", {}, "kills the script", {}, function(Caller)
		if (Caller == LocalPlayer) then
			table.deepsearch(Connections, function(i,v)
				if (type(v) == 'userdata' and v.Disconnect) then
					v:Disconnect();
				elseif (type(v) == 'boolean') then
					v = false
				end
			end);
			for i, v in next, SpoofedProperties do
				for i2, v2 in next, v do
					i[v2.Property] = v2.SpoofedProperty[v2.Property]
					v2.SpoofedProperty:Destroy();
				end
			end
			for i, v in next, SpoofedInstances do
				v:Destroy();
			end
			SpoofedInstances = {}
			SpoofedProperties = {}
			UI:Destroy();
			getgenv().F_A = nil
			setreadonly(mt, false);
			mt = OldMetaMethods
			setreadonly(mt, true);
			for i, v in next, getfenv() do
				getfenv()[i] = nil
			end
		end
	end)


	AddCommand("commandline", {"cmd", "cli"}, "brings up a cli, can be useful for when games detect by textbox", {}, function()
		if (not CLI) then
			CLI = true
			while true do
				rconsoleprint("@@WHITE@@");
				rconsoleprint("CMD >");
				local Input = rconsoleinput("");
				local CommandArgs = Input:split(" ");
				local Command = LoadCommand(CommandArgs[1]);
				local Args = table.shift(CommandArgs);
				if (Command and CommandArgs[1] ~= "") then
					if (Command.ArgsNeeded > #Args) then
						rconsoleprint("@@YELLOW@@");
						return rconsoleprint(("Insuficient Args (you need %d)\n"):format(Command.ArgsNeeded));
					end

					local Success, Err = pcall(function()
						local Executed = Command.Function()(LocalPlayer, Args, Command.CmdExtra);
						if (Executed) then
							rconsoleprint("@@GREEN@@");
							rconsoleprint(Executed .. "\n");
						end
						if (#LastCommand == 3) then
							LastCommand = table.shift(LastCommand);
						end
						LastCommand[#LastCommand + 1] = {Command, plr, Args, Command.CmdExtra}
					end);
					if (not Success and Debug) then
						rconsoleerr(Err);
					end
				else
					rconsolewarn("couldn't find the command " .. CommandArgs[1] .. "\n");
				end
			end
		end
	end)

	AddCommand("setprefix", {}, "changes your prefix", {"1"}, function(Caller, Args)
		local PrefixToSet = Args[1]
		if (PrefixToSet:match("%A")) then
			Prefix = PrefixToSet
			Utils.Notify(Caller, "Command", ("your new prefix is now '%s'"):format(PrefixToSet));
			return "use command saveprefix to save your prefix"
		else
			return "prefix must be a symbol"
		end
	end)

	AddCommand("setcommandbarprefix", {"setcprefix"}, "sets your command bar prefix to whatever you input", {}, function()
		ChooseNewPrefix = true
		local CloseNotif = Utils.Notify(LocalPlayer, "New Prefix", "Input the new prefix you would like to have", 7);
	end)

	AddCommand("saveprefix", {}, "saves your prefix", {}, function(Caller, Args)
		if (GetConfig().Prefix == Prefix and Enum.KeyCode[GetConfig().CommandBarPrefix] == CommandBarPrefix) then
			return "nothing to save, prefix is the same"
		else
			SetConfig({["Prefix"]=Prefix,["CommandBarPrefix"]=tostring(CommandBarPrefix):split(".")[3]});
			return "saved prefix"
		end
	end)

	AddCommand("clear", {"clearcli", "cls"}, "clears the commandline (if open)", {}, function()
		if (CLI) then
			rconsoleclear();
			rconsolename("Admin Command Line");
			rconsoleprint("\nCommand Line:\n");
			return "cleared console"
		end
		return "cli is not open"
	end)

	AddCommand("widebar", {}, "widens the command bar (toggle)", {}, function(Caller, Args)
		WideBar = not WideBar
		if (not Draggable) then
			Utils.Tween(CommandBar, "Quint", "Out", .5, {
				Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5) -- tween -110
			})
		end
		Utils.Tween(CommandBar, "Quint", "Out", .5, {
			Size = UDim2.new(0, WideBar and 400 or 200, 0, 35) -- tween -110
		})
		return ("widebar %s"):format(WideBar and "enabled" or "disabled")
	end)

	AddCommand("draggablebar", {"draggable"}, "makes the command bar draggable", {}, function(Caller)
		Draggable = not Draggable
		CommandBarOpen = not CommandBarOpen
		Utils.Tween(CommandBar, "Quint", "Out", .5, {
			Position = UDim2.new(0, Mouse.X, 0, Mouse.Y + 36);
		})
		Utils.Draggable(CommandBar);
		local TransparencyTween = CommandBarOpen and Utils.TweenAllTransToObject or Utils.TweenAllTrans
		local Tween = TransparencyTween(CommandBar, .5, CommandBarTransparencyClone)
		CommandBar.Input.Text = ""
		return ("draggable command bar %s"):format(Draggable and "enabled" or "disabled")
	end)

	AddCommand("chatprediction", {}, "enables command prediction on the chatbar", {}, function()
		ParentGui(PredictionClone, Frame2);
		Frame2:WaitForChild('ChatBar', .1):CaptureFocus();
		wait();
		Frame2:WaitForChild('ChatBar', .1).Text = Prefix
		return "chat prediction enabled"
	end)

	AddCommand("blink", {"blinkws"}, "cframe speed", {}, function(Caller, Args, Tbl)
		local Speed = tonumber(Args[1]) or 5
		local Time = tonumber(Args[2]) or .05
		LoadCommand("blink").CmdExtra[1] = Speed
		coroutine.wrap(function()
			while (next(LoadCommand("blink").CmdExtra) and wait(Time)) do
				Speed = LoadCommand("blink").CmdExtra[1]
				if (Keys["W"] or Keys["A"] or Keys["S"] or Keys["D"]) then
					GetRoot().CFrame = GetRoot().CFrame + GetHumanoid().MoveDirection * Speed
				end
			end
		end)();
		return "blink speed enabled"
	end)

	AddCommand("unblink", {"noblinkws", "unblink", "noblink"}, "stops cframe speed", {}, function()
		local Blink = LoadCommand("blink").CmdExtra
		if (not next(Blink)) then
			return "blink is already disabled"
		end
		LoadCommand("blink").CmdExtra = {}
		return "blink speed disabled"
	end)

	AddCommand("orbit", {}, "orbits a yourself around another player", {3, "1"}, function(Caller, Args, Tbl)
		local Target = GetPlayer(Args[1])[1];
		if (Target == LocalPlayer) then
			return "You cannot orbit yourself."
		end
		local Radius = tonumber(Args[3]) or 7
		local Speed = tonumber(Args[2]) or 1
		local random = math.random(tick() / 2, tick());
		local Root, TRoot = GetRoot(), GetRoot(Target);
		AddConnection(RunService.Heartbeat:Connect(function()
			Root.CFrame = CFrame.new(TRoot.Position + Vector3.new(math.sin(tick() + random * Speed) * Radius, 0, math.cos(tick() + random * Speed) * Radius), TRoot.Position);
		end), Tbl);
		return "now orbiting around " .. Target.Name
	end)

	AddCommand("unorbit", {"noorbit"}, "unorbits yourself from the other player", {}, function()
		if (not next(LoadCommand("orbit").CmdExtra)) then
			return "you are not orbiting around someone"
		end
		DisableAllCmdConnections("orbit");
		return "orbit stopped"
	end)

	AddCommand("bypass", {"clientbypass"}, "client sided bypass", {3}, function()
		AddConnection(LocalPlayer.CharacterAdded:Connect(function()
			GetCharacter():WaitForChild("Humanoid");
			wait(.4);
			SpoofInstance(GetHumanoid());
			SpoofInstance(GetRoot(), isR6() and GetCharacter().Torso or GetCharacter().UpperTorso);
			ProtectInstance(GetRoot());
			ProtectInstance(GetHumanoid());
		end));
		GetCharacter():BreakJoints();
		CommandsTable["goto"].Function = CommandsTable["tweento"].Function
		CommandsTable["to"].Function = CommandsTable["tweento"].Function
		return "clientsided bypass enabled"
	end)

	AddCommand("shiftlock", {}, "enables shiftlock in your game (some games have it off)", {}, function()
		if (LocalPlayer.DevEnableMouseLock) then
			return "shiftlock is already on"
		end
		LocalPlayer.DevEnableMouseLock = true
		return "shiftlock is now on"
	end)

	AddCommand("copyname", {"copyusername"}, "copies a users name to your clipboard", {"1"}, function(Caller, Args)
		local Target = GetPlayer(Args[1])[1];
		if (setclipboard) then
			setclipboard(Target.Name);
		else
			Frame2.Chatbar:CaptureFocus();
			wait();
			Frame2.Chatbar.Text = Target.Name
		end
		return "copied " + Target.Name + "'s username"
	end)

	AddCommand("switchteam", {"team"}, "switches your team", {}, function(Caller, Args)
		local Team = Args[1]
		Team = game:GetService("Teams"):FindFirstChild(Team);
		if (not Team) then
			return Team.. " is not a valid team"
		end
		for i, v in next, Workspace:GetDescendants() do
			if (v:IsA("SpawnLocation") and v.BrickColor == Team.TeamColor) then
				firetouchinterest(v, GetRoot(), 0);
				firetouchinterest(v, GetRoot(), 1);
				break
			end
		end
		wait(.1);
		return LocalPlayer.Team == Team and "changed team to " .. Team.Name or "could'nt change team to " .. Team.Name
	end)

	local Activated = false
	AddCommand("freecam", {"fc"}, "enables/disables freecam", {}, function(Caller, Args)
		if (not Activated) then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/src/lua/freecam.lua"))();
			Activated = true
			return "freecam enabled"
		end
		return "freecam is already enabled (shift + p to toggle)";
	end)


	local PlrChat = function(i, plr)
		if (not Connections.Players[plr.Name]) then
			Connections.Players[plr.Name] = {}
			Connections.Players[plr.Name].Connections = {}
		end
		Connections.Players[plr.Name].ChatCon = plr.Chatted:Connect(function(raw)

			local message = raw

			if (ChatLogsEnabled) then
				local Tag = Utils.CheckTag(plr);

				local time = os.date("%X");
				local Text = ("%s - [%s]: %s"):format(time, Tag and Tag.Name or plr.Name, raw);
				local Clone = ChatLogMessage:Clone();

				Clone.Text = Text
				Clone.Visible = true
				Clone.TextTransparency = 1
				Clone.Parent = ChatLogs.Frame.List

				if (Tag and Tag.Rainbow) then
					Utils.Rainbow(Clone);
				end
				if (Tag and Tag.Colour) then
					local TColour = Tag.Colour
					Clone.TextColor3 = Color3.fromRGB(TColour[1], TColour[2], TColour[3]);
				end

				Utils.Tween(Clone, "Sine", "Out", .25, {
					TextTransparency = 0
				})

				ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, ChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
			end

			if (GlobalChatLogsEnabled and plr == LocalPlayer) then
				local Message = {
					username = LocalPlayer.Name,
					userid = LocalPlayer.UserId,
					message = message
				}
				Socket:Send(HttpService:JSONEncode(Message));
			end
			if (string.startsWith(raw, "/e")) then
				raw = raw:sub(4);
			elseif (string.startsWith(raw, Prefix)) then
				raw = raw:sub(#Prefix + 1);
			else
				return
			end

			message = string.trim(raw);

			if (table.find(AdminUsers, plr) or plr == LocalPlayer) then
				local CommandArgs = message:split(" ");
				local Command, LoadedCommand = CommandArgs[1], LoadCommand(CommandArgs[1]);
				local Args = table.shift(CommandArgs);

				if (LoadedCommand) then
					if (LoadedCommand.ArgsNeeded > #Args) then
						return Utils.Notify(plr, "Error", ("Insuficient Args (you need %d)"):format(LoadedCommand.ArgsNeeded))
					end

					local Success, Err = pcall(function()
						local Executed = LoadedCommand.Function()(plr, Args, LoadedCommand.CmdExtra);
						if (Executed) then
							Utils.Notify(plr, "Command", Executed);
						end
						if (#LastCommand == 3) then
							LastCommand = table.shift(LastCommand);
						end
						LastCommand[#LastCommand + 1] = {Command, plr, Args, LoadedCommand.CmdExtra}
					end);
					if (not Success and Debug) then
						warn(Err);
					end
				else
					Utils.Notify(plr, "Error", ("couldn't find the command %s"):format(Command));
				end
			end
		end)
	end

	--IMPORT [uimore]
	-- make all elements not visible
	Notification.Visible = false
	Stats.Visible = false
	Utils.SetAllTrans(CommandBar)
	Utils.SetAllTrans(ChatLogs)
	Utils.SetAllTrans(GlobalChatLogs)
	Utils.SetAllTrans(HttpLogs);
	Commands.Visible = false
	ChatLogs.Visible = false
	GlobalChatLogs.Visible = false
	HttpLogs.Visible = false

	-- make the ui draggable
	Utils.Draggable(Commands)
	Utils.Draggable(ChatLogs)
	Utils.Draggable(GlobalChatLogs)
	Utils.Draggable(HttpLogs);

	-- parent ui
	ParentGui(UI);
	Connections.UI = {}
	-- tweencommand bar on prefix
	local Times = #LastCommand
	AddConnection(UserInputService.InputBegan:Connect(function(Input, GameProccesed)
		if (Input.KeyCode == CommandBarPrefix and (not GameProccesed)) then
			CommandBarOpen = not CommandBarOpen

			local TransparencyTween = CommandBarOpen and Utils.TweenAllTransToObject or Utils.TweenAllTrans
			local Tween = TransparencyTween(CommandBar, .5, CommandBarTransparencyClone)

			-- tween position
			if (CommandBarOpen) then
				if (not Draggable) then
					Utils.Tween(CommandBar, "Quint", "Out", .5, {
						Position = UDim2.new(0.5, WideBar and -200 or -100, 1, -110) -- tween -110
					})
				end

				local Connections = getconnections(UserInputService.TextBoxFocused);
				for i, v in next, Connections do
					v:Disable();
				end
				for i, v in next, getconnections(UserInputService.TextBoxFocusReleased) do
					v:Disable();
				end

				CommandBar.Input:CaptureFocus();
				coroutine.wrap(function()
					wait()
					CommandBar.Input.Text = ""
				end)()

				if (next(Connections)) then
					for i, v in next, Connections do
						v:Enable();
					end
				end
			else
				if (not Draggable) then
					Utils.Tween(CommandBar, "Quint", "Out", .5, {
						Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5) -- tween 5
					})
				end
			end
		elseif (not GameProccesed and ChooseNewPrefix) then
			CommandBarPrefix = Input.KeyCode
			Utils.Notify(LocalPlayer, "New Prefix", "Your new prefix is: " .. tostring(Input.KeyCode):split(".")[3]);
			ChooseNewPrefix = false
			if (writefile) then
				Utils.Notify(LocalPlayer, nil, "use command saveprefix to save your prefix");
			end
		elseif (GameProccesed and CommandBarOpen) then
			if (Input.KeyCode == Enum.KeyCode.Up) then
				Times = Times >= 3 and Times or Times + 1
				CommandBar.Input.Text = LastCommand[Times][1] .. " "
				CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 2
			end
			if (Input.KeyCode == Enum.KeyCode.Down) then
				Times = Times <= 1 and 1 or Times - 1
				CommandBar.Input.Text = LastCommand[Times][1] .. " "
				CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 2
			end
		end
	end), Connections.UI, true);

	Utils.Click(Commands.Close, "TextColor3")
	Utils.Click(ChatLogs.Clear, "BackgroundColor3")
	Utils.Click(ChatLogs.Save, "BackgroundColor3")
	Utils.Click(ChatLogs.Toggle, "BackgroundColor3")
	Utils.Click(ChatLogs.Close, "TextColor3")

	Utils.Click(GlobalChatLogs.Clear, "BackgroundColor3")
	Utils.Click(GlobalChatLogs.Save, "BackgroundColor3")
	Utils.Click(GlobalChatLogs.Toggle, "BackgroundColor3")
	Utils.Click(GlobalChatLogs.Close, "TextColor3")

	Utils.Click(HttpLogs.Clear, "BackgroundColor3")
	Utils.Click(HttpLogs.Save, "BackgroundColor3")
	Utils.Click(HttpLogs.Toggle, "BackgroundColor3")
	Utils.Click(HttpLogs.Close, "TextColor3")

	-- close tween commands
	AddConnection(Commands.Close.MouseButton1Click:Connect(function()
		local Tween = Utils.TweenAllTrans(Commands, .25)

		Tween.Completed:Wait()
		Commands.Visible = false
	end), Connections.UI, true);

	-- command search
	AddConnection(Commands.Search:GetPropertyChangedSignal("Text"):Connect(function()
		local Text = Commands.Search.Text
		for _, v in next, Commands.Frame.List:GetChildren() do
			if (v:IsA("Frame")) then
				local Command = v.CommandText.Text

				v.Visible = string.find(string.lower(Command), Text, 1, true)
			end
		end

		Commands.Frame.List.CanvasSize = UDim2.fromOffset(0, Commands.Frame.List.UIListLayout.AbsoluteContentSize.Y)
	end), Connections.UI, true);

	-- close chatlogs
	AddConnection(ChatLogs.Close.MouseButton1Click:Connect(function()
		local Tween = Utils.TweenAllTrans(ChatLogs, .25)

		Tween.Completed:Wait()
		ChatLogs.Visible = false
	end), Connections.UI, true);
	AddConnection(GlobalChatLogs.Close.MouseButton1Click:Connect(function()
		local Tween = Utils.TweenAllTrans(GlobalChatLogs, .25)

		Tween.Completed:Wait()
		GlobalChatLogs.Visible = false
	end), Connections.UI, true);
	AddConnection(HttpLogs.Close.MouseButton1Click:Connect(function()
		local Tween = Utils.TweenAllTrans(GlobalChatLogs, .25)

		Tween.Completed:Wait()
		GlobalChatLogs.Visible = false
	end), Connections.UI, true);

	ChatLogs.Toggle.Text = ChatLogsEnabled and "Enabled" or "Disabled"
	GlobalChatLogs.Toggle.Text = ChatLogsEnabled and "Enabled" or "Disabled"
	HttpLogs.Toggle.Text = HttpLogsEnabled and "Enabled" or "Disabled"


	-- enable chat logs
	AddConnection(ChatLogs.Toggle.MouseButton1Click:Connect(function()
		ChatLogsEnabled = not ChatLogsEnabled
		ChatLogs.Toggle.Text = ChatLogsEnabled and "Enabled" or "Disabled"
	end), Connections.UI, true);
	AddConnection(GlobalChatLogs.Toggle.MouseButton1Click:Connect(function()
		GlobalChatLogsEnabled = not GlobalChatLogsEnabled
		GlobalChatLogs.Toggle.Text = GlobalChatLogsEnabled and "Enabled" or "Disabled"
	end), Connections.UI, true);
	AddConnection(HttpLogs.Toggle.MouseButton1Click:Connect(function()
		HttpLogsEnabled = not HttpLogsEnabled
		HttpLogs.Toggle.Text = HttpLogsEnabled and "Enabled" or "Disabled"
	end), Connections.UI, true);

	-- clear chat logs
	AddConnection(ChatLogs.Clear.MouseButton1Click:Connect(function()
		Utils.ClearAllObjects(ChatLogs.Frame.List)
		ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
	end), Connections.UI, true);
	AddConnection(GlobalChatLogs.Clear.MouseButton1Click:Connect(function()
		Utils.ClearAllObjects(GlobalChatLogs.Frame.List)
		GlobalChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
	end), Connections.UI, true);
	AddConnection(HttpLogs.Clear.MouseButton1Click:Connect(function()
		Utils.ClearAllObjects(HttpLogs.Frame.List)
		HttpLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
	end), Connections.UI, true);

	-- chat logs search
	AddConnection(ChatLogs.Search:GetPropertyChangedSignal("Text"):Connect(function()
		local Text = ChatLogs.Search.Text

		for _, v in next, ChatLogs.Frame.List:GetChildren() do
			if (not v:IsA("UIListLayout")) then
				local Message = v.Text:split(": ")[2]
				v.Visible = string.find(string.lower(Message), Text, 1, true)
			end
		end

		ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, ChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y)
	end), Connections.UI, true);

	AddConnection(GlobalChatLogs.Search:GetPropertyChangedSignal("Text"):Connect(function()
		local Text = GlobalChatLogs.Search.Text

		for _, v in next, GlobalChatLogs.Frame.List:GetChildren() do
			if (not v:IsA("UIListLayout")) then
				local Message = v.Text

				v.Visible = string.find(string.lower(Message), Text, 1, true)
			end
		end
	end), Connections.UI, true);

	AddConnection(HttpLogs.Search:GetPropertyChangedSignal("Text"):Connect(function()
		local Text = HttpLogs.Search.Text

		for _, v in next, HttpLogs.Frame.List:GetChildren() do
			if (not v:IsA("UIListLayout")) then
				local Message = v.Text
				v.Visible = string.find(string.lower(Message), Text, 1, true)
			end
		end
	end), Connections.UI, true);

	AddConnection(ChatLogs.Save.MouseButton1Click:Connect(function()
		local GameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
		local String =  ("Fates Admin Chatlogs for %s (%s)\n\n"):format(GameName, os.date());
		local TimeSaved = tostring(os.date("%x")):gsub("/","-") .. " " .. tostring(os.date("%X")):gsub(":","-");
		local Name = ("fates-admin/chatlogs/%s (%s).txt"):format(GameName, TimeSaved);
		for i, v in next, ChatLogs.Frame.List:GetChildren() do
			if (not v:IsA("UIListLayout")) then
				String = ("%s%s\n"):format(String, v.Text);
			end
		end
		writefile(Name, String);
		Utils.Notify(LocalPlayer, "Saved", "Chat logs saved!");
	end), Connections.UI, true);

	AddConnection(HttpLogs.Save.MouseButton1Click:Connect(function()
		print("saved");
	end), Connections.UI, true);

	-- auto correct
	AddConnection(CommandBar.Input:GetPropertyChangedSignal("Text"):Connect(function() -- make it so that every space a players name will appear
		CommandBar.Input.Text = CommandBar.Input.Text
		local Text = CommandBar.Input.Text
		local Prediction = CommandBar.Input.Predict
		local PredictionText = Prediction.Text

		local Args = string.split(Text, " ")

		Prediction.Text = ""
		if (Text == "") then
			return
		end

		local FoundCommand = false
		local FoundAlias = false
		CommandArgs = CommandArgs or {}
		if (not CommandsTable[Args[1]]) then
			for _, v in next, CommandsTable do
				local CommandName = v.Name
				local Aliases = v.Aliases
				local FoundAlias

				if (Utils.MatchSearch(Args[1], CommandName)) then -- better search
					Prediction.Text = CommandName
					CommandArgs = v.Args or {}
					break
				end

				for _, v2 in next, Aliases do
					if (Utils.MatchSearch(Args[1], v2)) then
						FoundAlias = true
						Prediction.Text = v2
						CommandArgs = v2.Args or {}
						break
					end

					if (FoundAlias) then
						break
					end
				end
			end
		end

		for i, v in next, Args do -- make it get more players after i space out
			if (i > 1 and v ~= "") then
				local Predict = ""
				if (#CommandArgs >= 1) then
					for i2, v2 in next, CommandArgs do
						if (v2:lower() == "player") then
							Predict = Utils.GetPlayerArgs(v) or Predict;
						else
							Predict = Utils.MatchSearch(v, v2) and v2 or Predict
						end
					end
				else
					Predict = Utils.GetPlayerArgs(v) or Predict;
				end
				Prediction.Text = string.sub(Text, 1, #Text - #Args[#Args]) .. Predict
				local split = v:split(",");
				if (next(split)) then
					for i2, v2 in next, split do
						if (i2 > 1 and v2 ~= "") then
							local PlayerName = Utils.GetPlayerArgs(v2)
							Prediction.Text = string.sub(Text, 1, #Text - #split[#split]) .. (PlayerName or "")
						end
					end
				end
			end
		end

		if (string.find(Text, "\t")) then -- remove tab from preditction text also
			CommandBar.Input.Text = PredictionText
			CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 1
		end
	end))

	if (ChatBar) then
		AddConnection(ChatBar:GetPropertyChangedSignal("Text"):Connect(function() -- todo: add detection for /e
			local Text = ChatBar.Text
			local Prediction = PredictionClone
			local PredictionText = PredictionClone.Text

			local Args = string.split(table.concat(table.shift(Text:split(""))), " ");

			Prediction.Text = ""
			if (not string.startsWith(Text, Prefix)) then
				return
			end

			local FoundCommand = false
			local FoundAlias = false
			CommandArgs = CommandArgs or {}
			if (not rawget(CommandsTable, Args[1])) then
				for _, v in next, CommandsTable do
					local CommandName = v.Name
					local Aliases = v.Aliases
					local FoundAlias

					if (Utils.MatchSearch(Args[1], CommandName)) then -- better search
						Prediction.Text = Prefix .. CommandName
						FoundCommand = true
						CommandArgs = v.Args or {}
						break
					end

					for _, v2 in next, Aliases do
						if (Utils.MatchSearch(Args[1], v2)) then
							FoundAlias = true
							Prediction.Text = v2
							CommandArgs = v.Args or {}
							break
						end

						if (FoundAlias) then
							break
						end
					end
				end
			end

			for i, v in next, Args do -- make it get more players after i space out
				if (i > 1 and v ~= "") then
					local Predict = ""
					if (#CommandArgs >= 1) then
						for i2, v2 in next, CommandArgs do
							if (v2:lower() == "player") then
								Predict = Utils.GetPlayerArgs(v) or Predict;
							else
								Predict = Utils.MatchSearch(v, v2) and v2 or Predict
							end
						end
					else
						Predict = Utils.GetPlayerArgs(v) or Predict;
					end
					Prediction.Text = string.sub(Text, 1, #Text - #Args[#Args]) .. Predict
					local split = v:split(",");
					if (next(split)) then
						for i2, v2 in next, split do
							if (i2 > 1 and v2 ~= "") then
								local PlayerName = Utils.GetPlayerArgs(v2)
								Prediction.Text = string.sub(Text, 1, #Text - #split[#split]) .. (PlayerName or "")
							end
						end
					end
				end
			end

			if (string.find(Text, "\t")) then -- remove tab from preditction text also
				ChatBar.Text = PredictionText
				ChatBar.CursorPosition = #ChatBar.Text + 2
			end
		end))
	end
	--END IMPORT [uimore]

	WideBar = false
	Draggable = false
	AddConnection(CommandBar.Input.FocusLost:Connect(function()
		for i, v in next, getconnections(UserInputService.TextBoxFocusReleased) do
			v:Enable();
		end

		local Text = string.trim(CommandBar.Input.Text);
		local CommandArgs = Text:split(" ");

		CommandBarOpen = false

		if (not Draggable) then
			Utils.TweenAllTrans(CommandBar, .5)
			Utils.Tween(CommandBar, "Quint", "Out", .5, {
				Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5); -- tween 5
			})
		end

		local Command, LoadedCommand = CommandArgs[1], LoadCommand(CommandArgs[1]);
		local Args = table.shift(CommandArgs);

		if (LoadedCommand and Command ~= "") then
			if (LoadedCommand.ArgsNeeded > #Args) then
				return Utils.Notify(plr, "Error", ("Insuficient Args (you need %d)"):format(LoadedCommand.ArgsNeeded))
			end

			local Success, Err = pcall(function()
				local Executed = LoadedCommand.Function()(LocalPlayer, Args, LoadedCommand.CmdExtra);
				if (Executed) then
					Utils.Notify(plr, "Command", Executed);
				end
				if (#LastCommand == 3) then
					LastCommand = table.shift(LastCommand);
				end
				LastCommand[#LastCommand + 1] = {Command, LocalPlayer, Args, LoadedCommand.CmdExtra}
			end);
			if (not Success and Debug) then
				warn(Err);
			end
		else
			Utils.Notify(plr, "Error", ("couldn't find the command %s"):format(Command));
		end

	end), Connections.UI, true);

	local CurrentPlayers = Players:GetPlayers();

	local PlayerAdded = function(plr)
		RespawnTimes[plr.Name] = tick();
		plr.CharacterAdded:Connect(function()
			RespawnTimes[plr.Name] = tick();
		end)
		local Tag = Utils.CheckTag(plr);
		if (Tag and plr ~= LocalPlayer) then
			Tag.Player = plr
			Utils.Notify(LocalPlayer, "Admin", ("%s (%s) has joined"):format(Tag.Name, Tag.Tag));
			Utils.AddTag(Tag);
		end
	end

	table.forEach(CurrentPlayers, function(i,v)
		PlrChat(i,v);
		PlayerAdded(v);
	end);

	AddConnection(Players.PlayerAdded:Connect(function(plr)
		PlrChat(#Connections.Players + 1, plr);
		PlayerAdded(plr);
	end))

	AddConnection(Players.PlayerRemoving:Connect(function(plr)
		if (Connections.Players[plr.Name]) then
			if (Connections.Players[plr.Name].ChatCon) then
				Connections.Players[plr.Name].ChatCon:Disconnect();
			end
			Connections.Players[plr.Name] = nil
		end
		if (RespawnTimes[plr.Name]) then
			RespawnTimes[plr.Name] = nil
		end
	end))

	getgenv().F_A = {
		Loaded = true,
		Utils = Utils,
		PluginLibrary = PluginLibrary
	}

	Utils.Notify(LocalPlayer, "Loaded", ("script loaded in %.3f seconds"):format((tick() or os.clock()) - start));
	Utils.Notify(LocalPlayer, "Welcome", "'cmds' to see all of the commands");
end)


AdminSection:NewButton("Cmd-X", "Runs CMD-X", function()

	loadstring(game:HttpGet("https://pastebin.com/raw/HFkyyd1H",true))()
end)

AdminSection:NewButton("InfiniteYield", "Runs IY", function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)





PlayerSection:NewSlider("Walkspeed", "Changes Player's Walkspeed", 500, 1, function(s) -- 500 (MaxValue) | 0 (MinValue)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)


PlayerSection:NewSlider("JumpPower", "Changes Player's JumpPower", 600, 5, function(s) -- 500 (MaxValue) | 0 (MinValue)
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)


PlayerSection:NewSlider("Gravity", "Changes Game's Gravity, Only affects player.", 196.2, 20, function(s) -- 500 (MaxValue) | 0 (MinValue)
	game.Workspace.Gravity = s
end)

